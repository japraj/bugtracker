{"version":3,"sources":["constants/user/index.ts","constants/date/index.ts","constants/notification/index.ts","constants/ticket/index.ts","seed/predefined.ts","seed/index.ts","flux/slices/authSlice.ts","constants/api/index.tsx","constants/table/index.ts","flux/slices/contextSlice.ts","constants/routes/index.tsx","flux/slices/homeSlice.ts","routes/history.ts","constants/demo/index.ts","flux/slices/demoSlice.ts","api/endpoints/CreateTicket.ts","flux/slices/ticketSlice.ts","api/endpoints/LoadTicketById.ts","api/endpoints/UpdateTicket.ts","api/endpoints/AddComment.ts","api/endpoints/DeleteTicket.ts","flux/slices/userSlice.ts","api/endpoints/GetUserByTag.ts","api/endpoints/UpdateUserRank.ts","api/endpoints/UpdateUserAvatar.ts","api/endpoints/Logout.ts","api/endpoints/ReadNotifications.ts","api/index.ts","api/endpoints/InitialLoad.ts","api/endpoints/LoadSession.ts","components/global/loadingRing/LoadingRing.tsx","components/global/loadingRing/FancyLoading.tsx","components/container/contentWrapper/index.tsx","components/global/toastContainer/index.tsx","components/global/logo/index.tsx","components/global/navigation/topNav/styles.tsx","components/global/navigation/topNav/index.tsx","components/global/avatar/index.tsx","components/input/linkButton/index.tsx","components/global/userLink/styles.tsx","components/global/userLink/index.tsx","components/global/notification/styles.tsx","components/global/timestamp/index.tsx","components/global/notification/index.tsx","components/container/modalContent/index.tsx","components/global/profile/notificationSet/styles.tsx","components/global/profile/notificationSet/index.tsx","components/global/profile/styles.tsx","components/global/profile/index.tsx","components/global/navigation/sideNav/styles.tsx","components/global/navigation/sideNav/index.tsx","flux/slices/navigationSlice.ts","constants/navigation/index.ts","components/global/navigation/index.tsx","components/global/ticketTag/index.tsx","components/global/statusIndicator/index.tsx","components/global/stackedUserLinks/index.tsx","components/global/editModal/userLinkGrid/styles.tsx","components/global/editModal/userLinkGrid/index.tsx","constants/global/index.ts","constants/materialui/index.ts","components/input/select/styles.tsx","components/input/select/index.tsx","components/input/textfieldButton/index.tsx","components/global/containerLabel/index.tsx","components/global/formModal/imageLinks/styles.tsx","components/global/formModal/imageLinks/index.tsx","components/input/button/index.tsx","components/input/editControls/index.tsx","components/global/formModal/styles.tsx","components/global/formModal/index.tsx","components/global/editModal/deletionModal/index.tsx","components/global/editModal/styles.tsx","components/global/editModal/index.tsx","components/global/image/index.tsx","components/global/ticket/imageGrid/index.tsx","components/global/ticket/commentBox/index.tsx","components/global/ticket/communications/index.tsx","components/global/ticket/styles.tsx","components/global/ticket/index.tsx","routes/protectedRoute/index.tsx","components/container/widget/index.tsx","components/global/iterableWidget/styles.tsx","components/global/iterableWidget/index.tsx","components/global/recentActivity/index.tsx","components/input/textfield/styles.tsx","components/input/textfield/index.tsx","routes/home/ticketTable/pagination/styles.tsx","routes/home/ticketTable/pagination/index.tsx","routes/home/ticketTable/tabs/styles.tsx","routes/home/ticketTable/tabs/index.tsx","components/global/collapsedTicket/styles.tsx","components/global/collapsedTicket/index.tsx","components/input/search/styles.tsx","components/input/search/index.tsx","routes/home/ticketTable/index.tsx","flux/slices/creationSlice.ts","routes/home/creationModal/index.tsx","routes/home/createLink/styles.tsx","routes/home/createLink/index.tsx","routes/home/styles.tsx","routes/home/index.tsx","flux/slices/dashboardSlice.ts","routes/dashboard/infoWidget/index.tsx","routes/dashboard/pieChart/index.tsx","routes/dashboard/lineChart/index.tsx","routes/dashboard/styles.tsx","routes/dashboard/index.tsx","components/container/darkWidget/index.tsx","components/global/hyperLink/index.tsx","routes/errorPage/index.tsx","routes/formPage/styles.tsx","routes/formPage/index.tsx","routes/login/index.tsx","routes/register/index.tsx","routes/demoLogin/index.tsx","routes/forgotPassword/index.tsx","routes/resetPassword/index.tsx","routes/user/profileCard/index.tsx","routes/user/rank/index.tsx","routes/user/update/index.tsx","routes/user/styles.tsx","routes/user/index.tsx","routes/Routes.tsx","app/App.tsx","flux/store.ts","app/index.tsx","serviceWorker.ts","index.tsx"],"names":["Rank","getDateFromISO","dateStr","Date","charAt","length","getUserFromDTO","dto","Object","assign","tag","profileImg","avatar","rank","generateLocalUserFromDTO","getNotificationById","authenticated","notifications","tickets","assigned","info","Ranks","numeric","name","badgeColor","nameColor","getRankObj","index","Error","find","Variant","sortNotifications","dateOnly","dateById","map","n","id","date","getTime","sort","n1","n2","new","getNotificationFromDTO","author","creationDate","message","type","value","ticketId","ticketID","read","Status","Severity","Reproducibility","TypeLabel","generateGlobalMessage","notification","parseInt","getRandom","set","Math","floor","random","randomInt","maxValue","randomBool","User","Developer","Manager","Admin","titles","comments","localUserInfo","u","shuffle","elt","j","i","randomDate","generateDataSet","users","activity","forEach","jump","updateDate","ticket","isAssigned","devs","activitySubset","assignable","filter","activityIds","start","push","genIntSet","activityIndex","titleIndex","commentIndex","typeLabel","title","toISOString","description","reproducibility","severity","status","assignees","imageLinks","slice","includes","indexOf","concat","toString","values","a","arrayToNormalized","key","byKey","reduce","acc","allKeys","element","initialState","loaded","user","authSlice","createSlice","reducers","finishedLoading","state","loadUser","action","payload","updateAvatar","viewNotifications","logout","setDemo","actions","selectAuthSlice","authentication","selectUser","selectUserRank","selectAuthenticated","userRoute","ticketRoute","activityRoute","loadRoute","Endpoints","USER_BY_TAG","GET_ALL_USERS","REGISTER","LOGIN","LOGOUT","UPDATE_USER","TICKET_BY_ID","GET_COLLAPSED","CREATE_TICKET","UPDATE_TICKET","DELETE_TICKET","ADD_COMMENT","GET_ALL_ACTIVITY","READ_ALL_NOTIFICATIONS","LOAD_SESSION","INITIAL_LOAD","SUBSCRIBE","patchToOperation","patch","path","op","Sort","getCollapsedTicketFromDTO","initialNormalized","lastUpdate","stores","collapsedTickets","newReducer","origin","keyProp","normalized","contextSlice","addCollapsedTickets","addUsers","addActivity","removeCollapsedTicket","splice","updateStoredUser","updateTime","seedData","t","totalComments","activityId","selectAllElements","context","selectElementsByKeys","keys","harmonizeContext","forceUpdate","updatePeriod","dispatch","getState","demo","demoMode","fetch","method","then","res","json","undefined","catch","Routes","sortSelectOptions","NEW","label","OLD","SEVERITY","STATUS","recentActivity","tabIndex","pageIndex","nodesPerPage","totalPages","homeSlice","setRecentActivity","setTabIndex","setPageIndex","setNodesPerPage","setTotalPages","setSort","selectRecentActivity","home","selectTabIndex","selectPageIndex","selectTotalPages","selectHomeSlice","createHashHistory","getNextId","v","current","demoSlice","initDemoSlice","addTicket","updateDemoUser","updateUserActivity","removeTicketRefs","activities","selectDemoMode","createTicket","normal","headers","Accept","body","JSON","stringify","toast","error","mappedTicket","unresolved","creationActivity","ticketSlice","displayModal","failedImages","currentTicket","displayEditModal","editedTicket","toggleDisplay","addComment","replace","loadTicket","reportLoadingFailure","toggleEditDisplay","updateEdit","wipeLocalChanges","forceCloseDisplays","selectDisplayed","selectFailures","selectTicket","selectTicketSlice","selectAvailable","universe","subset","loadTicketById","err","history","DNE404","generateMap","obj","keySet","valueSet","mapModelsToPatchArray","editedModel","persistentModel","patchSet","editedMap","persistentMap","updateTicket","constructor","Array","API","success","patches","toLowerCase","ids","newTicket","newComment","e","deleteTicket","deltNotification","loadUserByTag","createAsyncThunk","thunk","rejectWithValue","userSlice","loading","stagedUrl","updateUser","setStaged","reducer","prepare","extraReducers","builder","addCase","pending","fulfilled","rejected","selectLoadState","selectUserInfo","selectActivity","selectTickets","selectStaged","getUserByTag","updateUserRank","newUser","updateUserAvatar","logoutUser","HOME","DEMO","window","location","reload","readNotifications","selectBranch","endpoint","api","initialLoad","ceil","session","finally","setInterval","loadSession","Tag","render","RingWrapper","props","React","Component","defaultProps","spin","keyframes","selectLength","styled","div","LoadWrapper","FancyRing","main","sideNavWidth","ToastContainer","attrs","limit","SvgIcon","viewBox","d","TopNav","nav","Label","h1","expandSideNav","IconButton","edge","color","aria-label","onClick","style","fontSize","innerWidth","className","getHashCode","input","hash","charCodeAt","width","imgLength","height","small","large","Avatar","src","backgroundColor","children","Link","ProfileWrapper","ProfileTag","h3","showTag","marginLeft","PopperContent","PopperTag","useState","anchorEl","setAnchorEl","open","Boolean","useSelector","userTag","styleConfig","aria-owns","aria-haspopup","event","currentTarget","onMouseLeave","showImg","Fragment","internalSpacing","tagSize","Popper","zIndex","transition","TransitionProps","Fade","timeout","Chip","variant","size","to","USER","onRedirect","Cell","commentVariant","CellText","ShortDate","timeString","toLocaleTimeString","substring","toLocaleDateString","shortenDate","FullDate","toLocaleString","formattedDate","p","h6","enableCommentVariant","useDispatch","commentStyling","isValidId","Number","MODAL","generateModalMessage","GLOBAL","generateMessage","ModalContentWrapper","NotificationWrapper","EmptyNotificationsBanner","Profile","collapsed","ProfileWidgetWrapper","setOpen","notificationsAmount","close","notificationsWidget","Badge","badgeContent","overlap","max","anchorOrigin","vertical","horizontal","Icon","Modal","onClose","aria-labelledby","aria-describedby","showNotificationsOnly","toggleCollapsed","SideNav","GlassPane","NavLink","collapsedWidth","extendedWidth","navItemSet","logoutItem","useLocation","pathname","NavLinkSet","navItem","text","ButtonBase","focusRipple","fontFamily","iconName","navigationSlice","toggleCollapse","selectCollapsed","navigation","selectSideNavWidth","HomeItem","LoginItem","RegisterItem","DashboardItem","DASHBOARD","LogoutItem","defaultNavSet","authNavSet","toggle","TicketTag","StatusIndicator","styles","rightMargin","leftMargin","AssigneesWrapper","fallback","Assignees","maxLinks","AvatarGroup","UserLinkGrid","SetWrapper","UserLinkWrapper","Clickable","iconBackgroundColor","keyToIndex","givenKey","givenEnum","mapEnumToSelectOption","prefix","output","isNaN","word","toUpperCase","theme","createMuiTheme","palette","primary","secondary","useStyles","makeStyles","createStyles","root","display","flexWrap","margin","spacing","withoutLabel","marginTop","textField","FormWrapper","Form","FormControl","fixedwidth","disabled","mobilewidth","options","internalVal","setInternalVal","ThemeProvider","fixedWidth","mobileWidth","Select","labelId","onChange","target","option","MenuItem","consumeEvent","preventDefault","stopPropagation","inputValue","setInputValue","defaultValue","submit","onSubmit","clearInputOnSubmit","Container","InputLabel","OutlinedInput","newValue","onKeyDown","editable","keyCode","endAdornment","InputAdornment","position","onMouseDown","buttonIconName","labelWidth","Fieldset","aria-hidden","Legend","Span","fieldset","legend","span","Action","ImageLinkSet","ImageLink","EmptyMessage","change","imageLink","REMOVE","ADD","newSet","newLink","Button","ControlsWrapper","injectable","Cancel","showCancel","cancelCallback","Submit","submitCallback","submitText","ContentWrapper","SelectWrapper","SelectGrid","TextWrapper","disableScrollLock","ariaLabel","ariaDesc","displaySelects","displayDevSelects","update","disableStatus","displayAuthor","TextField","rows","defaultTitle","multiline","defaultDesc","defaultLinks","newLinks","injectedNode","submitButtonText","controlsInjectable","TicketFormSelect","classes","isOpen","assignState","setState","newState","ModalContent","clsx","required","valid","Delete","ButtonWrapper","show","EditIcon","AssignmentContainer","available","isAuthor","moveUser","modalImgLength","errored","setErrored","zoomed","setZoomed","ImageNode","styledProps","ImageWrapper","hideOnError","padding","Image","alt","onError","ZoomedImage","img","imageSet","ImageGrid","setValue","CommentBox","LOGIN_REQUIRED","form","ActivityWrapper","TicketWrapper","TicketSection","SectionContent","TicketHeader","FieldGrid","Description","failures","mobileDisplay","activitySelector","content","TicketField","requireAuth","component","exact","WidgetWrapper","section","WidgetHeader","WidgetSection","Fallback","Header","addmediaquery","Title","PaginationContainer","page","setPage","nodeClassName","nodes","elementsPerPage","wrap","wrapInSection","elementProp","elementPropName","node","wrapperElement","emptySetFallback","TablePagination","count","onChangePage","newPage","rowsPerPage","notificationSet","NotificationCell","InputWrapper","setDefaultValue","newVal","setNewVal","inputWidth","showLabel","labelText","Input","placeholder","TablePaginationContainer","CustomPagination","Pagination","MobileWrapper","MobileFloater","perPage","paginator","siblingCount","shape","goTo","desktopLayout","mobileLayout","TabContainer","TabSet","ul","TableTab","li","userRank","tabSet","selectedIndex","tabs","tab","requiredRank","TicketTitle","TicketBody","TicketBodyCell","SearchWrapper","SearchIcon","getRankFromUser","query","setQuery","resolved","ticketSet","t1","t2","applySort","cur","result","TableControls","creationSlice","updateNewTicket","creation","selectNewTicket","LinkWrapper","LinkWidget","HomeWrapper","Aside","MiscContainer","infoData","statusData","severityData","lineLabels","lineData","storeData","selectDashboardSlice","dashboard","InfoIcon","Info","data","defaults","global","defaultFontColor","defaultFontSize","labels","datasets","backgroundColors","hoverBackgroundColor","hoverBackgroundColors","responsive","maintainAspectRatio","align","fill","lineTension","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","scales","xAxes","yAxes","ticks","beginAtZero","InfoContainer","PieChartContainer","LineChartContainer","LoadingWrapper","Page","dashboardSlice","wip","unassigned","dataSet","toDateString","y","connect","shouldComponentUpdate","DarkWidgetWrapper","DarkWidget","DarkWidgetHeader","DarkWidgetSection","ErrorPage","header","bodyText","linkHref","linkText","FormWidget","FormHeader","FormSection","setMargin","fields","fieldErrors","showPassword","setValues","handleClickShowPassword","handleMouseDownPassword","handleFieldChange","copy","fieldNodes","formFields","formField","autoComplete","suggest","formHeader","displayButtonSibling","buttonText","buttonSibling","setError","FORGOT_PASS","password","emailError","usernameError","passwordError","evaluateError","errors","msg","getBlame","match","email","Content","autoClose","setVisibility","setFields","params","token","ProfileCard","CardBody","clientRank","setRank","client","Update","WidgetColumn","WidgetRow","useEffect","CollapsedTicketComp","Home","RESET_PASS","ResetPassword","INVALID_TOKEN","Context","createContext","hot","Provider","FancyLoading","store","configureStore","authReducer","contextReducer","navigationReducer","homeReducer","ticketReducer","creationReducer","userReducer","dashboardReducer","demoReducer","listener","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.a043b0f1.chunk.js","sourcesContent":["import { Notification } from \"../notification\";\r\n\r\nexport interface UserInfo {\r\n  profileImg: string;\r\n  tag: string;\r\n  rank: number;\r\n}\r\n// Global User Object, used for UserLinks/author of an issue.\r\n//  Note: tags are unique!\r\n\r\nexport interface User {\r\n  authenticated: boolean;\r\n  notifications: Notification[];\r\n  tickets: number[];\r\n  assigned: number[];\r\n  info: UserInfo;\r\n}\r\n// Local User (the user that is using the client)\r\n\r\nexport interface LoadUserPayload {\r\n  tag: string;\r\n  rank: number;\r\n  profileImg: string;\r\n  activity: number[];\r\n  tickets: number[];\r\n}\r\n// Server User Obj - used for user pages\r\n\r\nexport const getUserFromDTO = (dto: any) =>\r\n  Object.assign({\r\n    tag: dto.tag,\r\n    profileImg: dto.avatar,\r\n    rank: dto.rank,\r\n  });\r\n\r\nexport const generateLocalUserFromDTO = (\r\n  dto: any,\r\n  getNotificationById: (ids: number[]) => Notification[]\r\n) =>\r\n  Object.assign({\r\n    authenticated: true,\r\n    notifications: getNotificationById(dto.notifications),\r\n    tickets: dto.tickets,\r\n    assigned: dto.assigned,\r\n    info: {\r\n      tag: dto.tag,\r\n      rank: dto.rank,\r\n      profileImg: dto.avatar,\r\n    },\r\n  });\r\n\r\nexport interface RankObject {\r\n  // numeric representation\r\n  numeric: number;\r\n  name: string;\r\n  // Background-color of the badge that appears in the popper\r\n  badgeColor: string;\r\n  // Username h1 text-color\r\n  nameColor: string;\r\n}\r\n\r\n// note: used to have colored names; decided that color-less names look better.\r\n// the old names are written in comments beside the current names for easy\r\n// experimentation\r\nexport const Ranks: RankObject[] = [\r\n  {\r\n    numeric: 0,\r\n    name: \"Blacklisted\",\r\n    badgeColor: \"null\",\r\n    nameColor: \"lightgrey\",\r\n  },\r\n  {\r\n    numeric: 1,\r\n    name: \"User\",\r\n    badgeColor: \"grey\",\r\n    nameColor: \"white\", // white\r\n  },\r\n  {\r\n    numeric: 2,\r\n    name: \"Developer\",\r\n    badgeColor: \"lightblue\",\r\n    nameColor: \"white\", // brightblue\r\n  },\r\n  {\r\n    numeric: 3,\r\n    name: \"Manager\",\r\n    badgeColor: \"lightgreen\",\r\n    nameColor: \"white\", //brightgreen\r\n  },\r\n  {\r\n    numeric: 4,\r\n    name: \"Admin\",\r\n    badgeColor: \"darkred\",\r\n    nameColor: \"white\", // darkred\r\n  },\r\n];\r\n\r\nexport const getRankObj = (index: number): RankObject => {\r\n  if (index < 0 || index > 4) throw new Error(\"Index out of range\");\r\n  return Ranks.find((rank: RankObject) => rank.numeric === index)!;\r\n};\r\n\r\nexport enum Rank {\r\n  Blacklisted,\r\n  User,\r\n  Developer,\r\n  Manager,\r\n  Admin,\r\n}\r\n","export const getDateFromISO = (dateStr: string): Date => {\r\n  // const d: number[] = dateStr.split(/\\D/).map((s) => {\r\n  //   try {\r\n  //     return Number(s);\r\n  //   } catch {\r\n  //     return 0;\r\n  //   }\r\n  // });\r\n  // var date: Date = new Date(d[0], d[1] - 1, d[2], d[3], d[4], d[5]);\r\n  // date.setTime(date.getTime() - date.getTimezoneOffset() * 60 * 1000);\r\n  // return date;\r\n\r\n  // Main issue with the commented method is that i'm unsure whether subtracting the timezone offset works 100% of the time\r\n  // (or whether we need to add it in some cases)\r\n  return new Date(\r\n    dateStr.charAt(dateStr.length - 1) === \"Z\" ? dateStr : dateStr + \"Z\"\r\n  );\r\n};\r\n","import { getDateFromISO } from \"../date\";\r\nimport { getRankObj } from \"../user\";\r\n\r\n// A notification is just a record of a change\r\n// that was applied to an issue or user.\r\nexport interface Notification {\r\n  id: number;\r\n  date: string;\r\n  author: string;\r\n  message: number;\r\n  value: string;\r\n  ticketId: string;\r\n  new: boolean;\r\n}\r\n\r\n// Sorts notifications first by read/unread and then by date.\r\n// If the optional dateOnly param is true then do not sort by\r\n// new.\r\nexport const sortNotifications = (\r\n  notifications: Notification[],\r\n  dateOnly?: boolean\r\n): Notification[] => {\r\n  // Parse the dates in advance for efficiency (don't need to compute a date multiple times)\r\n  var dateById: { [id: number]: number } = {};\r\n  notifications.map((n) => {\r\n    dateById[n.id] = getDateFromISO(n.date).getTime();\r\n    return n;\r\n  });\r\n\r\n  notifications = notifications.sort(\r\n    (n1, n2) => dateById[n2.id] - dateById[n1.id]\r\n  );\r\n\r\n  return dateOnly\r\n    ? notifications\r\n    : notifications.sort((n1, n2) => {\r\n        if (n1.new && !n2.new) return -1;\r\n        else if (!n1.new && n2.new) return 1;\r\n        else return 0;\r\n      });\r\n};\r\n\r\nexport const getNotificationFromDTO = (dto: any): Notification =>\r\n  Object.assign({\r\n    id: dto.id,\r\n    author: dto.author,\r\n    date: dto.creationDate,\r\n    message: dto.type,\r\n    value: dto.new,\r\n    ticketId: dto.ticketID,\r\n    new: !dto.read,\r\n  });\r\n\r\nexport enum Variant {\r\n  GLOBAL,\r\n  MODAL,\r\n}\r\n\r\nexport const generateGlobalMessage = (notification: Notification): string => {\r\n  switch (notification.message) {\r\n    case 0:\r\n      return `created issue #${notification.ticketId}`;\r\n    case 1:\r\n      return `deleted an issue`;\r\n    case 2:\r\n      return `comented on issue #${notification.ticketId}`;\r\n    case 3:\r\n    case 4:\r\n    case 5:\r\n    case 6:\r\n    case 7:\r\n    case 8:\r\n    case 9:\r\n    case 10:\r\n      return `updated issue #${notification.ticketId}`;\r\n    case 11:\r\n      return `updated your rank to ${\r\n        getRankObj(parseInt(notification.value)).name\r\n      }`;\r\n    case 12:\r\n      return `updated your Avatar`;\r\n    default:\r\n      return `did something; #${notification.id}`;\r\n  }\r\n};\r\n\r\nexport const generateModalMessage = (notification: Notification): string => {\r\n  switch (notification.message) {\r\n    case 2:\r\n      return notification.value;\r\n    case 3:\r\n      return `updated the title`;\r\n    case 4:\r\n      return `updated the description`;\r\n    case 5:\r\n      return `updated this issue's status`;\r\n    case 6:\r\n      return `updated this issue's severity`;\r\n    case 7:\r\n      return `updated this issue's reproducibility`;\r\n    case 8:\r\n      return `updated this issue's tag`;\r\n    case 9:\r\n      return `updated this issue's assignees`;\r\n    case 10:\r\n      return `updated the attached links`;\r\n    default:\r\n      return generateGlobalMessage(notification);\r\n  }\r\n};\r\n","// This file is a collection of constants used throughout the app\r\nexport interface Ticket {\r\n  id: number;\r\n  typeLabel: number;\r\n  title: string;\r\n  author: string;\r\n  creationDate: string;\r\n  updateDate: string;\r\n  description: string;\r\n  reproducibility: number;\r\n  severity: number;\r\n  status: number;\r\n  assignees: string[];\r\n  imageLinks: string[];\r\n  activity: number[];\r\n}\r\n\r\nexport interface EditedTicket {\r\n  title: string;\r\n  description: string;\r\n  status: number;\r\n  severity: number;\r\n  reproducibility: number;\r\n  typeLabel: number;\r\n  imageLinks: string[];\r\n  assignees: string[];\r\n}\r\n\r\nexport interface NewTicket {\r\n  title: string;\r\n  description: string;\r\n  severity: number;\r\n  reproducibility: number;\r\n  typeLabel: number;\r\n  imageLinks: string[];\r\n}\r\n\r\nexport interface CollapsedTicket {\r\n  id: number;\r\n  typeLabel: number;\r\n  title: string;\r\n  author: string;\r\n  creationDate: string;\r\n  updateDate: string;\r\n  severity: number;\r\n  status: number;\r\n  comments: number;\r\n}\r\n// Collapsed tickets are found on the homepage;\r\n// they store only essential information about a ticket\r\n\r\nexport enum Status {\r\n  \"unresolved\",\r\n  \"work-in-progress\",\r\n  \"resolved\",\r\n}\r\n\r\nexport enum Severity {\r\n  \"trivial\",\r\n  \"minor\",\r\n  \"major\",\r\n}\r\n\r\nexport enum Reproducibility {\r\n  \"Always\",\r\n  \"Common\",\r\n  \"Uncommon\",\r\n  \"Rare\",\r\n  \"Never\",\r\n}\r\n\r\nexport enum TypeLabel {\r\n  \"Bug\",\r\n  \"Feature Request\",\r\n  \"Suggestion\",\r\n}\r\n\r\nexport const stringify = (ticket: CollapsedTicket): string =>\r\n  Object.keys(ticket).reduce(\r\n    (acc: string, cur: string, index: number, src: string[]) => {\r\n      var result: string = \"\";\r\n      var value: any = Object.values(ticket)[index];\r\n      switch (cur) {\r\n        case \"typeLabel\":\r\n          result = TypeLabel[value];\r\n          break;\r\n        case \"severity\":\r\n          result = Severity[value];\r\n          break;\r\n        case \"status\":\r\n          result = Status[value];\r\n          break;\r\n        case \"comments\":\r\n          break;\r\n        case \"id\":\r\n        case \"title\":\r\n        case \"author\":\r\n        case \"updateDate\":\r\n        default:\r\n          result = cur;\r\n          break;\r\n      }\r\n      return acc + \"\" + result;\r\n    },\r\n    \"\"\r\n  );\r\n\r\n// The below DTO Map functions do not do anything other than convert the given\r\n// variable to an object of a specific type. However, it is important that we\r\n// declare these map functions so that if we ever need to update a model,\r\n// we only need to update our mappings in one place.\r\nexport const getTicketFromDTO = (dto: any): Ticket => Object.assign({}, dto);\r\n\r\nexport const getCollapsedTicketFromDTO = (dto: any): CollapsedTicket =>\r\n  Object.assign({}, dto);\r\n","import { UserInfo, Rank } from \"../constants/user\";\r\n\r\nexport const getRandom = <T>(set: Array<T>): T =>\r\n  set[Math.floor(Math.random() * set.length)];\r\n\r\nexport const randomInt = (maxValue: number): number =>\r\n  Math.floor(Math.random() * (maxValue + 1));\r\n\r\nexport const randomString = (length: number): string => {\r\n  var str: string = \"\";\r\n  while (str.length < length) {\r\n    try {\r\n      str += \" \" + Math.random().toString(36).substr(3, 50);\r\n    } catch {}\r\n  }\r\n  return str;\r\n};\r\n\r\nexport const randomBool = (): boolean => Math.random() < 0.5;\r\n\r\nexport const User: UserInfo[] = [\r\n  {\r\n    tag: \"Patrick\",\r\n    profileImg:\r\n      \"https://external-content.duckduckgo.com/iu/?u=http%3A%2F%2Fen.spongepedia.org%2Fimages%2Fthumb%2Ff%2Ff3%2FPatrick_als_Kind.jpg%2F175px-Patrick_als_Kind.jpg&f=1&nofb=1\",\r\n    rank: Rank.User,\r\n  },\r\n  {\r\n    tag: \"Gary the Snail\",\r\n    profileImg:\r\n      \"https://external-content.duckduckgo.com/iu/?u=http%3A%2F%2Fstatic.tvtropes.org%2Fpmwiki%2Fpub%2Fimages%2Fgary_the_snail_reval_6504.jpg&f=1&nofb=1\",\r\n    rank: Rank.User,\r\n  },\r\n  {\r\n    tag: \"Squidward\",\r\n    profileImg:\r\n      \"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fvignette.wikia.nocookie.net%2Fbadcreepypasta%2Fimages%2F9%2F99%2FSquidward1.png%2Frevision%2Flatest%2Fscale-to-width-down%2F180%3Fcb%3D20160204012416&f=1&nofb=1\",\r\n    rank: Rank.Developer,\r\n  },\r\n  {\r\n    tag: \"Sandy Cheeks\",\r\n    profileImg:\r\n      \"https://external-content.duckduckgo.com/iu/?u=http%3A%2F%2Fimg2.wikia.nocookie.net%2F__cb20170427235459%2Fanimatedmusclewomen%2Fimages%2Fthumb%2Fd%2Fdc%2FSandy_in_SBSP_Season_10.png%2F130px-234%252C1049%252C0%252C720-Sandy_in_SBSP_Season_10.png&f=1&nofb=1\",\r\n    rank: Rank.Developer,\r\n  },\r\n  {\r\n    tag: \"Mr. Krabs\",\r\n    profileImg:\r\n      \"https://vignette.wikia.nocookie.net/nickelodeon/images/e/e2/SpongeBob-Mr-Krabs.jpg/revision/latest/scale-to-width-down/150?cb=20180104021929\",\r\n    rank: Rank.Manager,\r\n  },\r\n  {\r\n    tag: \"Plankton\",\r\n    profileImg:\r\n      \"https://external-content.duckduckgo.com/iu/?u=http%3A%2F%2Fmaincircle.s149435.gridserver.com%2Fwp-content%2Fuploads%2Fsites%2F5%2F2013%2F09%2F32.png&f=1&nofb=1\",\r\n    rank: Rank.Manager,\r\n  },\r\n  {\r\n    tag: \"Karen\",\r\n    profileImg:\r\n      \"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fvignette.wikia.nocookie.net%2Fspongebob%2Fimages%2F5%2F57%2FFriend_or_Foe_36.png%2Frevision%2Flatest%2Fscale-to-width-down%2F180%3Fcb%3D20130908170922&f=1&nofb=1\",\r\n    rank: Rank.Admin,\r\n  },\r\n  {\r\n    tag: \"Spongebob\",\r\n    profileImg:\r\n      \"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fvignette.wikia.nocookie.net%2Fsmashbroslawlorigins%2Fimages%2F4%2F47%2FSpongebob.png%2Frevision%2Flatest%3Fcb%3D20181103164034&f=1&nofb=1\",\r\n    rank: Rank.Admin,\r\n  },\r\n];\r\n\r\nexport const titles: string[] = [\r\n  \"I need help with this bug...\",\r\n  \"This is a Title\",\r\n  \"Never gonna give you up\",\r\n  \"Suggestion\",\r\n  \"Issue about Data Generation\",\r\n  \"Can we have cookies?\",\r\n  \"Want build instructions? See the github repo /japraj/bugtracker :o\",\r\n  \"Spongebob Squarepants Themed Data Generation!\",\r\n  \"Bugtracker Random Title\",\r\n  \"See the github repo for more!\",\r\n  \"Once upon a time\",\r\n  \"Please add this feature\",\r\n  \"Random Sequence of Characters\",\r\n  \"I like programming\",\r\n  \"Are you ready kids?\",\r\n  \"Built with C# and Typescript\",\r\n  \"React, Redux, Routing?\",\r\n  \"State Management Is Cool\",\r\n  \"Dataflow problems\",\r\n  \"Persistent Model not being Updated\",\r\n  \"Hello World\",\r\n  \"This application supports CRUDding of Posts, Users, and Comments!\",\r\n  \"Over 11k lines!\",\r\n  \"Lorem Ipsum Dolor\",\r\n];\r\n\r\nexport const comments: string[] = [\r\n  \"Hello\",\r\n  \"I can't seem to figure it out :(\",\r\n  \"This is a value\",\r\n  \"The back-end uses cookie based sessions for authorization and .Net Core Identity for authentication.\",\r\n  \"I tried to hack a toy car recently\",\r\n  \"The front-end primarily consists of functional components with hooks and makes heavy use of Material-UI, an open-source React component library.\",\r\n  \"Is this the Krusty Krab? No this is Patrick.\",\r\n  \"Word.\",\r\n  \"Sequence Of Filler Words\",\r\n  \"Lorem Ipsum Dolor\",\r\n  \"Placeholder text\",\r\n  \"I can't seem to reproduce this\",\r\n  \"Can you please provide some more details?\",\r\n  \"Try deleting this ticket through the edit menu (bottom right)\",\r\n  \"Take a look at the graphs in the dashboard menu!\",\r\n  \"The logout button is disabled :(\",\r\n  \"This application features authentication, authorization, and more!\",\r\n  \"Its been 84 years\",\r\n  \"Randomized Sequence of Characters\",\r\n  \"Did you know, you can click on a username to get a popup??\",\r\n  \"Did you know, you can click on a username to get a popup??\",\r\n  \"There is even a searchbar in the home page!\",\r\n  \"You can register an account and login, but that is disabled in the demo mode\",\r\n  \"Pagination with Material UI\",\r\n  \"React, redux, typescript, styled components for the front-end, and C#, ASP.NET, Entity Framework + Postgresql for the backend\",\r\n  \"I write a comment!\",\r\n  \"Insert Cool Easter Egg here\",\r\n  \"Insert funny joke here\",\r\n  \"This is a description\",\r\n  \"TAKE A LOOK AT THE MOBILE VERSION, I SPENT A LONG TIME ON IT!\",\r\n  \"I once spent 3 days looking for a bug that broke my app; it was an issue in case sensitivity!\",\r\n  \"CSS is hard\",\r\n  \"WELCOME TO THE PAGINATION STATION\",\r\n  \"I worked on the app for 2 months over the summer, then took 4 months off for my first semester of university, and now I am finishing it 6 months after writing the first line of code!\",\r\n  \"I completely redid the directory structure of the project 3 times! The project ended up being over hundreds of files, so it was worth it.\",\r\n];\r\n","import { Ticket } from \"../constants/ticket\";\r\nimport { LoadUserPayload, Rank } from \"../constants/user\";\r\nimport { Notification } from \"../constants/notification\";\r\nimport { Normalized } from \"../flux/slices/contextSlice\";\r\nimport {\r\n  User,\r\n  randomInt,\r\n  randomBool,\r\n  getRandom,\r\n  titles,\r\n  comments,\r\n} from \"./predefined\";\r\n\r\nconst localUser = \"Spongebob\";\r\nexport const localUserInfo = User.find((u) => u.tag === localUser)!;\r\n\r\n// an implementation of the Fisher-Yates shuffle https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle\r\nconst shuffle = <T>(set: T[]): T[] => {\r\n  var elt: T;\r\n  var j: number;\r\n\r\n  for (var i = set.length - 1; i > 0; i--) {\r\n    j = randomInt(i);\r\n    elt = set[j];\r\n    set[j] = set[i];\r\n    set[i] = elt;\r\n  }\r\n\r\n  return set;\r\n};\r\n\r\n// produces a shuffled set of all ints in [start, start + length]\r\nconst genIntSet = (start: number, length: number): number[] => {\r\n  var set: number[] = [];\r\n  for (var i = start; i <= start + length; i++) set.push(i);\r\n  return shuffle(set);\r\n};\r\n\r\n// produces a random date within past n days\r\nconst randomDate = (n: number): Date => {\r\n  return new Date(\r\n    new Date().getTime() -\r\n      (randomInt(n) * 24 * 3600 * 1000 +\r\n        randomInt(24) * 3600 +\r\n        randomInt(3600) * 1000 +\r\n        randomInt(1000))\r\n  );\r\n};\r\n\r\n// produce a set containing anywhere between 0 to max links to random imgs\r\n// const randomImageSet = (max: number): string[] => {\r\n//   var set: string[] = [];\r\n//   for (var i = 0; i < randomInt(max); i++)\r\n//     set.push(\r\n//       `placeimg.com/${randomInt(500) + 500}/${randomInt(350) + 350}/any`\r\n//     );\r\n//   return set;\r\n// };\r\n\r\nexport interface DataSet {\r\n  users: LoadUserPayload[];\r\n  tickets: Ticket[];\r\n  activity: Notification[];\r\n  notifications: Notification[];\r\n  assigned: number[];\r\n}\r\n\r\nexport const generateDataSet = (): DataSet => {\r\n  var users: { [key: string]: LoadUserPayload } = {};\r\n  User.map((u) => Object.assign({ activity: [], tickets: [] }, u)).forEach(\r\n    (u) => {\r\n      users[u.tag] = u;\r\n    }\r\n  );\r\n\r\n  var tickets: Ticket[] = [];\r\n  var activity: Notification[] = [];\r\n  // tickets that local user is assigned to\r\n  var assigned: number[] = [];\r\n  // activity on tickets that the local user has created or is assigned to\r\n  var notifications: number[] = [];\r\n\r\n  var activitySubset: number[] = [];\r\n  // assignable is set of users with rank developer or higher\r\n  var assignable = User.filter((u) => u.rank > Rank.User).map((u) => u.tag);\r\n  // this is a shuffled set containing all integers in the range [50, 250]\r\n  var activityIds: number[] = genIntSet(50, 200);\r\n  // the index that we are currently on, corresponds to activityIds\r\n  var activityIndex: number = 0;\r\n  // used to select titles and comments from the titles and comments arrays, sequentially\r\n  var titleIndex: number = 0;\r\n  var commentIndex = 0;\r\n  // intermediate vars\r\n  var jump: number;\r\n  var creationDate: Date;\r\n  var updateDate: Date;\r\n  var ticket: Ticket;\r\n  var isAssigned: boolean;\r\n  var devs: string[];\r\n\r\n  // predefined welcome ticket\r\n  tickets.push({\r\n    id: 1,\r\n    typeLabel: 1,\r\n    title: \"CLICK HERE TO START!!!\",\r\n    author: localUser,\r\n    creationDate: new Date().toISOString(),\r\n    updateDate: new Date().toISOString(),\r\n    description:\r\n      \"Hello and welcome! You are viewing a special version of my webapp that gives you administrator privileges and a randomly generated set of users, posts, and comments. Any changes you make are deleted as soon as you refresh your browser. If you are interested in a full description of my site or its source code, see the repo at github.com/japraj/bugtracker. You can start by adding a comment using the textbox below, or editing the ticket with the icon on the bottom right!\",\r\n    reproducibility: randomInt(2),\r\n    severity: randomInt(2),\r\n    status: randomInt(2),\r\n    assignees: [],\r\n    imageLinks: [],\r\n    activity: [],\r\n  });\r\n\r\n  for (var i = 6; i <= 50; i++) {\r\n    // we have ~200 activities & ~50 tickets so we want an average of 4 notifications per\r\n    // ticket - that is why 7 is used below (mean of the distribution ~ 4)\r\n    if (activityIndex < 200) {\r\n      // select a random sequence of activity ids, starting from activityIndex,\r\n      // and add it to the ticket\r\n      jump = randomInt(7);\r\n      if (jump + activityIndex >= 200) jump = 200 - activityIndex - 1;\r\n      activitySubset = activityIds.slice(\r\n        activityIndex,\r\n        jump + activityIndex + 1\r\n      );\r\n      activityIndex += jump + 1;\r\n    }\r\n\r\n    creationDate = randomDate(14);\r\n    updateDate = randomDate(14);\r\n    // if the updateDate is before the creation date, or there are no activities\r\n    // (which implies that there were no updates), use default val for updateDate\r\n    if (updateDate < creationDate || activitySubset.length === 0)\r\n      updateDate = creationDate;\r\n\r\n    // random subset of the developers+\r\n    do {\r\n      devs = shuffle(assignable).slice(0, randomInt(assignable.length / 2));\r\n    } while (\r\n      devs.includes(localUser) &&\r\n      (randomBool() || randomBool())\r\n      // randomization to decrease probability of localUser being assigned\r\n    );\r\n\r\n    // randomize all fields of the ticket; most of the magic constants below are just random values.\r\n    // some fields like typeLabel (and all other ticket flags) must not be changed though.\r\n    // List of properties whose vals may be tweaked (as in - the params passed to the functions can be changed):\r\n    // title, description, assignees, imageLinks\r\n    ticket = {\r\n      id: i,\r\n      typeLabel: randomInt(2),\r\n      title: titles[titleIndex],\r\n      // decrease probability of localUser being author\r\n      author:\r\n        getRandom(User).tag === localUser && randomBool()\r\n          ? localUser\r\n          : getRandom(User.filter((u) => u.tag !== localUser)).tag,\r\n      creationDate: creationDate.toISOString(),\r\n      updateDate: updateDate.toISOString(),\r\n      description: comments[commentIndex],\r\n      reproducibility: randomInt(2),\r\n      severity: randomInt(2),\r\n      status: randomInt(2),\r\n      assignees: devs,\r\n      imageLinks: [],\r\n      activity: activitySubset,\r\n    };\r\n\r\n    titleIndex = titleIndex + 1 < titles.length ? titleIndex + 1 : 0;\r\n    commentIndex = commentIndex + 1 < comments.length ? commentIndex + 1 : 0;\r\n\r\n    isAssigned = ticket.assignees.indexOf(localUser) !== -1;\r\n\r\n    if (isAssigned) assigned.push(ticket.id);\r\n    if (isAssigned || ticket.author === localUser)\r\n      notifications = notifications.concat(ticket.activity);\r\n\r\n    // generate a notification for the creation of this ticket\r\n    activity.push({\r\n      id: i,\r\n      ticketId: i.toString(),\r\n      date: ticket.creationDate,\r\n      author: ticket.author,\r\n      message: 0,\r\n      value: \"\",\r\n      new: false,\r\n    });\r\n\r\n    // add the above ticket & notification to the author obj\r\n    users[ticket.author].activity.push(i);\r\n    users[ticket.author].tickets.push(i);\r\n\r\n    tickets.push(ticket);\r\n  }\r\n\r\n  // for every notification id that is used by a ticket, generate a notification\r\n  // and add that notification to the user\r\n  var message;\r\n  tickets.forEach((ticket: Ticket) => {\r\n    ticket.activity.forEach((id) => {\r\n      message = randomBool() && randomBool() ? 2 : randomInt(7) + 3;\r\n      var notification = {\r\n        id: id,\r\n        ticketId: ticket.id.toString(),\r\n        date: ticket.updateDate,\r\n        author: getRandom(User).tag,\r\n        message: message,\r\n        value: message === 2 ? comments[commentIndex] : \"\",\r\n        new: randomBool(),\r\n      };\r\n\r\n      activity.push(notification);\r\n      users[notification.author].activity.push(id);\r\n\r\n      if (message === 2)\r\n        commentIndex =\r\n          commentIndex + 1 < comments.length ? commentIndex + 1 : 0;\r\n    });\r\n  });\r\n\r\n  return {\r\n    tickets: tickets,\r\n    activity: activity,\r\n    users: Object.values(users),\r\n    notifications: notifications.map(\r\n      (id) => activity.find((a) => a.id === id)!\r\n    ),\r\n    assigned: assigned,\r\n  };\r\n};\r\n\r\nexport const arrayToNormalized = <T>(set: T[], key: keyof T): Normalized<T> => {\r\n  return {\r\n    byKey: set.reduce((acc, elt) => {\r\n      acc[elt[key]] = elt;\r\n      return acc;\r\n    }, Object.assign({})),\r\n    allKeys: set.map((element) => `${element[key]}`),\r\n  };\r\n};\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../store\";\r\nimport { sortNotifications } from \"../../constants/notification\";\r\nimport { User } from \"../../constants/user\";\r\nimport { DataSet, localUserInfo } from \"../../seed\";\r\n\r\nexport interface AuthState {\r\n  loaded: boolean;\r\n  user: User;\r\n}\r\n\r\nexport const initialState: AuthState = {\r\n  loaded: false,\r\n  user: {\r\n    authenticated: false,\r\n    tickets: [],\r\n    notifications: [],\r\n    assigned: [],\r\n    info: {\r\n      profileImg: \"\",\r\n      tag: \"\",\r\n      rank: -1,\r\n    },\r\n  },\r\n};\r\n\r\nexport const authSlice = createSlice({\r\n  name: \"authenticated\",\r\n  initialState,\r\n  reducers: {\r\n    finishedLoading: (state) => {\r\n      state.loaded = true;\r\n    },\r\n    loadUser: (state, action: PayloadAction<User>) => {\r\n      action.payload.notifications = sortNotifications(\r\n        action.payload.notifications\r\n      );\r\n      state.user = action.payload;\r\n    },\r\n    updateAvatar: (state, action: PayloadAction<string>) => {\r\n      state.user.info.profileImg = action.payload;\r\n    },\r\n    viewNotifications: (state) => {\r\n      state.user.notifications = sortNotifications(\r\n        state.user.notifications\r\n          .filter((n) => n.new)\r\n          .map((notification) =>\r\n            Object.assign(notification, {\r\n              new: false,\r\n            })\r\n          )\r\n      );\r\n    },\r\n    logout: (state) => {\r\n      state = Object.assign(state, initialState, { loaded: true });\r\n    },\r\n    setDemo: (state, action: PayloadAction<DataSet>) => {\r\n      state = Object.assign(state, {\r\n        loaded: true,\r\n        user: {\r\n          authenticated: true,\r\n          tickets: [],\r\n          notifications: sortNotifications(action.payload.notifications),\r\n          assigned: action.payload.assigned,\r\n          info: localUserInfo,\r\n        },\r\n      });\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  finishedLoading,\r\n  loadUser,\r\n  viewNotifications,\r\n  logout,\r\n  updateAvatar,\r\n  setDemo,\r\n} = authSlice.actions;\r\n\r\nexport const selectAuthSlice = (state: RootState): AuthState =>\r\n  state.authentication;\r\n\r\nexport const selectUser = (state: RootState): User => state.authentication.user;\r\n\r\nexport const selectUserRank = (state: RootState): number =>\r\n  state.authentication.user.info.rank;\r\n\r\nexport const selectAuthenticated = (state: RootState): boolean =>\r\n  state.authentication.user.authenticated;\r\n\r\nexport default authSlice.reducer;\r\n","export const serverURL: string = \"/api/\";\r\n\r\nexport const userRoute: string = `${serverURL}users/`;\r\nexport const ticketRoute: string = `${serverURL}tickets/`;\r\nexport const activityRoute: string = `${serverURL}activity/`;\r\nexport const loadRoute: string = `${serverURL}load/`;\r\n\r\nconst Endpoints: {\r\n  USER_BY_TAG: string;\r\n  GET_ALL_USERS: string;\r\n  REGISTER: string;\r\n  LOGIN: string;\r\n  LOAD_SESSION: string;\r\n  LOGOUT: string;\r\n  UPDATE_USER: string;\r\n\r\n  TICKET_BY_ID: string;\r\n  GET_COLLAPSED: string;\r\n  CREATE_TICKET: string;\r\n  UPDATE_TICKET: string;\r\n  DELETE_TICKET: string;\r\n  ADD_COMMENT: string;\r\n\r\n  GET_ALL_ACTIVITY: string;\r\n  READ_ALL_NOTIFICATIONS: string;\r\n\r\n  INITIAL_LOAD: string;\r\n  SUBSCRIBE: string;\r\n} = {\r\n  USER_BY_TAG: `${userRoute}byTag`,\r\n  GET_ALL_USERS: `${userRoute}getAllUsers`,\r\n  REGISTER: `${userRoute}register`,\r\n  LOGIN: `${userRoute}login`,\r\n  LOGOUT: `${userRoute}logout`,\r\n  UPDATE_USER: `${userRoute}patch`,\r\n\r\n  TICKET_BY_ID: `${ticketRoute}byId`,\r\n  GET_COLLAPSED: `${ticketRoute}getCollapsed`,\r\n  CREATE_TICKET: `${ticketRoute}create`,\r\n  UPDATE_TICKET: `${ticketRoute}patch`,\r\n  DELETE_TICKET: `${ticketRoute}delete`,\r\n  ADD_COMMENT: `${ticketRoute}comment`,\r\n\r\n  GET_ALL_ACTIVITY: `${activityRoute}getAll`,\r\n  READ_ALL_NOTIFICATIONS: `${activityRoute}readAll`,\r\n\r\n  LOAD_SESSION: `${loadRoute}loadSession`,\r\n  INITIAL_LOAD: `${loadRoute}initial`,\r\n  SUBSCRIBE: `${loadRoute}subscribe`,\r\n};\r\n\r\nexport interface Patch {\r\n  path: string;\r\n  value: string;\r\n}\r\n\r\n// we only use 'replace'\r\nconst patchToOperation = (patch: Patch): object => {\r\n  patch.path = patch.path.charAt(0) === \"/\" ? patch.path : `/${patch.path}`;\r\n  return Object.assign({ op: \"replace\" }, patch);\r\n};\r\n\r\nexport const generatePatchDoc = (set: Patch[] | Patch): string =>\r\n  JSON.stringify(\r\n    set.constructor === Array\r\n      ? set.map(patchToOperation)\r\n      : [patchToOperation(set as Patch)]\r\n  );\r\n\r\nexport default Endpoints;\r\n","import { User, Rank } from \"../user\";\r\nimport { getDateFromISO } from \"../date\";\r\nimport { CollapsedTicket } from \"../ticket\";\r\nimport { SelectOption } from \"../global\";\r\nimport { Status } from \"../ticket\";\r\n\r\nexport interface Tab {\r\n  iconName: string;\r\n  title: string;\r\n  requiredRank: number;\r\n  filter: (set: CollapsedTicket[]) => CollapsedTicket[];\r\n}\r\n\r\nexport enum Sort {\r\n  NEW = \"NEW\",\r\n  OLD = \"OLD\",\r\n  SEVERITY = \"SEVERITY\",\r\n  STATUS = \"STATUS\",\r\n}\r\n\r\nexport const sortSelectOptions: SelectOption[] = [\r\n  { value: Sort.NEW, label: \"Sort by Newest\" },\r\n  { value: Sort.OLD, label: \"Sort by Oldest\" },\r\n  { value: Sort.SEVERITY, label: \"Sort by Severity\" },\r\n  { value: Sort.STATUS, label: \"Sort by Status\" },\r\n];\r\n\r\nexport const applySort = (\r\n  sort: string,\r\n  tickets: CollapsedTicket[]\r\n): CollapsedTicket[] => {\r\n  var dateById: { [id: number]: number } = {};\r\n  tickets.map((t) => {\r\n    dateById[t.id] = getDateFromISO(t.updateDate).getTime();\r\n    return t;\r\n  });\r\n\r\n  // Sort by new and any further transformations will be applied on top.\r\n  tickets = tickets.sort((t1, t2) => dateById[t2.id] - dateById[t1.id]);\r\n\r\n  switch (sort) {\r\n    case Sort.SEVERITY:\r\n      return tickets.sort((t1, t2) => t2.severity - t1.severity);\r\n    case Sort.STATUS:\r\n      return tickets.sort((t1, t2) => t2.status - t1.status);\r\n    case Sort.OLD:\r\n      return tickets.sort((t1, t2) => dateById[t1.id] - dateById[t2.id]);\r\n    case Sort.NEW:\r\n    default:\r\n      return tickets;\r\n  }\r\n};\r\n\r\n// each Tab option has a required rank, and an associated filter;\r\n// - All Issues does not filter anything (has no rank requirement)\r\n// - Resolved shows only resolved tickets (has no rank requirement)\r\n// - Ongoing shows only unresolved tickets (requires rank Developer)\r\n// - My Issues shows only issues submitted by the local user (requires User rank)\r\n// - Assigned shows only tickets that the local user is assigned to (req. Developer rank)\r\n// - Internal shows only tickets that have been submitted by developers, managers, or admins\r\n//   (req. Developer rank)\r\nexport const generateTabSet = (\r\n  user: User,\r\n  getRankFromUser: (tag: string) => Rank\r\n): Tab[] => {\r\n  return [\r\n    {\r\n      iconName: \"new_releases\",\r\n      title: \"All Issues\",\r\n      requiredRank: -1,\r\n      filter: (set: CollapsedTicket[]) => set,\r\n    },\r\n    {\r\n      iconName: \"assignment_turned_in\",\r\n      title: \"Resolved\",\r\n      requiredRank: -1,\r\n      filter: (set: CollapsedTicket[]) =>\r\n        set.filter((t) => t.status === Status.resolved),\r\n    },\r\n    {\r\n      iconName: \"cached\",\r\n      title: \"Ongoing\",\r\n      requiredRank: Rank.Developer,\r\n      filter: (set: CollapsedTicket[]) =>\r\n        set.filter((t) => t.status === Status[\"work-in-progress\"]),\r\n    },\r\n    {\r\n      iconName: \"confirmation_number\",\r\n      title: \"My Issues\",\r\n      requiredRank: Rank.User,\r\n      filter: (set: CollapsedTicket[]) =>\r\n        set.filter((t) => t.author === user.info.tag),\r\n    },\r\n    {\r\n      iconName: \"assignment\",\r\n      title: \"Assigned\",\r\n      requiredRank: Rank.Developer,\r\n      filter: (set: CollapsedTicket[]) =>\r\n        set.filter((t) => user.assigned.includes(t.id)),\r\n    },\r\n    {\r\n      iconName: \"work\",\r\n      title: \"Internal\",\r\n      requiredRank: Rank.Manager,\r\n      filter: (set: CollapsedTicket[]) =>\r\n        set.filter((t) => getRankFromUser(t.author) > Rank.User),\r\n    },\r\n  ];\r\n};\r\n","import { RootState, AppThunk } from \"../store\";\r\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { CollapsedTicket } from \"../../constants/ticket\";\r\nimport { UserInfo, getUserFromDTO } from \"../../constants/user\";\r\nimport {\r\n  Notification,\r\n  getNotificationFromDTO,\r\n} from \"../../constants/notification\";\r\nimport Endpoints from \"../../constants/api\";\r\nimport { getCollapsedTicketFromDTO } from \"../../constants/ticket\";\r\nimport { DataSet, arrayToNormalized } from \"../../seed\";\r\n\r\nexport interface Normalized<T> {\r\n  byKey: {\r\n    [key: string]: T;\r\n  };\r\n  allKeys: string[];\r\n}\r\n\r\nexport const initialNormalized: Normalized<any> = {\r\n  byKey: {},\r\n  allKeys: [],\r\n};\r\n\r\nexport interface ContextState {\r\n  lastUpdate: string;\r\n  stores: {\r\n    collapsedTickets: Normalized<CollapsedTicket>;\r\n    users: Normalized<UserInfo>;\r\n    activity: Normalized<Notification>;\r\n  };\r\n}\r\n\r\nexport const initialState: ContextState = {\r\n  lastUpdate: new Date(0).toISOString(),\r\n  stores: {\r\n    collapsedTickets: initialNormalized,\r\n    users: initialNormalized,\r\n    activity: initialNormalized,\r\n  },\r\n};\r\n\r\nconst newReducer = <T extends CollapsedTicket | UserInfo | Notification>(\r\n  origin: keyof ContextState[\"stores\"],\r\n  keyProp: string\r\n) => {\r\n  return (state: ContextState, action: PayloadAction<T[]>) => {\r\n    if (action.payload.length === 0) return;\r\n    var normalized: Normalized<any> = state.stores[origin];\r\n    action.payload.forEach((element: any) => {\r\n      normalized.byKey[element[keyProp]] = element;\r\n      if (normalized.allKeys.indexOf(element[keyProp].toString()) === -1)\r\n        normalized.allKeys.push(element[keyProp].toString());\r\n    });\r\n    state.lastUpdate = new Date().toISOString();\r\n    state.stores[origin] = Object.assign(state.stores[origin], normalized);\r\n  };\r\n};\r\n\r\nexport const contextSlice = createSlice({\r\n  name: \"context\",\r\n  initialState,\r\n  reducers: {\r\n    addCollapsedTickets: newReducer<CollapsedTicket>(\"collapsedTickets\", \"id\"),\r\n    addUsers: newReducer<UserInfo>(\"users\", \"tag\"),\r\n    addActivity: newReducer<Notification>(\"activity\", \"id\"),\r\n    removeCollapsedTicket: (state, action: PayloadAction<number>) => {\r\n      const index = state.stores.collapsedTickets.allKeys.indexOf(\r\n        action.payload.toString()\r\n      );\r\n      if (index === -1) return;\r\n      state.stores.collapsedTickets.allKeys.splice(index, 1);\r\n      delete state.stores.collapsedTickets.byKey[action.payload.toString()];\r\n    },\r\n    updateStoredUser: (state, action: PayloadAction<UserInfo>) => {\r\n      state.stores.users.byKey[action.payload.tag] = action.payload;\r\n    },\r\n    updateTime: (state) => {\r\n      state.lastUpdate = new Date().toISOString();\r\n    },\r\n    seedData: (state, action: PayloadAction<DataSet>) => {\r\n      state = Object.assign(state, {\r\n        stores: {\r\n          collapsedTickets: arrayToNormalized(\r\n            action.payload.tickets.map((t) => {\r\n              return {\r\n                id: t.id,\r\n                typeLabel: t.typeLabel,\r\n                title: t.title,\r\n                author: t.author,\r\n                creationDate: t.creationDate,\r\n                updateDate: t.updateDate,\r\n                severity: t.severity,\r\n                status: t.status,\r\n                comments: t.activity.reduce((totalComments, activityId) => {\r\n                  // find the notification with id activityId and check if it is the comment type\r\n                  // if it is the comment type, add 1 to total comments; else do not change it\r\n                  var activity = action.payload.activity.find(\r\n                    (a) => a.id === activityId\r\n                  );\r\n                  return activity && activity.message === 2\r\n                    ? totalComments + 1\r\n                    : totalComments;\r\n                }, 0),\r\n              };\r\n            }),\r\n            \"id\"\r\n          ),\r\n          users: arrayToNormalized(\r\n            action.payload.users.map((u) => {\r\n              return {\r\n                tag: u.tag,\r\n                profileImg: u.profileImg,\r\n                rank: u.rank,\r\n              };\r\n            }),\r\n            \"tag\"\r\n          ),\r\n          activity: arrayToNormalized(action.payload.activity, \"id\"),\r\n        },\r\n      });\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  addCollapsedTickets,\r\n  addUsers,\r\n  addActivity,\r\n  removeCollapsedTicket,\r\n  updateTime,\r\n  updateStoredUser,\r\n  seedData,\r\n} = contextSlice.actions;\r\n\r\n// The below 'selectors' actually return selectors! they are meant\r\n// to be called like so: useSelector(selectElementByKey(\"foo\"));\r\n// instead of like useSelector(selectElementByKey);\r\n\r\nexport const selectElementByKey = (origin: keyof ContextState[\"stores\"]) => (\r\n  state: RootState\r\n): ((key: string) => any) => (key: string) =>\r\n  state.context.stores[origin].byKey[key];\r\n\r\nexport const selectAllElements = (origin: keyof ContextState[\"stores\"]) => (\r\n  state: RootState\r\n): any[] =>\r\n  state.context.stores[origin].allKeys.map(\r\n    (key) => state.context.stores[origin].byKey[key]\r\n  );\r\n\r\nexport const selectElementsByKeys = (origin: keyof ContextState[\"stores\"]) => (\r\n  state: RootState\r\n): ((keys: string[]) => any[]) => (keys: string[]) =>\r\n  keys\r\n    .filter((key) => state.context.stores[origin].allKeys.indexOf(key) !== -1)\r\n    .map((key) => state.context.stores[origin].byKey[key]);\r\n\r\n// Update the local stores based on the server\r\nexport const harmonizeContext = (\r\n  forceUpdate: boolean,\r\n  updatePeriod?: number\r\n): AppThunk => (dispatch, getState) => {\r\n  const state: RootState = getState();\r\n  // if demoMode, we do not want the harmonizer to mess up our state so kill the execution\r\n  if (state.demo.demoMode) return;\r\n\r\n  const lastUpdate: Date = new Date(state.context.lastUpdate);\r\n  updatePeriod = updatePeriod ? updatePeriod : 0;\r\n  if (forceUpdate || new Date().getTime() - lastUpdate.getTime() > updatePeriod)\r\n    fetch(`${Endpoints.SUBSCRIBE}/${lastUpdate.toISOString()}`, {\r\n      method: \"GET\",\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res: any) => {\r\n        if (res.status === undefined)\r\n          try {\r\n            const tickets: CollapsedTicket[] = res.tickets.map(\r\n              getCollapsedTicketFromDTO\r\n            );\r\n            const activity: Notification[] = res.activity.map(\r\n              getNotificationFromDTO\r\n            );\r\n            const users: UserInfo[] = res.users.map(getUserFromDTO);\r\n\r\n            if (tickets.length > 0) dispatch(addCollapsedTickets(tickets));\r\n            if (activity.length > 0) dispatch(addActivity(activity));\r\n            if (users.length > 0) dispatch(addUsers(users));\r\n            if (!users.length && !activity.length && !tickets.length)\r\n              dispatch(updateTime());\r\n          } catch {}\r\n      })\r\n      .catch();\r\n};\r\n\r\nexport default contextSlice.reducer;\r\n","// Note: be sure to specify 'exact=true' in the Routes file if changing root\r\nenum Routes {\r\n  HOME = \"/\",\r\n  DASHBOARD = \"/dashboard\",\r\n  DEMO = \"/demo\",\r\n  REGISTER = \"/register\",\r\n  LOGIN = \"/login\",\r\n  FORGOT_PASS = \"/forgotPassword\",\r\n  RESET_PASS = \"/resetPassword\",\r\n  USER = \"/user\",\r\n  LOGIN_REQUIRED = \"/loginRequired\",\r\n  INVALID_TOKEN = \"/invalidToken\",\r\n  // Note: /404 is not actually a route. Since the 404 page is actually a catch-all,\r\n  // any invalid route (aka any route that is not described above) would bring up the\r\n  // 404 page. Also, DNE in the variable name stands for \"Does Not Exist\"\r\n  DNE404 = \"/404\",\r\n}\r\n\r\nexport default Routes;\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../store\";\r\nimport { Sort } from \"../../constants/table\";\r\n\r\nexport interface HomeState {\r\n  recentActivity: number[];\r\n  tabIndex: number;\r\n  pageIndex: number;\r\n  nodesPerPage: number;\r\n  totalPages: number;\r\n  sort: string;\r\n}\r\n\r\nexport const initialState: HomeState = {\r\n  recentActivity: [],\r\n  tabIndex: 0,\r\n  pageIndex: 1,\r\n  nodesPerPage: 5,\r\n  totalPages: 10,\r\n  sort: Sort.NEW,\r\n};\r\n\r\nexport const homeSlice = createSlice({\r\n  name: \"home\",\r\n  initialState,\r\n  reducers: {\r\n    setRecentActivity: (state, action: PayloadAction<number[]>) => {\r\n      state.recentActivity = action.payload;\r\n    },\r\n    setTabIndex: (state, action: PayloadAction<number>) => {\r\n      state.tabIndex = action.payload;\r\n    },\r\n    setPageIndex: (state, action: PayloadAction<number>) => {\r\n      if (action.payload < 1) action.payload = 1;\r\n      else if (action.payload > state.totalPages)\r\n        action.payload = state.totalPages;\r\n      state.pageIndex = action.payload;\r\n    },\r\n    setNodesPerPage: (state, action: PayloadAction<number>) => {\r\n      if (action.payload < 1) action.payload = 1;\r\n      else if (action.payload > 50) action.payload = 50;\r\n      state.nodesPerPage = action.payload;\r\n    },\r\n    setTotalPages: (state, action: PayloadAction<number>) => {\r\n      state.totalPages = action.payload;\r\n    },\r\n    setSort: (state, action: PayloadAction<string>) => {\r\n      state.sort = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setRecentActivity,\r\n  setTabIndex,\r\n  setPageIndex,\r\n  setNodesPerPage,\r\n  setTotalPages,\r\n  setSort,\r\n} = homeSlice.actions;\r\n\r\nexport const selectRecentActivity = (state: RootState): number[] =>\r\n  state.home.recentActivity;\r\n\r\nexport const selectTabIndex = (state: RootState): number => state.home.tabIndex;\r\n\r\nexport const selectPageIndex = (state: RootState): number =>\r\n  state.home.pageIndex;\r\n\r\nexport const selectNodesPerPage = (state: RootState): number =>\r\n  state.home.nodesPerPage;\r\n\r\nexport const selectTotalPages = (state: RootState): number =>\r\n  state.home.totalPages;\r\n\r\nexport const selectHomeSlice = (state: RootState): HomeState => state.home;\r\n\r\nexport default homeSlice.reducer;\r\n","import { createHashHistory } from \"history\";\r\n\r\n// Allows for programmatic routing control.\r\n// See Login/register form buttons' onClick\r\n// function for an example of usage.\r\n\r\nexport default createHashHistory();\r\n","// find largest id in set and add 1 to it to get nextId\r\nexport const getNextId = (keys: string[]): number =>\r\n  (keys\r\n    .map((v: string) => (v as unknown) as number)\r\n    .reduce((acc, current) => (current > acc ? current : acc), -1) as number) +\r\n  1;\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../store\";\r\nimport { LoadUserPayload } from \"../../constants/user\";\r\nimport { Normalized, initialNormalized } from \"./contextSlice\";\r\nimport { Ticket } from \"../../constants/ticket\";\r\nimport { DataSet, arrayToNormalized, localUserInfo } from \"../../seed\";\r\n\r\nexport interface DemoState {\r\n  demoMode: boolean;\r\n  users: Normalized<LoadUserPayload>;\r\n  tickets: Normalized<Ticket>;\r\n}\r\n\r\nexport const initialState: DemoState = {\r\n  demoMode: false,\r\n  users: initialNormalized,\r\n  tickets: initialNormalized,\r\n};\r\n\r\nexport const demoSlice = createSlice({\r\n  name: \"demo\",\r\n  initialState,\r\n  reducers: {\r\n    initDemoSlice: (state, action: PayloadAction<DataSet>) => {\r\n      state = Object.assign(state, {\r\n        demoMode: true,\r\n        users: arrayToNormalized(action.payload.users, \"tag\"),\r\n        tickets: arrayToNormalized(action.payload.tickets, \"id\"),\r\n      });\r\n    },\r\n    addTicket: (state, action: PayloadAction<Ticket>) => {\r\n      state.tickets.byKey[action.payload.id.toString()] = action.payload;\r\n      if (state.tickets.allKeys.indexOf(action.payload.id.toString()))\r\n        state.tickets.allKeys.push(action.payload.id.toString());\r\n    },\r\n    updateDemoUser: (state, action: PayloadAction<LoadUserPayload>) => {\r\n      state.users.byKey[action.payload.tag] = action.payload;\r\n    },\r\n    updateUserActivity: (state, action: PayloadAction<number[]>) => {\r\n      var user: LoadUserPayload = state.users.byKey[localUserInfo.tag];\r\n      state.users.byKey[localUserInfo.tag] = Object.assign({}, user, {\r\n        activity: user.activity.concat(action.payload),\r\n      });\r\n    },\r\n    removeTicketRefs: (\r\n      state,\r\n      action: PayloadAction<{\r\n        ticketId: number;\r\n        activities: number[];\r\n      }>\r\n    ) => {\r\n      // clean users\r\n      state.users.allKeys.forEach((key: string) => {\r\n        // if the user is the author of the ticket, delete the ref\r\n        if (state.users.byKey[key].tickets.includes(action.payload.ticketId)) {\r\n          state.users.byKey[key].tickets = state.users.byKey[\r\n            key\r\n          ].tickets.filter((id) => id !== action.payload.ticketId);\r\n        }\r\n        // remove all refs to the deleted ticket in user.activity\r\n        state.users.byKey[key].activity = state.users.byKey[\r\n          key\r\n        ].activity.filter((id) => !action.payload.activities.includes(id));\r\n      });\r\n      // clean tickets\r\n      state.tickets.allKeys.filter(\r\n        (t) => t !== action.payload.ticketId.toString()\r\n      );\r\n      delete state.tickets.byKey[action.payload.ticketId];\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  initDemoSlice,\r\n  addTicket,\r\n  updateUserActivity,\r\n  removeTicketRefs,\r\n  updateDemoUser,\r\n} = demoSlice.actions;\r\n\r\nexport const selectDemoMode = (state: RootState): boolean =>\r\n  state.demo.demoMode;\r\n\r\nexport default demoSlice.reducer;\r\n","import { Action, Dispatch } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../../flux/store\";\r\nimport { Endpoint } from \"../\";\r\nimport Endpoints from \"../../constants/api\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n  getCollapsedTicketFromDTO,\r\n  NewTicket,\r\n  Status,\r\n  Ticket,\r\n} from \"../../constants/ticket\";\r\nimport { Notification } from \"../../constants/notification\";\r\nimport { getNextId } from \"../../constants/demo\";\r\nimport {\r\n  addActivity,\r\n  addCollapsedTickets,\r\n} from \"../../flux/slices/contextSlice\";\r\nimport { addTicket } from \"../../flux/slices/demoSlice\";\r\nimport { setRecentActivity } from \"../../flux/slices/homeSlice\";\r\n\r\nexport const createTicket: Endpoint<NewTicket> = {\r\n  normal: (\r\n    dispatch: Dispatch<Action<any>>,\r\n    state: RootState,\r\n    ticket?: NewTicket\r\n  ) => {\r\n    fetch(Endpoints.CREATE_TICKET, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(ticket),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) =>\r\n        dispatch(addCollapsedTickets([getCollapsedTicketFromDTO(res)]))\r\n      )\r\n      .catch(() =>\r\n        toast.error(\"Oops! Something went wrong, please try again.\")\r\n      );\r\n  },\r\n  demo: (\r\n    dispatch: Dispatch<Action<any>>,\r\n    state: RootState,\r\n    ticket?: NewTicket\r\n  ) => {\r\n    if (!ticket) return;\r\n    // produce a 'created ticket' activity and update stores\r\n\r\n    var mappedTicket: Ticket = {\r\n      id: getNextId(state.demo.tickets.allKeys),\r\n      typeLabel: ticket.typeLabel,\r\n      title: ticket.title,\r\n      author: state.authentication.user.info.tag,\r\n      creationDate: new Date().toISOString(),\r\n      updateDate: new Date().toISOString(),\r\n      description: ticket.description,\r\n      reproducibility: ticket.reproducibility,\r\n      severity: ticket.severity,\r\n      status: Status.unresolved,\r\n      assignees: [],\r\n      imageLinks: ticket.imageLinks,\r\n      activity: [getNextId(state.context.stores.activity.allKeys)],\r\n    };\r\n\r\n    var creationActivity: Notification = {\r\n      id: mappedTicket.activity[0],\r\n      ticketId: mappedTicket.id.toString(),\r\n      date: mappedTicket.creationDate,\r\n      author: mappedTicket.author,\r\n      message: 0,\r\n      value: \"\",\r\n      new: false,\r\n    };\r\n\r\n    dispatch(addTicket(mappedTicket));\r\n    dispatch(\r\n      addCollapsedTickets([Object.assign({}, mappedTicket, { comments: 0 })])\r\n    );\r\n    dispatch(addActivity([creationActivity]));\r\n    dispatch(\r\n      setRecentActivity(state.home.recentActivity.concat(creationActivity.id))\r\n    );\r\n  },\r\n};\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../store\";\r\nimport { Ticket, EditedTicket } from \"../../constants/ticket\";\r\nimport { UserInfo, Rank } from \"../../constants/user\";\r\n\r\nexport interface TicketState {\r\n  displayModal: boolean;\r\n  failedImages: number;\r\n  currentTicket: Ticket;\r\n  displayEditModal: boolean;\r\n  editedTicket: EditedTicket;\r\n}\r\n\r\nconst generateComplement = (universe: string[], subset: string[]): string[] =>\r\n  universe.filter((user) => subset.indexOf(user) === -1);\r\n\r\nconst initialState: TicketState = {\r\n  displayModal: false,\r\n  failedImages: 0,\r\n  currentTicket: {\r\n    id: -1,\r\n    author: \"\",\r\n    typeLabel: 0,\r\n    creationDate: \"\",\r\n    updateDate: \"\",\r\n    title: \"\",\r\n    description: \"\",\r\n    reproducibility: 0,\r\n    severity: 0,\r\n    status: 0,\r\n    assignees: [],\r\n    imageLinks: [],\r\n    activity: [],\r\n  },\r\n  displayEditModal: false,\r\n  editedTicket: {\r\n    title: \"\",\r\n    description: \"\",\r\n    status: 0,\r\n    severity: 0,\r\n    reproducibility: 0,\r\n    typeLabel: 0,\r\n    imageLinks: [],\r\n    assignees: [],\r\n  },\r\n};\r\n\r\nexport const ticketSlice = createSlice({\r\n  name: \"ticket\",\r\n  initialState,\r\n  reducers: {\r\n    toggleDisplay: (state) => {\r\n      state.displayModal = !state.displayModal;\r\n    },\r\n    addComment: (state, action: PayloadAction<number>) => {\r\n      var set = Object.assign(state.currentTicket.activity);\r\n      set.push(action.payload);\r\n      state.currentTicket.activity = set;\r\n      state.currentTicket.updateDate = new Date()\r\n        .toISOString()\r\n        .replace(\"Z\", \"\");\r\n    },\r\n    loadTicket: (state, action: PayloadAction<Ticket>) => {\r\n      state = Object.assign(state, {\r\n        displayModal: true,\r\n        failedImages: 0,\r\n        currentTicket: Object.assign(action.payload),\r\n        editedTicket: {\r\n          ...action.payload,\r\n        },\r\n      });\r\n    },\r\n    reportLoadingFailure: (state) => {\r\n      state.failedImages++;\r\n    },\r\n    toggleEditDisplay: (state) => {\r\n      state.displayEditModal = !state.displayEditModal;\r\n    },\r\n    updateEdit: (state, action: PayloadAction<object>) => {\r\n      state.editedTicket = Object.assign(state.editedTicket, action.payload);\r\n    },\r\n    wipeLocalChanges: (state) => {\r\n      state.editedTicket = state.currentTicket;\r\n    },\r\n    forceCloseDisplays: (state) => {\r\n      state.displayModal = false;\r\n      state.displayEditModal = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  addComment,\r\n  toggleDisplay,\r\n  loadTicket,\r\n  reportLoadingFailure,\r\n  toggleEditDisplay,\r\n  updateEdit,\r\n  wipeLocalChanges,\r\n  forceCloseDisplays,\r\n} = ticketSlice.actions;\r\n\r\nexport const selectDisplayed = (state: RootState) => state.ticket.displayModal;\r\n\r\nexport const selectFailures = (state: RootState) => state.ticket.failedImages;\r\n\r\nexport const selectTicket = (state: RootState) => state.ticket.currentTicket;\r\n\r\nexport const selectTicketSlice = (state: RootState) => state.ticket;\r\n\r\nexport const selectAvailable = (state: RootState) =>\r\n  generateComplement(\r\n    state.context.stores.users.allKeys\r\n      .map((key) => state.context.stores.users.byKey[key])\r\n      .filter((u: UserInfo) => u.rank > Rank.User)\r\n      .map((u) => u.tag),\r\n    state.ticket.editedTicket.assignees\r\n  );\r\n\r\nexport default ticketSlice.reducer;\r\n","import { Action, Dispatch } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../../flux/store\";\r\nimport { Endpoint } from \"../\";\r\nimport Endpoints from \"../../constants/api\";\r\nimport Routes from \"../../constants/routes\";\r\nimport { getTicketFromDTO } from \"../../constants/ticket\";\r\nimport { forceCloseDisplays, loadTicket } from \"../../flux/slices/ticketSlice\";\r\nimport history from \"../../routes/history\";\r\n\r\nexport const loadTicketById: Endpoint<string> = {\r\n  normal: (dispatch: Dispatch<Action<any>>, state: RootState, id?: string) => {\r\n    const err: () => void = () => {\r\n      history.push(Routes.DNE404);\r\n      dispatch(forceCloseDisplays());\r\n    };\r\n\r\n    if (!id) err();\r\n\r\n    fetch(`${Endpoints.TICKET_BY_ID}/${id}`, {\r\n      method: \"GET\",\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res: any) => {\r\n        if (res.id && res.id !== -1)\r\n          dispatch(loadTicket(getTicketFromDTO(res)));\r\n        else err();\r\n      })\r\n      .catch(err);\r\n  },\r\n  demo: (dispatch: Dispatch<Action<any>>, state: RootState, id?: string) => {\r\n    try {\r\n      dispatch(loadTicket(state.demo.tickets.byKey[id!]));\r\n    } catch {\r\n      history.push(Routes.DNE404);\r\n      dispatch(forceCloseDisplays());\r\n    }\r\n  },\r\n};\r\n","import { Action, Dispatch } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../../flux/store\";\r\nimport API, { Endpoint } from \"../\";\r\nimport Endpoints, { generatePatchDoc, Patch } from \"../../constants/api\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n  EditedTicket,\r\n  getCollapsedTicketFromDTO,\r\n  Ticket,\r\n} from \"../../constants/ticket\";\r\nimport { Notification } from \"../../constants/notification\";\r\nimport { getNextId } from \"../../constants/demo\";\r\nimport {\r\n  harmonizeContext,\r\n  addCollapsedTickets,\r\n  addActivity,\r\n} from \"../../flux/slices/contextSlice\";\r\nimport { addTicket, updateUserActivity } from \"../../flux/slices/demoSlice\";\r\nimport { setRecentActivity } from \"../../flux/slices/homeSlice\";\r\nimport { loadTicket } from \"../../flux/slices/ticketSlice\";\r\n\r\ninterface Map {\r\n  [key: string]: string;\r\n}\r\n\r\nconst generateMap = (obj: object): Map => {\r\n  var map: Map = {};\r\n  const keySet: string[] = Object.keys(obj);\r\n  const valueSet: string[] = Object.values(obj);\r\n  keySet.forEach((key: string, index: number) => (map[key] = valueSet[index]));\r\n  return map;\r\n};\r\n\r\nconst mapModelsToPatchArray = (\r\n  editedModel: EditedTicket,\r\n  persistentModel: Ticket\r\n): Patch[] => {\r\n  var patchSet: Patch[] = [];\r\n  const editedMap: Map = generateMap(editedModel);\r\n  const persistentMap: Map = generateMap(persistentModel);\r\n\r\n  Object.keys(editedModel).forEach((key: string) => {\r\n    if (editedMap[key] !== persistentMap[key])\r\n      patchSet.push({ path: key, value: editedMap[key] });\r\n  });\r\n  return patchSet;\r\n};\r\n\r\nexport const updateTicket: Endpoint<EditedTicket> = {\r\n  normal: (\r\n    dispatch: Dispatch<any>,\r\n    state: RootState,\r\n    editedTicket?: EditedTicket\r\n  ) => {\r\n    fetch(`${Endpoints.UPDATE_TICKET}/${state.ticket.currentTicket.id}`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: generatePatchDoc(\r\n        mapModelsToPatchArray(editedTicket!, state.ticket.currentTicket)\r\n      ),\r\n    })\r\n      .then((res: any) => {\r\n        if (res.status !== 204) return;\r\n        dispatch(harmonizeContext(true));\r\n        dispatch(\r\n          addCollapsedTickets([\r\n            getCollapsedTicketFromDTO(\r\n              Object.assign({}, editedTicket, {\r\n                updateDate: new Date().toISOString(),\r\n              })\r\n            ),\r\n          ])\r\n        );\r\n        dispatch(API.loadTicketById(state.ticket.currentTicket.id.toString()));\r\n        toast.success(\"Saved changes.\");\r\n      })\r\n      .catch(() =>\r\n        toast.error(\"Oops! Something went wrong, please try again.\")\r\n      );\r\n  },\r\n  demo: (\r\n    dispatch: Dispatch<Action<any>>,\r\n    state: RootState,\r\n    editedTicket?: EditedTicket\r\n  ) => {\r\n    // generate an activity for each change in the PatchArray, and update stores\r\n    const patches: Patch[] = mapModelsToPatchArray(\r\n      editedTicket!,\r\n      state.ticket.currentTicket\r\n    );\r\n    var activities: Notification[] = [];\r\n    var activityId = getNextId(state.context.stores.activity.allKeys);\r\n    patches.forEach((patch: Patch) => {\r\n      var activity: Notification = {\r\n        id: activityId,\r\n        ticketId: state.ticket.currentTicket.id.toString(),\r\n        date: new Date().toISOString(),\r\n        author: state.authentication.user.info.tag,\r\n        message: 0,\r\n        value: patch.value,\r\n        new: false,\r\n      };\r\n\r\n      // set the message field value based on the type of the update\r\n      switch (patch.path.toLowerCase()) {\r\n        case \"title\":\r\n          activity.message = 3;\r\n          break;\r\n        case \"description\":\r\n          activity.message = 4;\r\n          break;\r\n        case \"status\":\r\n          activity.message = 5;\r\n          break;\r\n        case \"severity\":\r\n          activity.message = 6;\r\n          break;\r\n        case \"reproducibility\":\r\n          activity.message = 7;\r\n          break;\r\n        case \"typelabel\":\r\n          activity.message = 8;\r\n          break;\r\n        case \"assignees\":\r\n          activity.message = 9;\r\n          break;\r\n        case \"imagelinks\":\r\n          activity.message = 10;\r\n          break;\r\n      }\r\n\r\n      activities.push(activity);\r\n      activityId++;\r\n    });\r\n    var ids: number[] = activities.map((a) => a.id);\r\n\r\n    const newTicket: Ticket = Object.assign(\r\n      {},\r\n      state.ticket.currentTicket,\r\n      editedTicket,\r\n      {\r\n        activity: state.ticket.currentTicket.activity.concat(ids),\r\n        updateDate: new Date().toISOString(),\r\n      }\r\n    );\r\n    // update local user's activity, update recent activity (home page), update demo/context stores,\r\n    // update currently loaded ticket\r\n    dispatch(updateUserActivity(ids));\r\n    dispatch(addTicket(newTicket));\r\n    dispatch(\r\n      addCollapsedTickets([\r\n        Object.assign(\r\n          {},\r\n          state.context.stores.collapsedTickets.byKey[\r\n            state.ticket.currentTicket.id\r\n          ],\r\n          newTicket\r\n        ),\r\n      ])\r\n    );\r\n    dispatch(addActivity(activities));\r\n    dispatch(\r\n      setRecentActivity(\r\n        state.home.recentActivity.concat(ids.length ? ids[0] : [])\r\n      )\r\n    );\r\n    dispatch(loadTicket(newTicket));\r\n    toast.success(\"Saved changes.\");\r\n  },\r\n};\r\n","import { Action, Dispatch } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../../flux/store\";\r\nimport { Endpoint } from \"../\";\r\nimport Endpoints from \"../../constants/api\";\r\nimport { Notification } from \"../../constants/notification\";\r\nimport { getNextId } from \"../../constants/demo\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n  addActivity,\r\n  addCollapsedTickets,\r\n  harmonizeContext,\r\n} from \"../../flux/slices/contextSlice\";\r\nimport { addComment } from \"../../flux/slices/ticketSlice\";\r\nimport { addTicket, updateUserActivity } from \"../../flux/slices/demoSlice\";\r\nimport { setRecentActivity } from \"../../flux/slices/homeSlice\";\r\n\r\nexport const newComment: Endpoint<string> = {\r\n  normal: (dispatch: Dispatch<any>, state: RootState, value?: string) => {\r\n    fetch(Endpoints.ADD_COMMENT, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        message: value,\r\n        ticketId: state.ticket.currentTicket.id,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        dispatch(addComment(res.id));\r\n        dispatch(harmonizeContext(true));\r\n      })\r\n      .catch((e) => {\r\n        toast.error(\"Error, please try again.\");\r\n      });\r\n  },\r\n  demo: (dispatch: Dispatch<Action<any>>, state: RootState, value?: string) => {\r\n    // create comment object\r\n    var activity: Notification = {\r\n      id: getNextId(state.context.stores.activity.allKeys),\r\n      ticketId: state.ticket.currentTicket.id.toString(),\r\n      date: new Date().toISOString(),\r\n      author: state.authentication.user.info.tag,\r\n      message: 2,\r\n      value: value!,\r\n      new: false,\r\n    };\r\n    // update stores\r\n    dispatch(addComment(activity.id));\r\n    dispatch(\r\n      addTicket(\r\n        Object.assign({}, state.ticket.currentTicket, {\r\n          activity: state.ticket.currentTicket.activity.concat(activity.id),\r\n          updateDate: new Date().toISOString(),\r\n        })\r\n      )\r\n    );\r\n    dispatch(updateUserActivity([activity.id]));\r\n    dispatch(\r\n      addCollapsedTickets([\r\n        Object.assign({}, state.ticket.currentTicket, {\r\n          updateDate: new Date().toISOString(),\r\n          comments:\r\n            state.context.stores.collapsedTickets.byKey[\r\n              state.ticket.currentTicket.id\r\n            ].comments + 1,\r\n        }),\r\n      ])\r\n    );\r\n    dispatch(addActivity([activity]));\r\n    dispatch(setRecentActivity(state.home.recentActivity.concat(activity.id)));\r\n  },\r\n};\r\n","import { Action, Dispatch } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../../flux/store\";\r\nimport { Endpoint } from \"../\";\r\nimport Endpoints from \"../../constants/api\";\r\nimport { Notification } from \"../../constants/notification\";\r\nimport { getNextId } from \"../../constants/demo\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n  removeCollapsedTicket,\r\n  harmonizeContext,\r\n  addActivity,\r\n} from \"../../flux/slices/contextSlice\";\r\nimport { removeTicketRefs } from \"../../flux/slices/demoSlice\";\r\nimport { forceCloseDisplays } from \"../../flux/slices/ticketSlice\";\r\nimport { Ticket } from \"../../constants/ticket\";\r\nimport { setRecentActivity } from \"../../flux/slices/homeSlice\";\r\n\r\nexport const deleteTicket: Endpoint<undefined> = {\r\n  normal: (dispatch: Dispatch<any>, state: RootState) => {\r\n    const id: number = state.ticket.currentTicket.id;\r\n    fetch(`${Endpoints.DELETE_TICKET}/${id}`, {\r\n      method: \"DELETE\",\r\n    })\r\n      .then((res: any) => {\r\n        if (res.status !== 204) return;\r\n        dispatch(forceCloseDisplays());\r\n        dispatch(removeCollapsedTicket(id));\r\n        dispatch(harmonizeContext(true));\r\n        toast.success(`Successfully deleted issue #${id}`);\r\n      })\r\n      .catch(() =>\r\n        toast.error(\"Oops! Something went wrong, please try again.\")\r\n      );\r\n  },\r\n  demo: (dispatch: Dispatch<Action<any>>, state: RootState) => {\r\n    // store the ticket temporarily so we can use its fields to delete\r\n    const ticket: Ticket = state.ticket.currentTicket;\r\n    // create a deletion activity\r\n    const deltNotification: Notification = {\r\n      id: getNextId(state.context.stores.activity.allKeys),\r\n      ticketId: \"\",\r\n      date: new Date().toISOString(),\r\n      author: state.authentication.user.info.tag,\r\n      message: 1,\r\n      value: \"\",\r\n      new: false,\r\n    };\r\n    toast.success(`Successfully deleted issue #${ticket.id}`);\r\n    dispatch(forceCloseDisplays());\r\n    // clean up activity, collapsed tickets, etc\r\n    dispatch(removeCollapsedTicket(ticket.id));\r\n    dispatch(\r\n      removeTicketRefs({ ticketId: ticket.id, activities: ticket.activity })\r\n    );\r\n    // add delete activity\r\n    dispatch(\r\n      setRecentActivity(state.home.recentActivity.concat(deltNotification.id))\r\n    );\r\n    dispatch(addActivity([deltNotification]));\r\n  },\r\n};\r\n","import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../store\";\r\nimport { selectElementsByKeys } from \"./contextSlice\";\r\nimport { CollapsedTicket } from \"../../constants/ticket\";\r\nimport Endpoints from \"../../constants/api\";\r\nimport { UserInfo, LoadUserPayload } from \"../../constants/user\";\r\nimport { Notification } from \"../../constants/notification\";\r\nimport Routes from \"../../constants/routes\";\r\nimport history from \"../../routes/history\";\r\n\r\n// This slice is used for viewing other users' profiles!\r\n// it has nothing to do with the local user/client\r\nexport interface UserState {\r\n  loading: boolean;\r\n  info: UserInfo;\r\n  stagedUrl: string;\r\n  recentActivity: number[];\r\n  tickets: number[];\r\n}\r\n\r\nexport const initialState: UserState = {\r\n  loading: true,\r\n  info: {\r\n    profileImg: \"\",\r\n    tag: \"\",\r\n    rank: 0,\r\n  },\r\n  stagedUrl: \"\",\r\n  recentActivity: [],\r\n  tickets: [],\r\n};\r\n\r\n// load user with specified tag from server\r\nexport const loadUserByTag = createAsyncThunk<LoadUserPayload, string, {}>(\r\n  \"user/loadUserByTag\",\r\n  async (tag: string, thunk) => {\r\n    const res = await fetch(`${Endpoints.USER_BY_TAG}/${tag}`, {\r\n      method: \"GET\",\r\n    });\r\n\r\n    if (res.status === 404) thunk.rejectWithValue(res.status);\r\n    else return res.json();\r\n  }\r\n);\r\n\r\nexport const userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState,\r\n  reducers: {\r\n    // update the user object stored in the userSlice; different\r\n    // from loading a new user entirely (use loadUserByTag for\r\n    // that!)\r\n    updateUser: (state, action: PayloadAction<UserInfo>) => {\r\n      state = Object.assign(state, { info: action.payload });\r\n    },\r\n    setStaged: {\r\n      reducer(state, action: PayloadAction<string>) {\r\n        state.stagedUrl = action.payload;\r\n      },\r\n      prepare(payload: string) {\r\n        return { payload };\r\n      },\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(loadUserByTag.pending, (state) => {\r\n      state.loading = true;\r\n    });\r\n    builder.addCase(loadUserByTag.fulfilled, (state, { payload }) => {\r\n      // halt loading, load user into state\r\n      state.loading = false;\r\n      state = Object.assign(state, {\r\n        info: {\r\n          tag: payload.tag,\r\n          rank: payload.rank,\r\n          profileImg: payload.profileImg,\r\n        },\r\n        recentActivity: payload.activity,\r\n        tickets: payload.tickets,\r\n      });\r\n    });\r\n    builder.addCase(loadUserByTag.rejected, (state, action) => {\r\n      // halt loading, and forward user to 404 route\r\n      //state.loading = false;\r\n      history.push(Routes.DNE404);\r\n    });\r\n  },\r\n});\r\n\r\nexport const { updateUser, setStaged } = userSlice.actions;\r\n\r\nexport const selectLoadState = (state: RootState): boolean =>\r\n  state.user.loading;\r\n\r\nexport const selectUserInfo = (state: RootState): UserInfo => state.user.info;\r\n\r\nexport const selectActivity = (state: RootState): Notification[] =>\r\n  selectElementsByKeys(\"activity\")(state)(\r\n    state.user.recentActivity.map((e) => e.toString())\r\n  );\r\n\r\nexport const selectTickets = (state: RootState): CollapsedTicket[] =>\r\n  selectElementsByKeys(\"collapsedTickets\")(state)(\r\n    state.user.tickets.map((e) => e.toString())\r\n  );\r\n\r\nexport const selectStaged = (state: RootState): string => state.user.stagedUrl;\r\n\r\nexport default userSlice.reducer;\r\n","import { Action, Dispatch } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../../flux/store\";\r\nimport { Endpoint } from \"../\";\r\nimport { loadUserByTag } from \"../../flux/slices/userSlice\";\r\nimport { sortNotifications } from \"../../constants/notification\";\r\n\r\nexport const getUserByTag: Endpoint<string> = {\r\n  normal: (dispatch: Dispatch<any>, state: RootState, name?: string) => {\r\n    dispatch(loadUserByTag(name!));\r\n  },\r\n  demo: (dispatch: Dispatch<Action<any>>, state: RootState, name?: string) => {\r\n    dispatch(\r\n      loadUserByTag.fulfilled(\r\n        Object.assign({}, state.demo.users.byKey[name!], {\r\n          activity: sortNotifications(\r\n            Object.values(state.context.stores.activity.byKey).filter(\r\n              (a) => a.author === name\r\n            ),\r\n            true\r\n          ).map((a) => a.id),\r\n        }),\r\n        \"fulfilled\",\r\n        \"fulfilled\"\r\n      )\r\n    );\r\n  },\r\n};\r\n","import { Action, Dispatch } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../../flux/store\";\r\nimport { Endpoint } from \"../\";\r\nimport Endpoints from \"../../constants/api\";\r\nimport { toast } from \"react-toastify\";\r\nimport { updateUser } from \"../../flux/slices/userSlice\";\r\nimport { updateStoredUser } from \"../../flux/slices/contextSlice\";\r\nimport { updateDemoUser } from \"../../flux/slices/demoSlice\";\r\n\r\nexport const updateUserRank: Endpoint<number> = {\r\n  normal: (dispatch: Dispatch<any>, state: RootState, rank?: number) => {\r\n    fetch(`${Endpoints.UPDATE_USER}/${state.user.info.tag}`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify([\r\n        {\r\n          op: \"replace\",\r\n          path: \"/Rank\",\r\n          value: rank,\r\n        },\r\n      ]),\r\n    }).then((res) => {\r\n      if (res.status === 204) {\r\n        toast.success(\"Successfully updated user's rank.\");\r\n        var newUser = Object.assign({}, state.user.info, { rank: rank });\r\n        dispatch(updateStoredUser(newUser));\r\n        dispatch(updateUser(newUser));\r\n      } else\r\n        toast.error(\r\n          \"You do not have sufficient permissions to perform this operation.\"\r\n        );\r\n    });\r\n  },\r\n  demo: (dispatch: Dispatch<Action<any>>, state: RootState, rank?: number) => {\r\n    toast.success(\"Successfully updated user's rank.\");\r\n    var newUser = Object.assign({}, state.user.info, { rank: rank });\r\n    dispatch(\r\n      updateDemoUser(\r\n        Object.assign({}, newUser, {\r\n          activity: state.user.recentActivity,\r\n          tickets: state.user.tickets,\r\n        })\r\n      )\r\n    );\r\n    dispatch(updateStoredUser(newUser));\r\n    dispatch(updateUser(newUser));\r\n  },\r\n};\r\n","import { Action, Dispatch } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../../flux/store\";\r\nimport { Endpoint } from \"../\";\r\nimport Endpoints from \"../../constants/api\";\r\nimport { toast } from \"react-toastify\";\r\nimport { updateAvatar } from \"../../flux/slices/authSlice\";\r\nimport { updateStoredUser } from \"../../flux/slices/contextSlice\";\r\nimport { updateUser } from \"../../flux/slices/userSlice\";\r\nimport { updateDemoUser } from \"../../flux/slices/demoSlice\";\r\n\r\nexport const updateUserAvatar: Endpoint<undefined> = {\r\n  normal: (dispatch: Dispatch<Action<any>>, state: RootState) => {\r\n    fetch(`${Endpoints.UPDATE_USER}/${state.user.info.tag}`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify([\r\n        {\r\n          op: \"replace\",\r\n          path: \"/Avatar\",\r\n          value: state.user.stagedUrl,\r\n        },\r\n      ]),\r\n    }).then((res) => {\r\n      if (res.status === 204) {\r\n        var newUser = Object.assign({}, state.user.info, {\r\n          profileImg: state.user.stagedUrl,\r\n        });\r\n        toast.success(\"Successfully updated avatar.\");\r\n        // update user profile page\r\n        dispatch(updateUser(newUser));\r\n        // update context slice\r\n        dispatch(updateStoredUser(newUser));\r\n        // if the client is changing their own avatar,\r\n        // update the sidebar avatar img too\r\n        if (state.authentication.user.info.tag === state.user.info.tag)\r\n          dispatch(updateAvatar(state.user.stagedUrl));\r\n      } else toast.error(\"Something went wrong\");\r\n    });\r\n  },\r\n  demo: (dispatch: Dispatch<Action<any>>, state: RootState) => {\r\n    var newUser = Object.assign({}, state.user.info, {\r\n      profileImg: state.user.stagedUrl,\r\n    });\r\n    // update demo\r\n    dispatch(\r\n      updateDemoUser(\r\n        Object.assign({}, newUser, {\r\n          activity: state.user.recentActivity,\r\n          tickets: state.user.tickets,\r\n        })\r\n      )\r\n    );\r\n    toast.success(\"Successfully updated avatar.\");\r\n    // update user profile page\r\n    dispatch(updateUser(newUser));\r\n    // update context slice\r\n    dispatch(updateStoredUser(newUser));\r\n    // if the client is changing their own avatar,\r\n    // update the sidebar avatar img too\r\n    if (state.authentication.user.info.tag === state.user.info.tag)\r\n      dispatch(updateAvatar(state.user.stagedUrl));\r\n  },\r\n};\r\n","import { Action, Dispatch } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../../flux/store\";\r\nimport { Endpoint } from \"../\";\r\nimport Endpoints from \"../../constants/api\";\r\nimport { toast } from \"react-toastify\";\r\nimport Routes from \"../../constants/routes\";\r\nimport { logout } from \"../../flux/slices/authSlice\";\r\nimport history from \"../../routes/history\";\r\n\r\nexport const logoutUser: Endpoint<undefined> = {\r\n  normal: (dispatch: Dispatch<Action<any>>, state: RootState) => {\r\n    fetch(Endpoints.LOGOUT, { method: \"POST\" })\r\n      .then(() => {\r\n        dispatch(logout());\r\n        history.push(Routes.HOME);\r\n      })\r\n      .catch(() =>\r\n        toast.error(\"Oops, something went wrong! Please try again.\")\r\n      );\r\n  },\r\n  demo: (dispatch: Dispatch<Action<any>>, state: RootState) => {\r\n    history.push(Routes.DEMO);\r\n    window.location.reload();\r\n  },\r\n};\r\n","import { Action, Dispatch } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../../flux/store\";\r\nimport { Endpoint } from \"../\";\r\nimport Endpoints from \"../../constants/api\";\r\n\r\nexport const readNotifications: Endpoint<undefined> = {\r\n  normal: (dispatch: Dispatch<Action<any>>, state: RootState) => {\r\n    fetch(Endpoints.READ_ALL_NOTIFICATIONS, {\r\n      method: \"PATCH\",\r\n    }).catch(() => {});\r\n  },\r\n  demo: (dispatch: Dispatch<Action<any>>, state: RootState) => {\r\n    // don't need to do anything; it is already taken care of by the authSlice reducer\r\n  },\r\n};\r\n","import { Dispatch } from \"@reduxjs/toolkit\";\r\nimport { EditedTicket, NewTicket } from \"../constants/ticket\";\r\nimport { AppThunk, RootState } from \"../flux/store\";\r\n\r\nimport { initialLoad } from \"./endpoints/InitialLoad\";\r\nimport { loadSession } from \"./endpoints/LoadSession\";\r\n\r\nimport { createTicket } from \"./endpoints/CreateTicket\";\r\nimport { loadTicketById } from \"./endpoints/LoadTicketById\";\r\nimport { updateTicket } from \"./endpoints/UpdateTicket\";\r\nimport { newComment } from \"./endpoints/AddComment\";\r\nimport { deleteTicket } from \"./endpoints/DeleteTicket\";\r\n\r\nimport { getUserByTag } from \"./endpoints/GetUserByTag\";\r\nimport { updateUserRank } from \"./endpoints/UpdateUserRank\";\r\nimport { updateUserAvatar } from \"./endpoints/UpdateUserAvatar\";\r\n\r\nimport { logoutUser } from \"./endpoints/Logout\";\r\nimport { readNotifications } from \"./endpoints/ReadNotifications\";\r\n/* \r\n    Purpose: this module is meant to abstract the interface between the API and the server,\r\n    to allow for seeding/demo users (the goal is to allow users to experience the\r\n    webapp in all its glory [as an admin] without registering an acct and without\r\n    having lasting impacts on the live database) \r\n\r\n    Implementation: API object contains action creators as fields; each action creator\r\n    encapsulates some serverside interaction, with a demo branch and a normal branch\r\n    (the branch selection is automatically handled) - the demo branch is meant\r\n    to hold interactions with some serverside object while the normal branch has AJAX calls\r\n\r\n    Usage Example: \r\n        \r\n        const ticket: NewTicket = useSelector(selectTicket)\r\n        const dispatch: Dispatch<Action<any>> = useDispatch()\r\n        dispatch(API.createTicket(ticket));\r\n\r\n    Note: there are three endpoints not present here: login, register, and subscribe.\r\n    All of these endpoints are just disabled on demo mode - there is no branching logic.\r\n    Abstracting these would only serve to unnecessarily increase complexity. The API\r\n    abstraction was added near the end of development which is another reason for this\r\n    inconsistency; it is simpler and easier to leave those api calls as they are instead\r\n    of aiming for 100% encapsulation of serverside interactions with this module.\r\n*/\r\n\r\ntype EndpointKey<T> = (\r\n  dispatch: Dispatch<any>,\r\n  state: RootState,\r\n  t?: T\r\n) => void;\r\n\r\nexport interface Endpoint<T> {\r\n  normal: EndpointKey<T>;\r\n  demo: EndpointKey<T>;\r\n}\r\n\r\nconst selectBranch = <T>(endpoint: Endpoint<T>) => (t?: T): AppThunk => (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const state: RootState = getState();\r\n  const branch: EndpointKey<T> = state.demo.demoMode\r\n    ? endpoint.demo\r\n    : endpoint.normal;\r\n  return branch(dispatch, state, t);\r\n};\r\n\r\ntype APIKey<T> = (arg?: T) => AppThunk;\r\n\r\ninterface API {\r\n  // misc\r\n  initialLoad: () => void;\r\n  loadSession: (err: () => void) => void;\r\n  // ticket/comments\r\n  createTicket: APIKey<NewTicket>;\r\n  loadTicketById: APIKey<string>;\r\n  updateTicket: APIKey<EditedTicket>;\r\n  addComment: APIKey<string>;\r\n  deleteTicket: APIKey<undefined>;\r\n  // user\r\n  loadUserByTag: APIKey<string>;\r\n  updateUserRank: APIKey<number>;\r\n  updateUserAvatar: APIKey<undefined>;\r\n  // local client\r\n  logout: APIKey<undefined>;\r\n  readNotifications: APIKey<undefined>;\r\n}\r\n\r\nconst api: API = {\r\n  // misc\r\n  initialLoad: initialLoad,\r\n  loadSession: loadSession,\r\n  // ticket/comments\r\n  createTicket: selectBranch(createTicket),\r\n  loadTicketById: selectBranch(loadTicketById),\r\n  updateTicket: selectBranch(updateTicket),\r\n  addComment: selectBranch(newComment),\r\n  deleteTicket: selectBranch(deleteTicket),\r\n  // user\r\n  loadUserByTag: selectBranch(getUserByTag),\r\n  updateUserRank: selectBranch(updateUserRank),\r\n  updateUserAvatar: selectBranch(updateUserAvatar),\r\n  // local client\r\n  logout: selectBranch(logoutUser),\r\n  readNotifications: selectBranch(readNotifications),\r\n};\r\n\r\nexport default api;\r\n","import { AppThunk } from \"../../flux/store\";\r\nimport Endpoints from \"../../constants/api\";\r\nimport {\r\n  Notification,\r\n  getNotificationFromDTO,\r\n} from \"../../constants/notification\";\r\nimport {\r\n  CollapsedTicket,\r\n  getCollapsedTicketFromDTO,\r\n} from \"../../constants/ticket\";\r\nimport { getUserFromDTO, generateLocalUserFromDTO } from \"../../constants/user\";\r\nimport { loadUser, finishedLoading } from \"../../flux/slices/authSlice\";\r\nimport {\r\n  addCollapsedTickets,\r\n  addUsers,\r\n  addActivity,\r\n  harmonizeContext,\r\n} from \"../../flux/slices/contextSlice\";\r\nimport { setTotalPages, setRecentActivity } from \"../../flux/slices/homeSlice\";\r\n\r\n// note: period is the reciprocal of frequency\r\n// we want to ask the server for updates every 10 minutes\r\nconst updatePeriod = 10 * 60 * 1000;\r\n// we want to check if we are ready to ask the server for an update, once a minute\r\nconst checkPeriod = 1 * 60 * 1000;\r\n\r\nexport const initialLoad = (): AppThunk => (dispatch, getState): void => {\r\n  fetch(Endpoints.INITIAL_LOAD, { method: \"GET\" })\r\n    .then((res) => res.json())\r\n    .then((res: any) => {\r\n      const tickets: CollapsedTicket[] = res.tickets.map(\r\n        getCollapsedTicketFromDTO\r\n      );\r\n\r\n      dispatch(addCollapsedTickets(tickets));\r\n      dispatch(setTotalPages(Math.ceil(tickets.length / 5)));\r\n      dispatch(addUsers(res.users.map(getUserFromDTO)));\r\n\r\n      const notifications: Notification[] = res.activity.map(\r\n        getNotificationFromDTO\r\n      );\r\n\r\n      dispatch(addActivity(notifications));\r\n      dispatch(\r\n        setRecentActivity(\r\n          notifications.filter((n) => n.message < 11).map((n) => n.id)\r\n        )\r\n      );\r\n      if (res.session !== null)\r\n        dispatch(\r\n          loadUser(\r\n            generateLocalUserFromDTO(res.session, (ids: number[]) =>\r\n              notifications.filter(\r\n                (notification) => ids.indexOf(notification.id) !== -1\r\n              )\r\n            )\r\n          )\r\n        );\r\n    })\r\n    .catch(() => {})\r\n    .finally(() => dispatch(finishedLoading()));\r\n\r\n  const checkForUpdate = () => dispatch(harmonizeContext(false, updatePeriod));\r\n\r\n  // subscribe to updates from the server (do the actual update every updatePeriod seconds\r\n  // but check every minute if we are ready)\r\n  setInterval(checkForUpdate, checkPeriod);\r\n};\r\n","import Endpoints from \"../../constants/api\";\r\nimport Routes from \"../../constants/routes\";\r\nimport { generateLocalUserFromDTO } from \"../../constants/user\";\r\nimport { loadUser } from \"../../flux/slices/authSlice\";\r\nimport { Notification } from \"../../constants/notification\";\r\nimport { AppThunk } from \"../../flux/store\";\r\nimport history from \"../../routes/history\";\r\n\r\nexport const loadSession = (err: () => void): AppThunk => (\r\n  dispatch,\r\n  getState\r\n): void => {\r\n  fetch(Endpoints.LOAD_SESSION, { method: \"GET\" })\r\n    .then((res) => res.json())\r\n    .then((res: any) => {\r\n      if (res.Tag === undefined && res.status !== undefined) throw new Error();\r\n\r\n      const getNotificationsByIds = (ids: number[]): Notification[] => {\r\n        const notifications = getState().context.stores.activity.byKey;\r\n        return ids.map((id: number) => notifications[id.toString()]);\r\n      };\r\n\r\n      dispatch(loadUser(generateLocalUserFromDTO(res, getNotificationsByIds)));\r\n      history.push(Routes.HOME);\r\n    })\r\n    .catch(err);\r\n};\r\n","import React from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\n\r\ntype Props = { length: number };\r\n\r\nexport default class extends React.Component<Props, {}> {\r\n  static defaultProps = {\r\n    length: 150,\r\n  };\r\n\r\n  render = () => (\r\n    <RingWrapper length={this.props.length}>\r\n      <div />\r\n      <div />\r\n      <div />\r\n      <div />\r\n    </RingWrapper>\r\n  );\r\n}\r\n\r\nexport const spin = keyframes`\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n`;\r\n\r\nconst selectLength = (props: Props): number => props.length;\r\n\r\nconst RingWrapper = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  width: ${selectLength}px;\r\n  height: ${selectLength}px;\r\n\r\n  div {\r\n    box-sizing: border-box;\r\n    display: block;\r\n    position: absolute;\r\n    width: ${selectLength}px;\r\n    height: ${selectLength}px;\r\n    margin: 8px;\r\n    border: 8px solid #fff;\r\n    border-radius: 50%;\r\n    animation: ${spin} 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\r\n    border-color: #fff transparent transparent transparent;\r\n  }\r\n\r\n  div: nth-child(1) {\r\n    animation-delay: -0.45s;\r\n  }\r\n\r\n  div:nth-child(2) {\r\n    animation-delay: -0.3s;\r\n  }\r\n\r\n  div:nth-child(3) {\r\n    animation-delay: -0.15s;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { spin } from \"./LoadingRing\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const LoadWrapper = styled.div`\r\n  color: var(--text-color);\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport default () => (\r\n  <FancyRing>\r\n    <div />\r\n  </FancyRing>\r\n);\r\n\r\nconst FancyRing = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: 1000;\r\n  background: rgba(0, 0, 0, 0.8);\r\n  backface-visibility: hidden;\r\n\r\n  > div {\r\n    display: block;\r\n    position: relative;\r\n    left: 50%;\r\n    top: 50%;\r\n    width: 150px;\r\n    height: 150px;\r\n    margin: -75px 0 0 -75px;\r\n    border-radius: 50%;\r\n    border: 3px solid transparent;\r\n    border-top-color: #e85656;\r\n    backface-visibility: hidden;\r\n    transform: translate3d(0, 0, 0);\r\n    backface-visibility: hidden;\r\n    animation: ${spin} 2s linear infinite; /* Chrome, Firefox 16+, IE 10+, Opera */\r\n\r\n    :before {\r\n      content: \"\";\r\n      position: absolute;\r\n      top: 5px;\r\n      left: 5px;\r\n      right: 5px;\r\n      bottom: 5px;\r\n      border-radius: 50%;\r\n      border: 3px solid transparent;\r\n      border-top-color: #209e91;\r\n      -webkit-animation: ${spin} 3s linear infinite;\r\n      animation: ${spin} 3s linear infinite;\r\n    }\r\n\r\n    :after {\r\n      content: \"\";\r\n      position: absolute;\r\n      top: 15px;\r\n      left: 15px;\r\n      right: 15px;\r\n      bottom: 15px;\r\n      border-radius: 50%;\r\n      border: 3px solid transparent;\r\n      border-top-color: #dfb81c;\r\n      animation: ${spin} 1.5s linear infinite;\r\n    }\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\n// Note: the left margin becomes 0 for\r\n// screens below 1215px because the\r\n// collapsed sidenav disappears at\r\n// those screens (takes up too much\r\n// space)\r\n//\r\n// Padding-bottom is present on mobile\r\n// because of the special bottom nav\r\nexport default styled.main`\r\n  padding: 2rem 40px 8px 40px;\r\n  margin: var(--nav-height) 0 0\r\n    ${(props: { sideNavWidth: number }) => props.sideNavWidth}px;\r\n  height: 100%;\r\n  width: calc(\r\n    100vw - ${(props: { sideNavWidth: number }) => props.sideNavWidth}px\r\n  );\r\n\r\n  @media (max-width: 1215px) {\r\n    margin-left: 0;\r\n    padding: 1rem;\r\n    width: 100%;\r\n  }\r\n\r\n  @media (max-width: 600px) {\r\n    padding: 10px 0 calc(var(--mobile-nav-height) + 1rem);\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/scss/main.scss\";\r\n\r\nexport default styled(ToastContainer).attrs({\r\n  limit: 11,\r\n})`\r\n  top: calc(var(--nav-height) + 0.5rem);\r\n  max-height: calc(--100vh - var(--nav-height) - 0.5rem);\r\n`;\r\n","import React from \"react\";\r\nimport SvgIcon from \"@material-ui/core/SvgIcon\";\r\n\r\nexport default (props: any) => (\r\n  <SvgIcon {...props} viewBox=\"0 0 512 512\">\r\n    <path d=\"M511.988 288.9c-.478 17.43-15.217 31.1-32.653 31.1H424v16c0 21.864-4.882 42.584-13.6 61.145l60.228 60.228c12.496 12.497 12.496 32.758 0 45.255-12.498 12.497-32.759 12.496-45.256 0l-54.736-54.736C345.886 467.965 314.351 480 280 480V236c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v244c-34.351 0-65.886-12.035-90.636-32.108l-54.736 54.736c-12.498 12.497-32.759 12.496-45.256 0-12.496-12.497-12.496-32.758 0-45.255l60.228-60.228C92.882 378.584 88 357.864 88 336v-16H32.666C15.23 320 .491 306.33.013 288.9-.484 270.816 14.028 256 32 256h56v-58.745l-46.628-46.628c-12.496-12.497-12.496-32.758 0-45.255 12.498-12.497 32.758-12.497 45.256 0L141.255 160h229.489l54.627-54.627c12.498-12.497 32.758-12.497 45.256 0 12.496 12.497 12.496 32.758 0 45.255L424 197.255V256h56c17.972 0 32.484 14.816 31.988 32.9zM257 0c-61.856 0-112 50.144-112 112h224C369 50.144 318.856 0 257 0z\" />\r\n  </SvgIcon>\r\n);\r\n","import styled from \"styled-components\";\r\n\r\nexport const TopNav = styled.nav`\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  padding: 1rem;\r\n  width: 100vw;\r\n  height: var(--nav-height);\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  background-color: var(--nav-bg);\r\n  z-index: 8;\r\n  color: var(--text-color);\r\n  border-bottom: 1px solid var(--dark);\r\n\r\n  @media (min-width: 600px) {\r\n    border-right: var(--scrollwidth) solid rgba(0, 0, 0, 0.8);\r\n  }\r\n`;\r\n\r\nexport const Label = styled.h1`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 1.25rem;\r\n  margin: 0 auto;\r\n  transform: translateX(-30px);\r\n\r\n  .inline-icon {\r\n    font-size: 1.25rem;\r\n  }\r\n\r\n  @media (max-width: 600px) {\r\n    font-size: 1rem;\r\n\r\n    .inline-icon {\r\n      font-size: 1rem;\r\n    }\r\n  }\r\n`;\r\n// Note: label is translated 30px left to perfectly center it; the IconButton is 60px wide.\r\n","import React from \"react\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Logo from \"../../logo\";\r\nimport { TopNav, Label } from \"./styles\";\r\n\r\nexport default ({ expandSideNav }: { expandSideNav: () => void }) => {\r\n  return (\r\n    <TopNav>\r\n      <IconButton\r\n        edge=\"start\"\r\n        color=\"inherit\"\r\n        aria-label=\"menu\"\r\n        onClick={expandSideNav}\r\n      >\r\n        <MenuIcon\r\n          style={{ fontSize: window.innerWidth < 600 ? \"1.5rem\" : \"2.25rem\" }}\r\n        />\r\n      </IconButton>\r\n      <Label>\r\n        <Logo className=\"inline-icon\" />\r\n        Bug Tracker\r\n      </Label>\r\n    </TopNav>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { UserInfo } from \"../../../constants/user\";\r\n\r\n// Generate a hash based on tag\r\nconst getHashCode = (input: string): number => {\r\n  var hash: number = 0;\r\n  if (input.length === 0) return hash;\r\n  for (var i = 0; i < input.length; i++) {\r\n    hash = input.charCodeAt(i) + ((hash << 5) - hash);\r\n    hash = hash & hash;\r\n  }\r\n  return hash;\r\n};\r\n\r\n// convert the hash into a color string\r\nconst intToHSL = (input: number): string =>\r\n  \"hsl(\" + (input % 360) + \",100%,30%)\";\r\n\r\nexport default (props: {\r\n  imgLength: string;\r\n  small?: boolean;\r\n  large?: boolean;\r\n  user: UserInfo;\r\n}) => {\r\n  var style = {\r\n    width: props.imgLength,\r\n    height: props.imgLength,\r\n  };\r\n  if (props.small)\r\n    style = Object.assign(style, {\r\n      fontSize: \"0.7rem\",\r\n    });\r\n  if (props.large)\r\n    style = Object.assign(style, {\r\n      fontSize: \"2rem\",\r\n    });\r\n\r\n  // if the user has a profile Image, use that; else, generate a color based on their tag\r\n  return props.user.profileImg ? (\r\n    <Avatar style={style} src={props.user.profileImg} />\r\n  ) : (\r\n    <Avatar\r\n      style={Object.assign(style, {\r\n        backgroundColor: intToHSL(getHashCode(props.user.tag)),\r\n      })}\r\n      children={props.user.tag.charAt(0)}\r\n    />\r\n  );\r\n};\r\n","import { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nexport default styled(Link)`\r\n  color: var(--highlight);\r\n  text-decoration: none;\r\n  background: rgba(0, 0, 0, 0);\r\n  text-align: center;\r\n  white-space: nowrap;\r\n  touch-action: manipulation;\r\n  line-height: 1.3333333;\r\n  font-size: 14px;\r\n  padding: 5px 8px;\r\n  width: auto;\r\n  height: auto;\r\n  border-radius: 5px;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  backface-visibility: hidden;\r\n  transition: transform 0.25s ease-out;\r\n\r\n  :hover,\r\n  :focus {\r\n    cursor: pointer;\r\n    outline: none;\r\n    transform: scale(1.05);\r\n    background-color: var(--highlight);\r\n    color: var(--text-color);\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ProfileWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: var(--text-color);\r\n  width: auto;\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\ninterface TagProps {\r\n  showTag: boolean;\r\n  fontSize: string;\r\n  color: string;\r\n  marginLeft: string;\r\n}\r\n\r\nexport const ProfileTag = styled.h3`\r\n  display: ${(props: TagProps) => (props.showTag ? \"block\" : \"none\")};\r\n  font-size: ${(props: TagProps) => props.fontSize};\r\n  color: ${(props: TagProps) => props.color};\r\n  margin: 0 0 0 ${(props: TagProps) => props.marginLeft};\r\n  white-space: nowrap;\r\n`;\r\n\r\nexport const PopperContent = styled.div`\r\n  max-width: 80vw;\r\n  overflow: hidden;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 1rem;\r\n\r\n  a {\r\n    margin-top: 0.8rem;\r\n  }\r\n`;\r\n\r\nexport const PopperTag = styled.h1`\r\n  margin: 0.8rem 0;\r\n  color: var(--text-color);\r\n  white-space: nowrap;\r\n`;\r\n","import React from \"react\";\r\nimport Routes from \"../../../constants/routes\";\r\nimport Popper from \"@material-ui/core/Popper\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport LinkButton from \"../../input/linkButton\";\r\nimport { UserInfo } from \"../../../constants/user\";\r\nimport { RankObject, getRankObj } from \"../../../constants/user\";\r\nimport { selectElementByKey } from \"../../../flux/slices/contextSlice\";\r\nimport { useSelector } from \"react-redux\";\r\n// Use a css file because of Material UI's portal functionality.\r\n// in short, Material UI places the Popper and all its children\r\n// in a separate div (meaning it is no longer a child of profile\r\n// wrapper); in order to circumvent this, a css file is required.\r\n// I think if there is a way to select a child's parent using css\r\n// then a css file could be avoided. I found the ':has' selector\r\n// but currently, it is not supported by any browser (July, 2020)\r\nimport Avatar from \"../avatar\";\r\nimport \"./Popper.css\";\r\nimport { ProfileWrapper, ProfileTag, PopperContent, PopperTag } from \"./styles\";\r\n\r\n// Notes:\r\n//  - imgLength denotes both width & height because img must be a square in order to make it a circle\r\n//  - units must be specified for all string atributes below (other than className)\r\n\r\ninterface StyleConfig {\r\n  className: string;\r\n  showImg: boolean;\r\n  imgLength: string;\r\n  internalSpacing: string;\r\n  showTag: boolean;\r\n  tagSize: string;\r\n  small?: boolean;\r\n}\r\n\r\ninterface Props {\r\n  styleConfig: StyleConfig;\r\n  userTag: string;\r\n  onRedirect?: () => void;\r\n}\r\n\r\nexport default (props: Props) => {\r\n  const [anchorEl, setAnchorEl] = React.useState<HTMLElement | null>(null);\r\n  const open = Boolean(anchorEl);\r\n  var user: UserInfo = useSelector(selectElementByKey(\"users\"))(props.userTag);\r\n  if (!user) return <h1>{\"undefined: \" + props.userTag}</h1>;\r\n  const rank: RankObject = getRankObj(user.rank);\r\n\r\n  return (\r\n    <ProfileWrapper\r\n      className={props.styleConfig.className}\r\n      aria-owns={open ? \"mouse-over-popover\" : undefined}\r\n      aria-haspopup=\"true\"\r\n      onClick={(event: React.MouseEvent<HTMLElement, MouseEvent>) =>\r\n        setAnchorEl(anchorEl === null ? event.currentTarget : null)\r\n      }\r\n      onMouseLeave={() => setAnchorEl(null)}\r\n    >\r\n      {props.styleConfig.showImg ? (\r\n        <Avatar\r\n          imgLength={props.styleConfig.imgLength}\r\n          small={props.styleConfig.small}\r\n          user={user}\r\n        />\r\n      ) : (\r\n        <React.Fragment />\r\n      )}\r\n      <ProfileTag\r\n        showTag={props.styleConfig.showTag}\r\n        marginLeft={props.styleConfig.internalSpacing}\r\n        fontSize={props.styleConfig.tagSize}\r\n        color={`var(--theme-${rank.nameColor})`}\r\n      >\r\n        {user.tag}\r\n      </ProfileTag>\r\n      <Popper\r\n        style={{ zIndex: 13 }}\r\n        className=\"popper\"\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        transition\r\n      >\r\n        {({ TransitionProps }) => (\r\n          <Fade {...TransitionProps} timeout={150}>\r\n            <PopperContent>\r\n              <Avatar imgLength=\"70px\" user={user} />\r\n              <PopperTag>{user.tag}</PopperTag>\r\n              <Chip\r\n                style={{\r\n                  color: \"white\",\r\n                  backgroundColor: `var(--theme-${rank.badgeColor})`,\r\n                }}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                label={rank.name}\r\n              />\r\n              <LinkButton\r\n                to={`${Routes.USER}/${user.tag}`}\r\n                onClick={() =>\r\n                  props.onRedirect !== undefined ? props.onRedirect() : {}\r\n                }\r\n              >\r\n                View Profile\r\n              </LinkButton>\r\n            </PopperContent>\r\n          </Fade>\r\n        )}\r\n      </Popper>\r\n    </ProfileWrapper>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const Cell = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  height: 70px;\r\n  ${(props: { commentVariant: boolean }) =>\r\n    props.commentVariant\r\n      ? `\r\n          height: auto;\r\n          align-items: flex-start;\r\n          \r\n        `\r\n      : ``}\r\n`;\r\n\r\nexport const CellText = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  margin: 0 0.5rem 0 0.7rem;\r\n  width: calc(100% - ${window.innerWidth > 1100 ? 50 : 40}px - 1rem);\r\n\r\n  .author {\r\n    max-width: 90%;\r\n\r\n    h3 {\r\n      line-height: 1.15;\r\n      padding-bottom: 0.5rem;\r\n      white-space: nowrap;\r\n      overflow: hidden;\r\n      text-overflow: ellipsis;\r\n      max-width: 100%;\r\n\r\n      @media (max-width: 1100px) {\r\n        font-size: 0.9rem;\r\n      }\r\n    }\r\n  }\r\n\r\n  h5 {\r\n    font-size: 0.9rem;\r\n    max-width: 95%;\r\n    color: var(--text-lightgrey);\r\n    text-align: left;\r\n    ${(props: { commentVariant: boolean }) => {\r\n      if (!props.commentVariant)\r\n        return `white-space: nowrap;\r\n                overflow: hidden;\r\n                text-overflow: ellipsis;`;\r\n      return `\r\n        white-space: pre-wrap;\r\n        word-wrap: break-word;\r\n        overflow: visible;\r\n        height: 100%;\r\n      `;\r\n    }}\r\n\r\n    @media (max-width: 1100px) {\r\n      font-size: 0.8rem;\r\n    }\r\n  }\r\n\r\n  h5:hover {\r\n    cursor: pointer;\r\n  }\r\n\r\n  .disableHoverFx:hover {\r\n    cursor: auto;\r\n  }\r\n\r\n  h6 {\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    font-size: 0.8rem;\r\n    color: var(--text-grey);\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport Popper from \"@material-ui/core/Popper\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport { PopperContent } from \"../userLink/styles\";\r\nimport { getDateFromISO } from \"../../../constants/date\";\r\nimport \"../userLink/Popper.css\";\r\nimport styled from \"styled-components\";\r\n\r\nconst formattedDate = (date: string): string =>\r\n  getDateFromISO(date).toLocaleString();\r\n\r\nconst getFormattedTimeString = (timeString: string): string =>\r\n  timeString.substring(0, timeString.length - 6) +\r\n  timeString.substring(timeString.length - 3);\r\n// v.substring(0, v.length - 6) + v.substring(v.length - 3);\r\n\r\nconst shortenDate = (dateStr: string): string => {\r\n  // if the date is within the past 24 hrs, then we want to return a time like xx:yy p.m. (in the user's local time)\r\n  // else, we want to return something of the form \"dd/mm/yyyy\"\r\n  const date: Date = getDateFromISO(dateStr);\r\n  return new Date().getTime() - date.getTime() < 24 * 60 * 60 * 1000\r\n    ? getFormattedTimeString(date.toLocaleTimeString())\r\n    : date.toLocaleDateString();\r\n};\r\n\r\n// Dates come in the form '2020-08-11T12:50:59.501876' (ISO 8601 format) in the UTC timezone\r\nexport default ({ date, className }: { date: string; className?: string }) => {\r\n  const [anchorEl, setAnchorEl] = React.useState<HTMLElement | null>(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  return (\r\n    <div className={className === undefined ? \"\" : className}>\r\n      <ShortDate\r\n        onClick={(event: React.MouseEvent<HTMLElement, MouseEvent>) =>\r\n          setAnchorEl(anchorEl === null ? event.currentTarget : null)\r\n        }\r\n        onMouseLeave={() => setAnchorEl(null)}\r\n      >\r\n        {shortenDate(date)}\r\n      </ShortDate>\r\n      <Popper\r\n        style={{ zIndex: 13 }}\r\n        className=\"popper\"\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        transition\r\n      >\r\n        {({ TransitionProps }) => (\r\n          <Fade {...TransitionProps} timeout={50}>\r\n            <PopperContent>\r\n              <FullDate>{formattedDate(date)}</FullDate>\r\n            </PopperContent>\r\n          </Fade>\r\n        )}\r\n      </Popper>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst FullDate = styled.p`\r\n  color: white;\r\n`;\r\n\r\nconst ShortDate = styled.h6`\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport UserLink from \"../userLink\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport API from \"../../../api\";\r\nimport {\r\n  Notification,\r\n  Variant,\r\n  generateGlobalMessage,\r\n  generateModalMessage,\r\n} from \"../../../constants/notification\";\r\nimport { Cell, CellText } from \"./styles\";\r\nimport Timestamp from \"../timestamp\";\r\n\r\n// Note: if comment variant is enabled, then two changes will be applied:\r\n// 1) the linking functionality will be disabled, meaning that clicking on\r\n//    a comment notification's description will not do anything\r\n// 2) text-overflow will not be hidden, meaning that long comments can be\r\n//    read without issue!\r\nexport default ({\r\n  notification,\r\n  className,\r\n  onClick,\r\n  variant,\r\n  enableCommentVariant,\r\n}: {\r\n  notification: Notification;\r\n  className: string;\r\n  onClick: () => void;\r\n  variant: Variant;\r\n  enableCommentVariant?: boolean;\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const imgLength: string = `${window.innerWidth > 1100 ? 50 : 40}px`;\r\n  const commentStyling: boolean =\r\n    Boolean(enableCommentVariant) && notification.message === 2;\r\n  var isValidId: boolean = true;\r\n  try {\r\n    isValidId = Number(notification.ticketId) !== -1;\r\n  } catch {}\r\n\r\n  const generateMessage = (): string => {\r\n    switch (variant) {\r\n      case Variant.MODAL:\r\n        return generateModalMessage(notification);\r\n      case Variant.GLOBAL:\r\n      default:\r\n        return generateGlobalMessage(notification);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Cell className={className} commentVariant={commentStyling}>\r\n      <UserLink\r\n        styleConfig={{\r\n          className: \"\",\r\n          showImg: true,\r\n          imgLength: imgLength,\r\n          internalSpacing: \"0\",\r\n          showTag: false,\r\n          tagSize: \"0\",\r\n        }}\r\n        userTag={notification.author}\r\n      />\r\n      <CellText commentVariant={commentStyling}>\r\n        <UserLink\r\n          styleConfig={{\r\n            className: \"author\",\r\n            showImg: false,\r\n            imgLength: \"0\",\r\n            internalSpacing: \"0\",\r\n            showTag: true,\r\n            tagSize: \"1rem\",\r\n          }}\r\n          userTag={notification.author}\r\n          onRedirect={() => onClick()}\r\n        />\r\n        {/* \r\n          OnClick is a function called when the user clicks the link\r\n          example usage: in the Navigation/Notifications component, we\r\n          want to close the notifications modal when the user clicks\r\n          for a smooth ux.\r\n          */}\r\n        <h5\r\n          className={!isValidId ? \"disableHoverFx\" : \"\"}\r\n          onClick={() => {\r\n            if (variant !== Variant.MODAL && isValidId) {\r\n              dispatch(API.loadTicketById(notification.ticketId));\r\n              onClick();\r\n            }\r\n          }}\r\n        >\r\n          {generateMessage()}\r\n        </h5>\r\n        <Timestamp date={notification.date} />\r\n      </CellText>\r\n    </Cell>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const ModalContentWrapper = styled.div`\r\n  position: absolute;\r\n  height: calc(100vh - 3vh - var(--nav-height));\r\n  top: calc(var(--nav-height) + 1.5vh);\r\n  width: ${(props: { width: string }) => props.width};\r\n  left: calc(50% - calc(${(props: { width: string }) => props.width} / 2));\r\n  overflow-x: hidden;\r\n  overflow-y: auto;\r\n  background-color: rgba(0, 0, 0, 0.7);\r\n  backdrop-filter: blur(3px);\r\n  border-radius: 4px;\r\n\r\n  ::-webkit-scrollbar {\r\n    width: 3px;\r\n    background-color: rgba(0, 0, 0, 0);\r\n  }\r\n\r\n  ::-webkit-scrollbar-thumb {\r\n    box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.1);\r\n    -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.1);\r\n    background-color: rgba(255, 255, 255, 0.5);\r\n  }\r\n\r\n  :focus,\r\n  :active,\r\n  :hover {\r\n    outline: none;\r\n    border: 1px solid rgba(0, 0, 0, 1);\r\n  }\r\n\r\n  @media (max-width: 600px) {\r\n    height: calc(100vh - 3vh - var(--nav-height) - var(--mobile-nav-height));\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { ModalContentWrapper } from \"../../../container/modalContent\";\r\n\r\nexport const NotificationWrapper = styled(ModalContentWrapper)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  jutsify-content: center;\r\n\r\n  .notification {\r\n    padding: 0.5rem 0 0.5rem 0.8rem;\r\n    border-bottom: 1px solid rgba(0, 0, 0, 0.5);\r\n    background-color: rgba(255, 255, 255, 0.2);\r\n  }\r\n\r\n  .new {\r\n    background-color: var(--transparent-highlight);\r\n  }\r\n`;\r\n\r\nexport const EmptyNotificationsBanner = styled.h1`\r\n  border-radius: 4px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: auto 0 50vh;\r\n  height: 3rem;\r\n  width: 100%;\r\n  font-style: italic;\r\n`;\r\n","import React from \"react\";\r\nimport { Notification, Variant } from \"../../../../constants/notification\";\r\nimport NotificationCell from \"../../notification\";\r\nimport { NotificationWrapper, EmptyNotificationsBanner } from \"./styles\";\r\n\r\nexport default ({\r\n  notifications,\r\n  variant,\r\n  onClick,\r\n}: {\r\n  notifications: Notification[];\r\n  variant: Variant;\r\n  onClick: () => void;\r\n}) => {\r\n  return (\r\n    <NotificationWrapper width={window.innerWidth < 600 ? \"90vw\" : \"500px\"}>\r\n      {notifications.length > 0 ? (\r\n        notifications.map((notification) => (\r\n          <NotificationCell\r\n            variant={variant}\r\n            onClick={onClick}\r\n            className={`notification ${notification.new ? \"new\" : \"\"}`}\r\n            notification={notification}\r\n          />\r\n        ))\r\n      ) : (\r\n        <EmptyNotificationsBanner>\r\n          You have no notifications.\r\n        </EmptyNotificationsBanner>\r\n      )}\r\n    </NotificationWrapper>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const Profile = styled.div`\r\n  ${(props: { collapsed: boolean }) =>\r\n    props.collapsed\r\n      ? `margin: 1rem 1rem 0.5rem;`\r\n      : `  \r\n        margin: 1.5rem 1rem 1rem;\r\n        padding-bottom: 1rem;\r\n        border-bottom: 1px solid rgba(255, 255, 255, 0.3);\r\n      `}\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: calc(100% - 2rem);\r\n\r\n  h1 {\r\n    margin-top: 0.5rem;\r\n    width: 95%;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n    font-size: 1.4rem;\r\n  }\r\n`;\r\n\r\nexport const ProfileWidgetWrapper = styled.div`\r\n  margin: 1rem 0 0;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  a {\r\n    text-decorations: none;\r\n  }\r\n\r\n  .badge:hover {\r\n    cursor: pointer;\r\n  }\r\n\r\n  .icon {\r\n    color: var(--text-color);\r\n\r\n    :hover {\r\n      cursor: pointer;\r\n      color: var(--highlight);\r\n    }\r\n  }\r\n\r\n  .settings {\r\n    margin-right: 1rem;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { viewNotifications } from \"../../../flux/slices/authSlice\";\r\nimport API from \"../../../api\";\r\nimport Routes from \"../../../constants/routes\";\r\nimport { Notification, Variant } from \"../../../constants/notification\";\r\nimport { getRankObj, User } from \"../../../constants/user\";\r\nimport Avatar from \"../avatar\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport { Link } from \"react-router-dom\";\r\nimport NotificationSet from \"./notificationSet\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport { Profile, ProfileWidgetWrapper } from \"./styles\";\r\n\r\ninterface Props {\r\n  collapsed: boolean;\r\n  toggleCollapsed: () => void;\r\n  className: string;\r\n  showNotificationsOnly: boolean;\r\n  user: User;\r\n}\r\n\r\n// Displays the user's profileImg/tag, a link to the settings page,\r\n// and a button to access notifications. Note: this component is not\r\n// related to the user route! This has to do solely with\r\n// authenticated users' avatar/name/notifications/etc that are found\r\n// in the nav bar\r\nexport default (props: Props) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const user = props.user;\r\n  const dispatch = useDispatch();\r\n\r\n  const notificationsAmount = user.notifications.filter(\r\n    (notification: Notification) => notification.new\r\n  ).length;\r\n\r\n  const clearNewNotifications = () => {\r\n    // if there were new notifications,\r\n    // send a request to server setting all new notifications to viewed\r\n    // and locally set all notifications to viewed too\r\n    if (notificationsAmount > 0) {\r\n      dispatch(API.readNotifications());\r\n      dispatch(viewNotifications());\r\n      // Send a request to the server here.\r\n    }\r\n  };\r\n\r\n  const close = () => {\r\n    setOpen(false);\r\n    clearNewNotifications();\r\n  };\r\n\r\n  const length = props.collapsed ? \"30px\" : \"80px\";\r\n\r\n  const notificationsWidget = (\r\n    <React.Fragment>\r\n      <Badge\r\n        className=\"badge\"\r\n        // BadgeContent is the number of new notifications\r\n        // if it is 0, then the badge is not visible\r\n        badgeContent={notificationsAmount}\r\n        overlap=\"circle\"\r\n        max={9}\r\n        color=\"error\"\r\n        anchorOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"right\",\r\n        }}\r\n        onClick={() => setOpen(true)}\r\n      >\r\n        <Icon className=\"icon\" onClick={() => setOpen(true)}>\r\n          notifications\r\n        </Icon>\r\n      </Badge>\r\n      <Modal\r\n        style={{ zIndex: 12 }}\r\n        open={open}\r\n        onClose={close}\r\n        aria-labelledby=\"Notifications\"\r\n        aria-describedby=\"A list of notifications for the user, each containing an author and a message.\"\r\n      >\r\n        <div>\r\n          <NotificationSet\r\n            onClick={close}\r\n            notifications={user.notifications}\r\n            variant={Variant.GLOBAL}\r\n          />\r\n        </div>\r\n      </Modal>\r\n    </React.Fragment>\r\n  );\r\n\r\n  // Mobile\r\n  if (props.showNotificationsOnly) {\r\n    return notificationsWidget;\r\n  }\r\n\r\n  return user.authenticated ? (\r\n    <Profile collapsed={props.collapsed} className={props.className}>\r\n      <Avatar\r\n        imgLength={length}\r\n        user={user.info}\r\n        small={props.collapsed}\r\n        large={!props.collapsed}\r\n      />\r\n      {props.collapsed ? (\r\n        <React.Fragment />\r\n      ) : (\r\n        <React.Fragment>\r\n          <h1\r\n            style={{\r\n              color: `var(--theme-${getRankObj(user.info.rank).nameColor})`,\r\n            }}\r\n          >\r\n            {user.info.tag}\r\n          </h1>\r\n          <ProfileWidgetWrapper>\r\n            <Link\r\n              to={`${Routes.USER}/${user.info.tag}`}\r\n              onClick={\r\n                window.innerWidth < 600 ? props.toggleCollapsed : () => {}\r\n              }\r\n            >\r\n              <Icon className=\"settings icon\">person</Icon>\r\n            </Link>\r\n            {notificationsWidget}\r\n          </ProfileWidgetWrapper>\r\n        </React.Fragment>\r\n      )}\r\n    </Profile>\r\n  ) : (\r\n    <React.Fragment />\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const SideNav = styled.nav`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: ${(props: { collapsed: boolean; sideNavWidth: number }) =>\r\n    props.sideNavWidth}px;\r\n  height: 100vh;\r\n  margin-top: var(--nav-height);\r\n  background-color: var(--vert-nav-bg);\r\n  z-index: 7;\r\n  border-right: 1px solid var(--dark);\r\n\r\n  .selected,\r\n  .selected i {\r\n    color: var(--highlight);\r\n\r\n    @media (min-width: 600px) {\r\n      :hover {\r\n        color: var(--text-color);\r\n      }\r\n    }\r\n  }\r\n\r\n  .inline-icon {\r\n    width: 25px;\r\n    margin-right: 0.8rem;\r\n  }\r\n\r\n  ul li {\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    width: 100%;\r\n    padding: 0.8rem 0;\r\n    ${(props: { collapsed: boolean; sideNavWidth: number }) =>\r\n      props.collapsed\r\n        ? \"padding-left: 0.3rem; font-size: 1.5rem;\"\r\n        : \"padding-left: 0.8rem; font-size: 1.3rem;\"}\r\n  }\r\n\r\n  @media (max-width: 1215px) {\r\n    ${(props: { collapsed: boolean; sideNavWidth: number }) =>\r\n      props.collapsed ? \"width: 0; ul {display: none;}\" : \"width: 60vw;\"}\r\n    transition: width 0.1s;\r\n    background-color: rgba(0, 0, 0, 0.8);\r\n    backdrop-filter: blur(4px);\r\n\r\n    .profileWrapper {\r\n      ${(props: { collapsed: boolean; sideNavWidth: number }) =>\r\n        props.collapsed\r\n          ? \"display: none;\"\r\n          : \"width: 172px; margin: 5rem auto 0;\"}\r\n    }\r\n\r\n    ul {\r\n      margin-top: 1rem;\r\n      ${(props: { collapsed: boolean; sideNavWidth: number }) =>\r\n        props.collapsed ? \"display: none;padding-top: 10vh;\" : \"display: flex;\"}\r\n      flex-direction: column;\r\n\r\n      li {\r\n        margin: 0.1rem;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (max-width: 600px) {\r\n    ${(props: { collapsed: boolean; sideNavWidth: number }) =>\r\n      props.collapsed\r\n        ? `\r\n        border-right: none;\r\n          display: block;\r\n          width: 100vw;\r\n          margin-top: auto;\r\n          bottom: 0;\r\n          left: 0;\r\n          height: var(--mobile-nav-height);\r\n\r\n          ul {\r\n            margin-top: 0;\r\n            padding-top: 0;\r\n            height: 100%;\r\n            width: fit-content;\r\n            display: inline-flex;\r\n            flex-direction: row;\r\n            justify-content: center;\r\n\r\n            a {\r\n              margin: 0 0.5rem;\r\n            }\r\n\r\n            li:hover {\r\n              background-color: rgba(0, 0, 0, 0);\r\n            }\r\n          }\r\n\r\n          .mobileNavigationWidget {\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n            width: 100%;\r\n\r\n            .mobileProfileWrapper {\r\n              width: 53px;\r\n              margin-right: 9px;\r\n            }\r\n            \r\n            .badge {\r\n              padding: 0 0.1rem 0 0.4rem;\r\n            }\r\n\r\n            .icon {\r\n              color: var(--text-color);\r\n            }\r\n          }\r\n        `\r\n        : \"width: 100vw;\"}\r\n  }\r\n`;\r\n\r\n// GlassDiv just serves to blur the background behind the\r\n// sideNav because for screens of width between ~600-1200,\r\n// the sidenav is only ~60vw\r\n// Note: also has an onclick to toggle collapse\r\nexport const GlassPane = styled.div`\r\n  @media (max-width: 1215px) and (min-width: 601px) {\r\n    ${(props: { collapsed: boolean }) =>\r\n      props.collapsed ? \"display: none;\" : \"\"}\r\n    position: fixed;\r\n    top: 0;\r\n    right: 0;\r\n    width: calc(40vw);\r\n    height: calc(100vh - var(--nav-height));\r\n    margin: var(--nav-height) 0 0 0;\r\n    z-index: 6;\r\n    backdrop-filter: blur(4px);\r\n  }\r\n`;\r\n\r\nexport const NavLink = styled(Link)`\r\n  margin: 0 auto;\r\n  text-decoration: none;\r\n  color: var(--text-color);\r\n`;\r\n","import React from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { NavigationItem } from \"..\";\r\nimport Profile from \"../../profile\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport { SideNav, GlassPane, NavLink } from \"./styles\";\r\nimport { User } from \"../../../../constants/user\";\r\n\r\nexport default ({\r\n  authenticated,\r\n  collapsed,\r\n  collapsedWidth,\r\n  extendedWidth,\r\n  navItemSet,\r\n  toggleCollapsed,\r\n  logout,\r\n  logoutItem,\r\n  user,\r\n}: {\r\n  authenticated: boolean;\r\n  collapsed: boolean;\r\n  collapsedWidth: number;\r\n  extendedWidth: number;\r\n  navItemSet: NavigationItem[];\r\n  toggleCollapsed: () => void;\r\n  logout: () => void;\r\n  logoutItem: NavigationItem;\r\n  user: User;\r\n}) => {\r\n  const location = useLocation().pathname;\r\n  const NavLinkSet = navItemSet.map((navItem) =>\r\n    // Do not display the logout item for mobile bottom nav\r\n    window.innerWidth < 600 && navItem === logoutItem && collapsed ? (\r\n      <React.Fragment key={navItem.text} />\r\n    ) : (\r\n      <NavLink\r\n        key={navItem.text}\r\n        to={navItem.path}\r\n        onClick={() => {\r\n          // On mobile, we automatically close the nav\r\n          // when a user clicks on a link.\r\n          if (window.innerWidth < 1215) toggleCollapsed();\r\n          // Logout\r\n          if (navItem === logoutItem) logout();\r\n        }}\r\n      >\r\n        <ButtonBase\r\n          // ButtonBase gives the ripple effect\r\n          focusRipple\r\n          style={{\r\n            width: collapsed ? collapsedWidth : extendedWidth,\r\n            height: \"100%\",\r\n            fontFamily: \"Roboto\",\r\n          }}\r\n        >\r\n          <li\r\n            className={`${window.innerWidth > 600 ? \"hoverfx3\" : \"\"} ${\r\n              // The logout item can not be selected\r\n              navItem === logoutItem\r\n                ? \"\"\r\n                : \"/\" + navItem.path === location\r\n                ? \"selected\"\r\n                : \"\"\r\n            }`}\r\n            key={navItem.text}\r\n          >\r\n            <Icon className=\"inline-icon\">{navItem.iconName}</Icon>\r\n            {collapsed ? \"\" : navItem.text}\r\n          </li>\r\n        </ButtonBase>\r\n      </NavLink>\r\n    )\r\n  );\r\n  return (\r\n    <React.Fragment>\r\n      <SideNav\r\n        collapsed={collapsed}\r\n        sideNavWidth={collapsed ? collapsedWidth : extendedWidth}\r\n      >\r\n        <Profile\r\n          showNotificationsOnly={false}\r\n          collapsed={collapsed}\r\n          toggleCollapsed={toggleCollapsed}\r\n          className=\"profileWrapper\"\r\n          user={user}\r\n        />\r\n        {window.innerWidth < 600 && collapsed ? (\r\n          <div className=\"mobileNavigationWidget\">\r\n            <ul>{NavLinkSet}</ul>\r\n            {authenticated ? (\r\n              <div className=\"mobileProfileWrapper\">\r\n                <Profile\r\n                  showNotificationsOnly={true}\r\n                  collapsed={collapsed}\r\n                  toggleCollapsed={toggleCollapsed}\r\n                  className=\"\"\r\n                  user={user}\r\n                />\r\n              </div>\r\n            ) : (\r\n              <React.Fragment />\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <ul>{NavLinkSet}</ul>\r\n        )}\r\n      </SideNav>\r\n      <GlassPane {...{ collapsed }} onClick={toggleCollapsed} />\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../store\";\r\nimport { collapsedWidth, extendedWidth } from \"../../constants/navigation\";\r\n\r\ninterface NavigationState {\r\n  collapsed: boolean;\r\n}\r\n\r\nconst initialState: NavigationState = {\r\n  collapsed: window.innerWidth < 1100 ? true : false,\r\n};\r\n\r\nexport const navigationSlice = createSlice({\r\n  name: \"navigation\",\r\n  initialState,\r\n  reducers: {\r\n    toggleCollapse: (state) => {\r\n      state.collapsed = !state.collapsed;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { toggleCollapse } = navigationSlice.actions;\r\n\r\nexport const selectCollapsed = (state: RootState): boolean =>\r\n  state.navigation.collapsed;\r\n\r\nexport const selectSideNavWidth = (state: RootState): number =>\r\n  state.navigation.collapsed ? collapsedWidth : extendedWidth;\r\n\r\nexport default navigationSlice.reducer;\r\n","export const collapsedWidth: number = 53;\r\nexport const extendedWidth: number = 175;\r\n// Navigation Widths\r\n","import React from \"react\";\r\nimport TopNavigation from \"./topNav\";\r\nimport SideNavigation from \"./sideNav\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { selectAuthenticated } from \"../../../flux/slices/authSlice\";\r\nimport {\r\n  toggleCollapse,\r\n  selectCollapsed,\r\n} from \"../../../flux/slices/navigationSlice\";\r\nimport { collapsedWidth, extendedWidth } from \"../../../constants/navigation\";\r\nimport Routes from \"../../../constants/routes\";\r\nimport API from \"../../../api\";\r\nimport { User } from \"../../../constants/user\";\r\n\r\nexport type NavigationItem = {\r\n  path: string;\r\n  iconName: string;\r\n  text: string;\r\n};\r\n\r\nconst HomeItem: NavigationItem = {\r\n  path: Routes.HOME,\r\n  iconName: \"home\",\r\n  text: \"Home\",\r\n};\r\n\r\nconst LoginItem: NavigationItem = {\r\n  path: Routes.LOGIN,\r\n  iconName: \"vpn_key\",\r\n  text: \"Login\",\r\n};\r\n\r\nconst RegisterItem: NavigationItem = {\r\n  path: Routes.REGISTER,\r\n  iconName: \"person_add\",\r\n  text: \"Register\",\r\n};\r\n\r\nconst DashboardItem: NavigationItem = {\r\n  path: Routes.DASHBOARD,\r\n  iconName: \"equalizer\",\r\n  text: \"Dashboard\",\r\n};\r\n\r\nconst LogoutItem: NavigationItem = {\r\n  path: Routes.HOME,\r\n  iconName: \"exit_to_app_sharp\",\r\n  text: \"Logout\",\r\n};\r\n\r\nconst defaultNavSet: NavigationItem[] = [HomeItem, LoginItem, RegisterItem];\r\nconst authNavSet: NavigationItem[] = [HomeItem, DashboardItem, LogoutItem];\r\n\r\n// Container class for SideNav and TopNav, meant to handle the logic\r\n// for both components.\r\nexport default ({ user }: { user: User }) => {\r\n  const dispatch = useDispatch();\r\n  const authenticated: boolean = useSelector(selectAuthenticated);\r\n  const collapsed: boolean = useSelector(selectCollapsed);\r\n  const toggle = () => dispatch(toggleCollapse());\r\n  return (\r\n    <React.Fragment>\r\n      <TopNavigation expandSideNav={toggle} />\r\n      <SideNavigation\r\n        {...{ authenticated, collapsed, collapsedWidth, extendedWidth }}\r\n        navItemSet={authenticated ? authNavSet : defaultNavSet}\r\n        toggleCollapsed={collapsed ? () => {} : toggle}\r\n        logout={() => dispatch(API.logout())}\r\n        logoutItem={LogoutItem}\r\n        user={user}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { TypeLabel } from \"../../../constants/ticket\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport styled from \"styled-components\";\r\n\r\nexport default ({ label }: { label: number }) => {\r\n  return (\r\n    <TicketTag\r\n      className={TypeLabel[label].toLowerCase().replace(/\\s+/g, \"_\")}\r\n      size=\"small\"\r\n      label={TypeLabel[label]}\r\n    />\r\n  );\r\n};\r\n\r\nconst TicketTag = styled(Chip)`\r\n  font-size: 0.7rem !important;\r\n  margin-right: 0.5rem;\r\n\r\n  span {\r\n    color: white;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Status } from \"../../../constants/ticket\";\r\n\r\ninterface Props {\r\n  status: number;\r\n  styles: StyledProps;\r\n}\r\n\r\nexport default (props: Props) => {\r\n  return <StatusIndicator className={Status[props.status]} {...props.styles} />;\r\n};\r\n\r\n// Note: all values' units must be specified.\r\n// The status indicator's width/height are both\r\n// set to the given length dimension to ensure\r\n// that it is a square. That way, we can apply\r\n// border-radius: 50% and get a perfect\r\n// circle!\r\ninterface StyledProps {\r\n  length: string;\r\n  rightMargin: string;\r\n  leftMargin: string;\r\n}\r\n\r\nconst length = (props: StyledProps): string => props.length;\r\n\r\nconst StatusIndicator = styled.div`\r\n  width: ${length};\r\n  min-width: ${length};\r\n  max-width: ${length};\r\n  height: ${length};\r\n  min-height: ${length};\r\n  max-height: ${length};\r\n  border-radius: 50%;\r\n  margin: 0 ${(props: StyledProps) => props.rightMargin} 0\r\n    ${(props: StyledProps) => props.leftMargin};\r\n`;\r\n","import React from \"react\";\r\nimport UserLink from \"../userLink\";\r\nimport AvatarGroup from \"@material-ui/lab/AvatarGroup\";\r\nimport styled from \"styled-components\";\r\n\r\nexport interface Props {\r\n  users: string[];\r\n  maxLinks: number;\r\n  imgLength: string;\r\n  onClick?: () => void;\r\n  fallback: React.ReactNode;\r\n}\r\n\r\nexport default (props: Props) => (\r\n  <AssigneesWrapper>\r\n    {props.users.length === 0 ? (\r\n      props.fallback\r\n    ) : (\r\n      <Assignees max={props.maxLinks}>\r\n        {props.users.map((userTag) => (\r\n          <UserLink\r\n            key={userTag}\r\n            userTag={userTag}\r\n            styleConfig={{\r\n              className: \"stacked\",\r\n              showImg: true,\r\n              imgLength: props.imgLength,\r\n              internalSpacing: \"0\",\r\n              showTag: false,\r\n              tagSize: \"0\",\r\n            }}\r\n            onRedirect={props.onClick}\r\n          />\r\n        ))}\r\n      </Assignees>\r\n    )}\r\n  </AssigneesWrapper>\r\n);\r\n\r\nconst Assignees = styled(AvatarGroup)`\r\n  margin-left: 0.5rem;\r\n\r\n  .stacked {\r\n    margin-left: -0.3rem;\r\n  }\r\n`;\r\n\r\nconst AssigneesWrapper = styled.div`\r\n  .MuiAvatarGroup-avatar {\r\n    border-color: rgba(0, 0, 0, 0.5);\r\n    background-color: var(--transparent-highlight);\r\n    color: var(--text-color);\r\n  }\r\n\r\n  @media (max-width: 420px) {\r\n    .MuiAvatarGroup-avatar {\r\n      width: 32px;\r\n      height: 32px;\r\n      font-size: 0.9rem;\r\n    }\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\n\r\nexport const UserLinkGrid = styled.div`\r\n  max-width: 100%;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  h1 {\r\n    user-select: none;\r\n    text-align: left;\r\n    width: 100%;\r\n    padding-bottom: 0.8rem;\r\n    font-size: 1rem;\r\n    border-bottom: var(--ticket-border);\r\n    color: var(--text-color);\r\n    margin-bottom: 1rem;\r\n\r\n    :first-child {\r\n      padding-top: 0.8rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const SetWrapper = styled.div`\r\n  padding-left: 0.5rem;\r\n  width: 100%;\r\n  max-width: 100%;\r\n  display: grid;\r\n  justify-items: center;\r\n  grid-template-columns: repeat(auto-fit, 30px);\r\n  grid-gap: 1.5rem;\r\n`;\r\n\r\nexport const UserLinkWrapper = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nexport const Clickable = styled(Icon)`\r\n  position: absolute;\r\n  bottom: 0;\r\n  right: -5px;\r\n  color: var(--text-color);\r\n  border-radius: 50%;\r\n  font-size: 1rem !important;\r\n  transition: transform 0.15s ease-out;\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n    transform: scale(1.2);\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport UserLink from \"../../userLink\";\r\nimport { UserLinkGrid, SetWrapper, UserLinkWrapper, Clickable } from \"./styles\";\r\n\r\ninterface Props {\r\n  users: string[];\r\n  className: string;\r\n  imgLength: string;\r\n  label: string;\r\n  iconName: string;\r\n  iconBackgroundColor: string;\r\n  onClick: (userTag: string) => () => void;\r\n}\r\n\r\nexport default (props: Props) => {\r\n  return (\r\n    <UserLinkGrid className={props.className}>\r\n      <h1>{props.label}</h1>\r\n      <SetWrapper>\r\n        {props.users.map((userTag) => (\r\n          <UserLinkWrapper key={userTag}>\r\n            <UserLink\r\n              userTag={userTag}\r\n              styleConfig={{\r\n                className: \"stacked\",\r\n                showImg: true,\r\n                imgLength: props.imgLength,\r\n                internalSpacing: \"0\",\r\n                showTag: false,\r\n                tagSize: \"0\",\r\n              }}\r\n            />\r\n            <Clickable\r\n              style={{ backgroundColor: props.iconBackgroundColor }}\r\n              onClick={props.onClick(userTag)}\r\n            >\r\n              {props.iconName}\r\n            </Clickable>\r\n          </UserLinkWrapper>\r\n        ))}\r\n        <div style={{ height: props.imgLength }} />\r\n      </SetWrapper>\r\n    </UserLinkGrid>\r\n  );\r\n};\r\n","import { UserInfo } from \"../user\";\r\n\r\nexport interface SelectOption {\r\n  value: string;\r\n  label: string;\r\n}\r\n\r\nexport const getUsersFromTags = (\r\n  users: UserInfo[],\r\n  tags: string[]\r\n): UserInfo[] => users.filter((user) => tags.includes(user.tag));\r\n\r\nexport const getTagsFromUsers = (users: UserInfo[]): string[] =>\r\n  users.map((user) => user.tag);\r\n\r\nexport const keyToIndex = (givenKey: string, givenEnum: any): number => {\r\n  for (let i = 0; i < Object.keys(givenEnum).length; i++)\r\n    if (givenEnum[i] === givenKey) return i;\r\n  return -1;\r\n};\r\n\r\nconst capitalize = (word: string): string =>\r\n  word.charAt(0).toUpperCase() + word.substring(1);\r\n\r\nexport const mapEnumToSelectOption = (\r\n  prefix: string,\r\n  givenEnum: any\r\n): SelectOption[] => {\r\n  let output: SelectOption[] = [];\r\n  Object.keys(givenEnum)\r\n    .filter((key) => !isNaN(Number(givenEnum[key])))\r\n    .map((key) =>\r\n      output.push({ label: prefix + \": \" + capitalize(key), value: key })\r\n    );\r\n  return output;\r\n};\r\n","import { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const theme = createMuiTheme({\r\n  palette: {\r\n    type: \"dark\",\r\n    primary: {\r\n      main: \"#209e91\",\r\n    },\r\n    secondary: {\r\n      main: \"#209e91\",\r\n    },\r\n  },\r\n});\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\",\r\n      flexWrap: \"wrap\",\r\n    },\r\n    margin: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    withoutLabel: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    textField: {\r\n      width: \"25ch\",\r\n    },\r\n  })\r\n);\r\n","import styled from \"styled-components\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\n\r\nexport const FormWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: auto;\r\n  align-items: auto;\r\n  height: 100%;\r\n  width: auto;\r\n`;\r\n\r\ninterface FormProps {\r\n  fixedwidth: boolean;\r\n  width: number;\r\n  mobilewidth: number;\r\n  disabled?: boolean;\r\n}\r\n\r\nexport const Form = styled(FormControl)`\r\n  width: ${(props: FormProps) =>\r\n    props.fixedwidth ? `${props.width}px` : \"100%\"};\r\n\r\n  #select-label,\r\n  #select {\r\n    color: ${(props: FormProps) =>\r\n      props.disabled == null || !props.disabled\r\n        ? \"var(--text-color)\"\r\n        : \"rgba(255, 255, 255, 0.3)\"};\r\n  }\r\n\r\n  #select {\r\n    padding: 12px;\r\n    text-align: left;\r\n  }\r\n\r\n  input {\r\n    border-color: white;\r\n    color: white;\r\n  }\r\n\r\n  @media (max-width: 600px) {\r\n    width: ${(props: FormProps) =>\r\n      props.fixedwidth ? `${props.mobilewidth}px` : \"100%\"};\r\n\r\n    div {\r\n      font-size: 12px !important;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport { SelectOption } from \"../../../constants/global\";\r\nimport { theme } from \"../../../constants/materialui\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport \"./MUIOverride.css\";\r\nimport { FormWrapper, Form } from \"./styles\";\r\n\r\ntype Props = {\r\n  fixedWidth: boolean;\r\n  width: number;\r\n  mobileWidth: number;\r\n  onChange: (newValue: string) => void;\r\n  options: SelectOption[];\r\n  value?: number | string;\r\n  disabled?: boolean;\r\n};\r\n\r\nexport default (props: Props) => {\r\n  const [internalVal, setInternalVal] = React.useState(props.options[0].value);\r\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    setInternalVal(event.target.value as string);\r\n    props.onChange(event.target.value as string);\r\n  };\r\n  const value =\r\n    props.value === undefined\r\n      ? internalVal\r\n      : typeof props.value === \"string\"\r\n      ? props.value\r\n      : props.options[props.value].value;\r\n\r\n  // Note: options[0] is used as defaultValue\r\n  return (\r\n    <FormWrapper className=\"selectFormWrapper\">\r\n      <ThemeProvider theme={theme}>\r\n        <Form\r\n          fixedwidth={props.fixedWidth}\r\n          width={props.width}\r\n          mobilewidth={props.mobileWidth}\r\n          disabled={props.disabled == null ? false : props.disabled}\r\n        >\r\n          <Select\r\n            labelId=\"select-label\"\r\n            id=\"select\"\r\n            value={value}\r\n            onChange={handleChange}\r\n          >\r\n            {props.options.map((option) => (\r\n              <MenuItem value={option.value} key={option.value}>\r\n                {option.label}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </Form>\r\n      </ThemeProvider>\r\n    </FormWrapper>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { theme } from \"../../../constants/materialui\";\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport styled from \"styled-components\";\r\n\r\n// This component is a textfield merged with a button that has an icon within it.\r\n// Example use cases are: search box (although there is a specialized search component too)\r\n// copy-paste link widget, the controls for the imageLinks section in the create/edit modals\r\n\r\n// Note: if editable is false, then the default value is the only value! This is good for a copy-paste widget\r\n\r\nconst consumeEvent = (event: React.KeyboardEvent): void => {\r\n  event.preventDefault();\r\n  event.stopPropagation();\r\n};\r\n\r\nexport default (props: {\r\n  label: string;\r\n  labelWidth: number;\r\n  defaultValue: string;\r\n  editable: boolean;\r\n  buttonIconName: string;\r\n  clearInputOnSubmit: boolean;\r\n  onSubmit: (value?: string) => void;\r\n  className: string;\r\n  // the below props must both be present if they are being used.\r\n  // if they are used, then default value/internal state will not\r\n  // be used. Furthermore, onSubmit will be called without output.\r\n  inputValue?: string;\r\n  onChange?: (newValue: string) => void;\r\n}) => {\r\n  let inputValue: any = null;\r\n  let setInputValue: any = null;\r\n  if (props.inputValue === undefined && props.onChange === undefined) {\r\n    [inputValue, setInputValue] = useState(props.defaultValue);\r\n  }\r\n\r\n  const onChange = (\r\n    event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\r\n  ) => {\r\n    const newValue = event.target.value;\r\n    if (props.inputValue === undefined && props.onChange === undefined) {\r\n      setInputValue(newValue);\r\n    } else {\r\n      props.onChange!(newValue);\r\n    }\r\n  };\r\n\r\n  const submit = () => {\r\n    if (props.inputValue === undefined && props.onChange === undefined) {\r\n      props.onSubmit(inputValue);\r\n      if (props.clearInputOnSubmit) setInputValue(\"\");\r\n    } else {\r\n      props.onSubmit();\r\n    }\r\n  };\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Container className={props.className}>\r\n        <FormControl variant=\"outlined\">\r\n          <InputLabel>{props.label}</InputLabel>\r\n          <OutlinedInput\r\n            type=\"text\"\r\n            onChange={onChange}\r\n            onKeyDown={(event: React.KeyboardEvent): void => {\r\n              if (!props.editable) consumeEvent(event);\r\n              if (event.keyCode === 13) {\r\n                consumeEvent(event);\r\n                submit();\r\n              }\r\n            }}\r\n            value={\r\n              props.inputValue === undefined ? inputValue : props.inputValue\r\n            }\r\n            endAdornment={\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  onClick={submit}\r\n                  onMouseDown={(event: React.MouseEvent<HTMLButtonElement>) =>\r\n                    event.preventDefault()\r\n                  }\r\n                  edge=\"end\"\r\n                >\r\n                  <Icon>{props.buttonIconName}</Icon>\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n            labelWidth={props.labelWidth}\r\n          />\r\n        </FormControl>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n\r\n  > div {\r\n    width: 100% !important;\r\n  }\r\n\r\n  .button {\r\n    color: var(--text-color) !important;\r\n    padding: 0.5rem !important;\r\n    width: 32px !important;\r\n    height: 32px !important;\r\n    border-radius: 0 !important;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n// Notes: container element must have position: relative\r\n// the Fieldset will apply a border to the container element\r\n// so if a border is manually set, the borders will overlap,\r\n// resulting in a thick, ugly border.\r\n\r\nexport default ({ label }: { label: string }) => (\r\n  <React.Fragment>\r\n    <Label>{label}</Label>\r\n    <Fieldset aria-hidden=\"true\">\r\n      <Legend>\r\n        <Span>{label}</Span>\r\n      </Legend>\r\n    </Fieldset>\r\n  </React.Fragment>\r\n);\r\n\r\nconst Label = styled.label`\r\n  color: rgba(255, 255, 255, 0.7);\r\n  padding: 0;\r\n  font-size: 1rem;\r\n  font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\r\n  font-weight: 400;\r\n  line-height: 1;\r\n  letter-spacing: 0.00938em;\r\n  top: 0;\r\n  left: 0;\r\n  position: absolute;\r\n  transform-origin: top left;\r\n  pointer-events: none;\r\n  z-index: 1;\r\n  transform: translate(14px, -6px) scale(0.75);\r\n  vertical-align: baseline;\r\n`;\r\n\r\nconst Fieldset = styled.fieldset`\r\n  border-color: rgba(255, 255, 255, 0.23);\r\n  top: -5px;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  margin: 0;\r\n  padding: 0 8px;\r\n  overflow: hidden;\r\n  position: absolute;\r\n  border-style: solid;\r\n  border-width: 1px;\r\n  border-radius: inherit;\r\n  pointer-events: none;\r\n`;\r\n\r\nconst Legend = styled.legend`\r\n  max-width: 1000px;\r\n  transition: max-width 100ms cubic-bezier(0, 0, 0.2, 1) 50ms;\r\n  width: auto;\r\n  height: 11px;\r\n  display: block;\r\n  padding: 0;\r\n  font-size: 0.75em;\r\n  text-align: left;\r\n  visibility: hidden;\r\n`;\r\n\r\nconst Span = styled.span`\r\n  display: inline-block;\r\n  padding-left: 5px;\r\n  padding-right: 5px;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  position: relative;\r\n  background-color: rgba(255, 255, 255, 0.1);\r\n  padding: 18.5px 14px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  margin-bottom: 1rem;\r\n  border-radius: 4px;\r\n\r\n  .textfieldButton {\r\n    margin-top: 1rem;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport const ImageLinkSet = styled.div`\r\n  padding: 9.25px 7px 9.25px 14px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  width: 100%;\r\n  height: auto;\r\n`;\r\n\r\nexport const ImageLink = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 0.4rem 0;\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\r\n  color: var(--text-color);\r\n\r\n  h1 {\r\n    font-size: 1rem;\r\n    text-align: left;\r\n    width: calc(100% - 1rem - 48px);\r\n    margin-right: 1rem;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    line-height: 1.15;\r\n  }\r\n\r\n  :first-child {\r\n    padding-top: 0;\r\n  }\r\n\r\n  :last-child {\r\n    border-bottom: none;\r\n    padding-bottom: 0;\r\n  }\r\n`;\r\n\r\nexport const EmptyMessage = styled.h1`\r\n  font-size: 1rem;\r\n  line-height: 1.5;\r\n  padding: 9.25px 7px 9.25px 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  font-style: italic;\r\n`;\r\n","import React from \"react\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport TextfieldButton from \"../../../input/textfieldButton\";\r\nimport ContainerLabel from \"../../containerLabel\";\r\nimport { Container, ImageLinkSet, ImageLink, EmptyMessage } from \"./styles\";\r\n\r\n// This enum is only used internally within this component\r\n// so it was kept out of the constants file.\r\nenum Action {\r\n  ADD,\r\n  REMOVE,\r\n}\r\n\r\nexport default (props: {\r\n  onChange: (arg0: string[]) => void;\r\n  imageLinks: string[];\r\n}) => {\r\n  const change = (action: Action, imageLink: string) => {\r\n    if (\r\n      action === Action.REMOVE ||\r\n      (action === Action.ADD &&\r\n        imageLink &&\r\n        props.imageLinks.indexOf(imageLink) === -1)\r\n    ) {\r\n      let newSet = Object.assign([], props.imageLinks);\r\n      action === Action.ADD\r\n        ? newSet.push(imageLink)\r\n        : newSet.splice(newSet.indexOf(imageLink), 1);\r\n      props.onChange(newSet);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <ContainerLabel label=\"Images\" />\r\n      <ImageLinkSet>\r\n        {props.imageLinks.length > 0 ? (\r\n          props.imageLinks.map((imageLink) => (\r\n            <ImageLink>\r\n              <h1>{imageLink}</h1>\r\n              <IconButton\r\n                className=\"removeIcon\"\r\n                aria-label=\"remove image link\"\r\n                onClick={() => change(Action.REMOVE, imageLink)}\r\n                onMouseDown={(event: React.MouseEvent<HTMLButtonElement>) =>\r\n                  event.preventDefault()\r\n                }\r\n                edge=\"end\"\r\n              >\r\n                <Icon>close</Icon>\r\n              </IconButton>\r\n            </ImageLink>\r\n          ))\r\n        ) : (\r\n          <EmptyMessage>\r\n            No images linked. You can upload any relevant images to a website\r\n            such as Google Photos, Imgur, or Dropbox and attach the url using\r\n            the textfield below.\r\n          </EmptyMessage>\r\n        )}\r\n      </ImageLinkSet>\r\n      {props.imageLinks.length < 10 ? (\r\n        <TextfieldButton\r\n          label=\"Add a new image url\"\r\n          labelWidth={148}\r\n          defaultValue=\"\"\r\n          clearInputOnSubmit={true}\r\n          editable={true}\r\n          buttonIconName=\"add\"\r\n          onSubmit={(newLink: string | undefined) =>\r\n            change(Action.ADD, newLink!)\r\n          }\r\n          className=\"textfieldButton\"\r\n        />\r\n      ) : (\r\n        <React.Fragment />\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\r\n\r\nexport default (props: {\r\n  className?: string;\r\n  onClick: () => void;\r\n  children?: React.ReactNode;\r\n}) => {\r\n  return (\r\n    <Button\r\n      className={props.className === null ? \"\" : props.className}\r\n      onClick={props.onClick}\r\n    >\r\n      {props.children === null ? <React.Fragment /> : props.children}\r\n    </Button>\r\n  );\r\n};\r\n\r\nconst Button = styled(ButtonBase)`\r\n  background: rgba(0, 0, 0, 0);\r\n  transition: all 0.1s ease;\r\n  text-align: center;\r\n  white-space: nowrap;\r\n  touch-action: manipulation;\r\n  line-height: 1.3333333;\r\n  font-size: 14px !important;\r\n  padding: 10px 16px !important;\r\n  width: auto !important;\r\n  height: auto !important ;\r\n  border-radius: 5px !important;\r\n\r\n  :focus {\r\n    outline: none;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"../button\";\r\n\r\ninterface Props {\r\n  showCancel: boolean;\r\n  injectable?: React.ReactNode;\r\n  cancelCallback: () => void;\r\n  submitCallback: () => void;\r\n  submitText: string;\r\n  className: string;\r\n}\r\n\r\nexport default (props: Props) => {\r\n  return (\r\n    <ControlsWrapper className={props.className}>\r\n      {props.injectable === null ? <React.Fragment /> : props.injectable}\r\n      <Cancel\r\n        display={props.showCancel}\r\n        className=\"\"\r\n        onClick={props.cancelCallback}\r\n      >\r\n        Cancel\r\n      </Cancel>\r\n      <Submit className=\"hoverfx\" onClick={props.submitCallback}>\r\n        {props.submitText}\r\n      </Submit>\r\n    </ControlsWrapper>\r\n  );\r\n};\r\n\r\nconst ControlsWrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  padding: 0.5rem 1rem;\r\n\r\n  button {\r\n    color: var(--text-color);\r\n  }\r\n`;\r\n\r\nconst Cancel = styled(Button)`\r\n  ${(props: { display: boolean }) =>\r\n    props.display ? \"\" : \"display: none !important;\"}\r\n  margin-right: 1rem;\r\n`;\r\n\r\nconst Submit = styled(Button)`\r\n  border: 2px solid rgba(255, 255, 255, 0.4) !important;\r\n\r\n  :hover {\r\n    border: 2px solid rgba(0, 0, 0, 0) !important;\r\n  }\r\n`;\r\n","import { ModalContentWrapper } from \"../../container/modalContent\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const ContentWrapper = styled(ModalContentWrapper)`\r\n  padding: 1rem;\r\n  height: auto !important;\r\n  max-height: calc(100vh - 3vh - var(--nav-height));\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n\r\n  .editControls {\r\n    padding: 1rem 2rem;\r\n  }\r\n`;\r\n\r\nexport const SelectWrapper = styled.div`\r\n  height: 43px;\r\n`;\r\n\r\nexport const SelectGrid = styled.div`\r\n  position: relative;\r\n  ${(props: { display: boolean }) => (props.display ? \"\" : \"display: none;\")}\r\n  border-radius: 4px;\r\n  background-color: rgba(255, 255, 255, 0.1);\r\n  padding: 18.5px 14px 2rem;\r\n  margin: 2rem auto;\r\n  display: grid;\r\n  grid-gap: 2rem 3rem;\r\n  width: calc(100% - 4rem);\r\n  justify-content: center;\r\n  grid-template-columns: repeat(2, calc(50% - 28px));\r\n\r\n  @media (max-width: 650px) {\r\n    grid-template-columns: calc(100% - 14px);\r\n  }\r\n`;\r\n\r\nexport const TextWrapper = styled.div`\r\n  ${(props: { display: boolean }) => (props.display ? \"\" : \"display: none;\")}\r\n  width: 100%;\r\n  padding: 0 2rem;\r\n\r\n  .textSection {\r\n    background-color: rgba(255, 255, 255, 0.1);\r\n    width: 100%;\r\n    margin-bottom: 2rem;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport {\r\n  Status,\r\n  Severity,\r\n  Reproducibility,\r\n  TypeLabel,\r\n} from \"../../../constants/ticket\";\r\nimport {\r\n  SelectOption,\r\n  keyToIndex,\r\n  mapEnumToSelectOption,\r\n} from \"../../../constants/global\";\r\nimport Select from \"../../input/select\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport ImageLinks from \"./imageLinks\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport { theme } from \"../../../constants/materialui\";\r\nimport EditControls from \"../../input/editControls\";\r\nimport ContainerLabel from \"../containerLabel\";\r\nimport {\r\n  ContentWrapper,\r\n  SelectWrapper,\r\n  SelectGrid,\r\n  TextWrapper,\r\n} from \"./styles\";\r\n\r\ninterface Props {\r\n  ariaLabel: string;\r\n  ariaDesc: string;\r\n  open: boolean;\r\n  close: () => void;\r\n  update: (change: object) => void;\r\n  submit: () => void;\r\n  submitButtonText: string;\r\n  displaySelects: boolean;\r\n  disableStatus?: boolean;\r\n  displayDevSelects: boolean;\r\n  displayAuthor: boolean;\r\n  defaultTitle: string;\r\n  defaultDesc: string;\r\n  defaultLinks: string[];\r\n  injectedNode: React.ReactNode;\r\n  controlsInjectable?: React.ReactNode;\r\n}\r\n\r\nexport default (props: Props) => {\r\n  return (\r\n    <Modal\r\n      disableScrollLock={false}\r\n      style={{ zIndex: 13 }}\r\n      open={props.open}\r\n      onClose={props.close}\r\n      aria-labelledby={props.ariaLabel}\r\n      aria-describedby={props.ariaDesc}\r\n    >\r\n      <ContentWrapper width={window.innerWidth < 800 ? \"95vw\" : \"700px\"}>\r\n        <SelectGrid display={props.displaySelects}>\r\n          <ContainerLabel label=\"Properties\" />\r\n          {props.displayDevSelects ? (\r\n            <React.Fragment>\r\n              <TicketFormSelect\r\n                onChange={(newValue: string) =>\r\n                  props.update({ status: keyToIndex(newValue, Status) })\r\n                }\r\n                options={mapEnumToSelectOption(\"Status\", Status)}\r\n                disabled={props.disableStatus}\r\n              />\r\n              <TicketFormSelect\r\n                onChange={(newValue: string) =>\r\n                  props.update({ severity: keyToIndex(newValue, Severity) })\r\n                }\r\n                options={mapEnumToSelectOption(\"Severity\", Severity)}\r\n              />\r\n            </React.Fragment>\r\n          ) : (\r\n            <React.Fragment />\r\n          )}\r\n          <TicketFormSelect\r\n            onChange={(newValue: string) =>\r\n              props.update({\r\n                reproducibility: keyToIndex(newValue, Reproducibility),\r\n              })\r\n            }\r\n            options={mapEnumToSelectOption(\"Reproducibility\", Reproducibility)}\r\n          />\r\n          <TicketFormSelect\r\n            onChange={(newValue: string) =>\r\n              props.update({ typeLabel: keyToIndex(newValue, TypeLabel) })\r\n            }\r\n            options={mapEnumToSelectOption(\"Tag\", TypeLabel)}\r\n          />\r\n        </SelectGrid>\r\n        <TextWrapper display={props.displayAuthor}>\r\n          <ThemeProvider theme={theme}>\r\n            <TextField\r\n              className=\"textSection\"\r\n              label=\"Title\"\r\n              rows={1}\r\n              defaultValue={props.defaultTitle}\r\n              variant=\"outlined\"\r\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\r\n                props.update({ title: event.target.value })\r\n              }\r\n            />\r\n            <TextField\r\n              className=\"textSection\"\r\n              label=\"Description\"\r\n              multiline\r\n              rows={4}\r\n              defaultValue={props.defaultDesc}\r\n              variant=\"outlined\"\r\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\r\n                props.update({ description: event.target.value })\r\n              }\r\n            />\r\n            <ImageLinks\r\n              imageLinks={props.defaultLinks}\r\n              onChange={(newLinks: string[]) =>\r\n                props.update({ imageLinks: newLinks })\r\n              }\r\n            />\r\n          </ThemeProvider>\r\n        </TextWrapper>\r\n        {props.injectedNode}\r\n        <EditControls\r\n          showCancel={true}\r\n          cancelCallback={props.close}\r\n          submitCallback={props.submit}\r\n          submitText={props.submitButtonText}\r\n          injectable={props.controlsInjectable}\r\n          className=\"editControls\"\r\n        />\r\n      </ContentWrapper>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst TicketFormSelect = (props: {\r\n  onChange: (newValue: string) => void;\r\n  options: SelectOption[];\r\n  disabled?: boolean;\r\n}) => (\r\n  <SelectWrapper>\r\n    <Select\r\n      fixedWidth={false}\r\n      {...props}\r\n      width={250}\r\n      mobileWidth={window.innerWidth < 350 ? 200 : 300}\r\n      disabled={props.disabled}\r\n    />\r\n  </SelectWrapper>\r\n);\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport { theme, useStyles } from \"../../../../constants/materialui\";\r\nimport clsx from \"clsx\";\r\nimport Button from \"../../../input/button\";\r\nimport { ModalContentWrapper } from \"../../../container/modalContent\";\r\nimport API from \"../../../../api\";\r\nimport styled from \"styled-components\";\r\n\r\nexport default (props: { display: boolean }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [state, assignState] = React.useState({\r\n    error: false,\r\n    isOpen: false,\r\n    value: \"\",\r\n  });\r\n\r\n  // wrapper func to simplify state changes\r\n  const setState = (newState: {\r\n    error?: boolean;\r\n    isOpen?: boolean;\r\n    value?: string;\r\n  }) => assignState(Object.assign({}, state, newState));\r\n\r\n  const open = () => setState({ isOpen: true });\r\n\r\n  const close = () => setState({ isOpen: false, value: \"\" });\r\n\r\n  const submit = () => {\r\n    const valid = state.value.toLowerCase() === \"delete\";\r\n    setState({ error: !valid });\r\n    if (valid) dispatch(API.deleteTicket(undefined));\r\n  };\r\n\r\n  return props.display ? (\r\n    <React.Fragment>\r\n      <Delete onClick={open} children=\"Delete\" />\r\n      <Modal\r\n        disableScrollLock={false}\r\n        style={{ zIndex: 13 }}\r\n        open={state.isOpen}\r\n        onClose={close}\r\n        aria-labelledby=\"Deletion Modal\"\r\n        aria-describedby=\"A menu through which an issue can be permanently deleted.\"\r\n      >\r\n        <ModalContent width=\"calc(280px + 3rem)\">\r\n          <ThemeProvider theme={theme}>\r\n            <FormControl\r\n              className={clsx(classes.margin, classes.textField)}\r\n              variant=\"outlined\"\r\n            >\r\n              <InputLabel className={state.error ? \"error\" : \"\"}>\r\n                Type 'DELETE' to confirm\r\n              </InputLabel>\r\n              <OutlinedInput\r\n                className=\"input\"\r\n                required={true}\r\n                type=\"text\"\r\n                error={state.error}\r\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\r\n                  setState({ value: event.target.value.toUpperCase() })\r\n                }\r\n                endAdornment={\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      aria-label=\"submit deletion request\"\r\n                      onClick={submit}\r\n                      edge=\"end\"\r\n                    >\r\n                      <DeleteIcon />\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                }\r\n                labelWidth={180}\r\n              />\r\n            </FormControl>\r\n          </ThemeProvider>\r\n        </ModalContent>\r\n      </Modal>\r\n    </React.Fragment>\r\n  ) : (\r\n    <React.Fragment />\r\n  );\r\n};\r\n\r\nexport const Delete = styled(Button)`\r\n  background-color: var(--theme-darkred) !important;\r\n  margin-right: auto !important;\r\n`;\r\n\r\nexport const ModalContent = styled(ModalContentWrapper)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 1.3rem 1rem;\r\n  height: 110px;\r\n  top: calc(40vh - 50px);\r\n\r\n  .input,\r\n  .MuiFormControl-root {\r\n    width: 280px;\r\n  }\r\n\r\n  .error {\r\n    color: rgb(244, 67, 54) !important;\r\n  }\r\n`;\r\n","import Button from \"../../input/button\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const ButtonWrapper = styled.div`\r\n  display: ${(props: { show: boolean }) => (props.show ? \"flex\" : \"none\")};\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 90px;\r\n  position: sticky;\r\n  right: 0;\r\n  bottom: 0;\r\n  pointer-events: none;\r\n`;\r\n\r\nexport const EditIcon = styled(Button)`\r\n  pointer-events: all;\r\n  border: 1px solid rgba(255, 255, 255, 0.2) !important;\r\n  background-color: rgba(0, 0, 0, 0.5) !important;\r\n  backdrop-filter: blur(8px) !important;\r\n  padding: 0.8rem !important;\r\n  border-radius: 50% !important;\r\n  margin-bottom: 5px !important;\r\n  transition: transform 0.25s ease-out;\r\n\r\n  span {\r\n    font-size: 3rem !important;\r\n\r\n    @media (max-width: 600px) {\r\n      font-size: 2rem !important;\r\n    }\r\n    color: var(--text-color);\r\n  }\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n    background-color: var(--highlight) !important;\r\n    transform: scale(1.1);\r\n  }\r\n`;\r\n\r\nexport const AssignmentContainer = styled.div`\r\n  ${(props: { display: boolean }) => (props.display ? \"\" : \"display: none;\")}\r\n  position: relative;\r\n  margin: 1rem 0;\r\n  width: calc(100% - 4rem);\r\n  padding: 18.5px 14px;\r\n  background-color: rgba(255, 255, 255, 0.1);\r\n  border-radius: 4px;\r\n\r\n  .userLinkGrid {\r\n    padding: 0 0 1rem;\r\n  }\r\n\r\n  .userLinkGrid:first-child {\r\n    margin-bottom: 1rem;\r\n    margin-top: auto;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { EditedTicket } from \"../../../constants/ticket\";\r\nimport { UserInfo, Rank } from \"../../../constants/user\";\r\nimport {\r\n  updateEdit,\r\n  wipeLocalChanges,\r\n  toggleEditDisplay,\r\n  TicketState,\r\n  selectTicketSlice,\r\n  selectAvailable,\r\n} from \"../../../flux/slices/ticketSlice\";\r\nimport API from \"../../../api\";\r\nimport { selectUser } from \"../../../flux/slices/authSlice\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport UserLinkGrid from \"./userLinkGrid\";\r\nimport FormModal from \"../formModal\";\r\nimport ContainerLabel from \"../containerLabel\";\r\nimport DeletionModal from \"./deletionModal\";\r\nimport { ButtonWrapper, EditIcon, AssignmentContainer } from \"./styles\";\r\n\r\nexport default (props: {\r\n  maxLinks: number;\r\n  imgLength: string;\r\n  modalImgLength: string;\r\n  title: string;\r\n  description: string;\r\n  imageLinks: string[];\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const user: UserInfo = useSelector(selectUser).info;\r\n  const rank: number = user.rank;\r\n  const ticketSlice: TicketState = useSelector(selectTicketSlice);\r\n  const available: string[] = useSelector(selectAvailable);\r\n  const editedTicket: EditedTicket = ticketSlice.editedTicket;\r\n  const isAuthor: boolean = ticketSlice.currentTicket.author === user.tag;\r\n\r\n  const update = (change: object): void => {\r\n    dispatch(updateEdit(change));\r\n  };\r\n\r\n  const moveUser = (userTag: string) => () => {\r\n    let newSet: string[] = Object.assign(\r\n      [],\r\n      //getTagsFromUsers(editedTicket.assignees)\r\n      editedTicket.assignees\r\n    );\r\n    // If the user is currently available, then we\r\n    // want to assign them. Else, we want to unassign\r\n    //getTagsFromUsers(available).includes(userTag)\r\n    available.includes(userTag)\r\n      ? newSet.push(userTag)\r\n      : newSet.splice(newSet.indexOf(userTag), 1);\r\n    // update({ assignees: getUsersFromTags(ticketSlice.developers, newSet) });\r\n    update({ assignees: newSet });\r\n  };\r\n\r\n  const toggle = (): void => {\r\n    dispatch(toggleEditDisplay());\r\n  };\r\n\r\n  const close = (): void => {\r\n    toggle();\r\n    dispatch(wipeLocalChanges());\r\n  };\r\n\r\n  const submit = (): void => {\r\n    dispatch(API.updateTicket(editedTicket));\r\n    close();\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ButtonWrapper show={rank > Rank.User || isAuthor}>\r\n        <EditIcon className=\"\" onClick={toggle}>\r\n          <Icon>create</Icon>\r\n        </EditIcon>\r\n      </ButtonWrapper>\r\n      <FormModal\r\n        ariaLabel=\"Edit View\"\r\n        ariaDesc=\"A menu through which an issue's values/characteristics can be updated.\"\r\n        open={ticketSlice.displayEditModal}\r\n        close={close}\r\n        update={update}\r\n        submit={submit}\r\n        submitButtonText=\"Save\"\r\n        displaySelects={rank > Rank.User || isAuthor}\r\n        displayDevSelects={rank > Rank.User}\r\n        // Do not need to disable status because it will only show up for devs\r\n        displayAuthor={isAuthor}\r\n        defaultTitle={props.title}\r\n        defaultDesc={props.description}\r\n        defaultLinks={editedTicket.imageLinks}\r\n        injectedNode={\r\n          <AssignmentContainer display={rank > Rank.Developer}>\r\n            <ContainerLabel label=\"Assignees\" />\r\n            <UserLinkGrid\r\n              className=\"userLinkGrid\"\r\n              users={editedTicket.assignees}\r\n              imgLength={props.modalImgLength}\r\n              label=\"Assigned:\"\r\n              iconName=\"removeCircle\"\r\n              iconBackgroundColor=\"var(--red)\"\r\n              onClick={moveUser}\r\n            />\r\n            <UserLinkGrid\r\n              className=\"userLinkGrid\"\r\n              users={available}\r\n              imgLength={props.modalImgLength}\r\n              label=\"Available:\"\r\n              iconName=\"addCircle\"\r\n              iconBackgroundColor=\"var(--black-bg-green)\"\r\n              onClick={moveUser}\r\n            />\r\n          </AssignmentContainer>\r\n        }\r\n        controlsInjectable={\r\n          <DeletionModal display={isAuthor || rank > Rank.Developer} />\r\n        }\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\n\r\ninterface Props {\r\n  src: string;\r\n  width: string;\r\n  height: string;\r\n  onError: () => void;\r\n  hideOnError: boolean;\r\n}\r\n\r\n// Note: if an image has an error in its loading\r\n// and the image recieved the \"hideOnError\" prop,\r\n// then it will automatically be hidden instead\r\n// of displaying an alt tag\r\n\r\nexport default (props: Props) => {\r\n  const [errored, setErrored] = useState(false);\r\n  const [zoomed, setZoomed] = useState(false);\r\n\r\n  const ImageNode = (styledProps: StyledProps) => (\r\n    <ImageWrapper\r\n      style={{\r\n        display: props.hideOnError && errored ? \"none\" : \"block\",\r\n        padding: errored ? \"10%\" : \"0\",\r\n      }}\r\n      onClick={() => (errored ? {} : setZoomed(!zoomed))}\r\n      width={styledProps.width}\r\n      height={styledProps.height}\r\n    >\r\n      <Image\r\n        src={props.src}\r\n        alt={`See ${props.src}`}\r\n        onError={() => {\r\n          if (!errored) {\r\n            props.onError();\r\n            setErrored(true);\r\n          }\r\n        }}\r\n      />\r\n    </ImageWrapper>\r\n  );\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ImageNode width={props.width} height={props.height} />\r\n      <Modal\r\n        disableScrollLock={false}\r\n        style={{ zIndex: 15 }}\r\n        open={zoomed}\r\n        onClose={() => setZoomed(false)}\r\n        aria-labelledby=\"Issue Display\"\r\n        aria-describedby=\"An issue and its details.\"\r\n      >\r\n        <ZoomedImage onClick={() => setZoomed(false)}>\r\n          <ImageNode width={\"90vw\"} height={\"90vh\"} />\r\n        </ZoomedImage>\r\n      </Modal>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\ninterface StyledProps {\r\n  width: string;\r\n  height: string;\r\n}\r\n\r\nconst Image = styled.img`\r\n  height: 100%;\r\n  width: auto;\r\n  object-fit: contain;\r\n  color: var(--text-color);\r\n  max-width: 100%;\r\n  max-height: 100%;\r\n  white-space: normal;\r\n  word-break: break-all;\r\n`;\r\n\r\nconst ImageWrapper = styled.div`\r\n  background-color: rgba(0, 0, 0, 0.3);\r\n  width: ${(props: StyledProps) => props.width};\r\n  display: flex;\r\n  justify-content: center;\r\n  height: ${(props: StyledProps) => props.height};\r\n`;\r\n\r\nconst ZoomedImage = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  padding: 5vh 5vw;\r\n`;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { reportLoadingFailure } from \"../../../../flux/slices/ticketSlice\";\r\nimport styled from \"styled-components\";\r\nimport Image from \"../../image\";\r\n\r\nexport default ({ imageLinks }: { imageLinks: string[] }) => {\r\n  const dispatch = useDispatch();\r\n  const imageSet = imageLinks.map((imageLink, index) => (\r\n    <Image\r\n      key={imageLink + index}\r\n      src={imageLink}\r\n      width=\"250px\"\r\n      height=\"250px\"\r\n      hideOnError={true}\r\n      onError={() => dispatch(reportLoadingFailure())}\r\n    />\r\n  ));\r\n  return <ImageGrid>{imageSet}</ImageGrid>;\r\n};\r\n\r\nconst ImageGrid = styled.div`\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, 250px);\r\n  grid-gap: 2rem;\r\n  justify-content: center;\r\n`;\r\n","import React from \"react\";\r\nimport Routes from \"../../../../constants/routes\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { toggleDisplay } from \"../../../../flux/slices/ticketSlice\";\r\nimport { selectAuthenticated } from \"../../../../flux/slices/authSlice\";\r\nimport history from \"../../../../routes/history\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport { theme } from \"../../../../constants/materialui\";\r\nimport EditControls from \"../../../input/editControls\";\r\nimport API from \"../../../../api\";\r\nimport styled from \"styled-components\";\r\n\r\nexport default () => {\r\n  const dispatch = useDispatch();\r\n  const authenticated = useSelector(selectAuthenticated);\r\n  const [value, setValue] = React.useState(\"\");\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CommentBox>\r\n        <TextField\r\n          className=\"commentBox\"\r\n          label=\"Add a comment\"\r\n          multiline\r\n          rows={4}\r\n          value={value}\r\n          variant=\"outlined\"\r\n          onChange={handleChange}\r\n        />\r\n        <EditControls\r\n          className=\"editControls\"\r\n          submitText=\"Submit\"\r\n          submitCallback={() => {\r\n            if (!authenticated) {\r\n              dispatch(toggleDisplay());\r\n              history.push(Routes.LOGIN_REQUIRED);\r\n              return;\r\n            }\r\n            dispatch(API.addComment(value));\r\n            setValue(\"\");\r\n          }}\r\n          showCancel={false}\r\n          cancelCallback={() => {}}\r\n        />\r\n      </CommentBox>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nconst CommentBox = styled.form`\r\n  padding-top: 0.5rem;\r\n  max-width: 900px;\r\n  width: 100%;\r\n  margin: 1rem 0;\r\n\r\n  .commentBox {\r\n    background-color: rgba(255, 255, 255, 0.1);\r\n    width: 100%;\r\n    margin-bottom: 1rem;\r\n\r\n    textarea {\r\n      color: var(--text-color);\r\n    }\r\n  }\r\n\r\n  .editControls {\r\n    padding-right: 0;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Notification, Variant } from \"../../../../constants/notification\";\r\nimport NotificationNode from \"../../notification\";\r\nimport CommentBox from \"../commentBox\";\r\nimport styled from \"styled-components\";\r\n\r\nexport default ({\r\n  activities,\r\n  close,\r\n}: {\r\n  activities: Notification[];\r\n  close: () => void;\r\n}) => {\r\n  return (\r\n    <ActivityWrapper>\r\n      {activities.map((activity) => (\r\n        <NotificationNode\r\n          key={activity.message + activity.ticketId + activity.date}\r\n          onClick={close}\r\n          variant={Variant.MODAL}\r\n          // The highlight variant is only applied to actions, not comments.\r\n          // Comments all have their ticketId set to null by default.\r\n          className={`node ${activity.message === 2 ? \"normal\" : \"highlight\"}`}\r\n          notification={activity}\r\n          enableCommentVariant={true}\r\n        />\r\n      ))}\r\n      <CommentBox />\r\n    </ActivityWrapper>\r\n  );\r\n};\r\n\r\nconst ActivityWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  height: auto;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  > div {\r\n    margin-top: 1rem;\r\n\r\n    @media (min-width: 1001px) {\r\n      width: 900px;\r\n    }\r\n\r\n    @media (max-width: 1000px) {\r\n      width: 100%;\r\n    }\r\n  }\r\n\r\n  .node {\r\n    padding: 0.8rem;\r\n    border-radius: 10px;\r\n\r\n    h5:hover {\r\n      cursor: text;\r\n    }\r\n  }\r\n\r\n  .normal {\r\n    background-color: rgba(255, 255, 255, 0.1);\r\n  }\r\n\r\n  .highlight {\r\n    background-color: var(--transparent-highlight);\r\n    overflow-y: visible;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { ModalContentWrapper } from \"../../container/modalContent\";\r\n\r\nexport const statusIndicatorLength = \"40px\";\r\n\r\nexport const TicketWrapper = styled(ModalContentWrapper)`\r\n  padding: 1rem;\r\n\r\n  h2 {\r\n    margin-right: 0.3rem;\r\n  }\r\n\r\n  @media (min-width: 1001px) {\r\n    h2,\r\n    h3 {\r\n      font-size: 1.1rem;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 1000px) {\r\n    h2,\r\n    h3 {\r\n      font-size: 0.9rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const TicketSection = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding-bottom: 0.8rem;\r\n  margin-bottom: 0.8rem;\r\n  border-bottom: var(--ticket-border);\r\n`;\r\n\r\nexport const SectionContent = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n`;\r\n\r\nexport const TicketHeader = styled(TicketSection)`\r\n  h1 {\r\n    display: inline;\r\n    line-height: 1.5;\r\n    text-align: left;\r\n    color: var(--text-color);\r\n    font-size: 1rem;\r\n    width: calc(100% - 1rem - ${statusIndicatorLength});\r\n\r\n    .MuiChip-root {\r\n      float: left;\r\n    }\r\n\r\n    @media (min-width: 1001px) {\r\n      font-size: 1.3rem;\r\n\r\n      .MuiChip-root {\r\n        margin-top: 0.3rem;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (min-width: 421px) {\r\n    border-bottom: none;\r\n  }\r\n\r\n  @media (max-width: 420px) {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nexport const FieldGrid = styled.div`\r\n  display: grid;\r\n\r\n  .author {\r\n    margin-left: 0.3rem;\r\n  }\r\n\r\n  .gridItem {\r\n    padding: 0.5rem;\r\n    min-height: 45px;\r\n  }\r\n\r\n  @media (min-width: 1001px) {\r\n    grid-template-columns: 1fr 1fr 1fr;\r\n    border-bottom: var(--ticket-border);\r\n\r\n    .gridItem:nth-child(3n - 1),\r\n    .gridItem:nth-child(3n) {\r\n      border-left: var(--ticket-border);\r\n      padding-left: 1rem;\r\n    }\r\n\r\n    .gridItem {\r\n      border-top: var(--ticket-border);\r\n    }\r\n\r\n    .gridItem:nth-child(-n + 3) {\r\n      border-top: none;\r\n    }\r\n\r\n    .author {\r\n      * {\r\n        font-size: 1.25rem;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (max-width: 1000px) and (min-width: 601px) {\r\n    border-bottom: var(--ticket-border);\r\n    grid-template-columns: 1fr 1fr;\r\n\r\n    .gridItem:nth-child(2n) {\r\n      border-left: var(--ticket-border);\r\n      padding-left: 1rem;\r\n    }\r\n\r\n    .gridItem {\r\n      border-top: var(--ticket-border);\r\n    }\r\n\r\n    .gridItem:nth-child(-n + 2) {\r\n      border-top: none;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 600px) {\r\n    grid-template-columns: 1fr;\r\n\r\n    .gridItem {\r\n      padding: 1rem;\r\n      height: 55px;\r\n      border-bottom: var(--ticket-border);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Description = styled(TicketSection)`\r\n  margin-top: 0.8rem;\r\n  flex-direction: column;\r\n\r\n  h2 {\r\n    padding-left: 1rem;\r\n    margin-right: auto;\r\n  }\r\n\r\n  p {\r\n    line-height: 2;\r\n    margin-top: 0.5rem;\r\n    font-size: 0.8rem;\r\n    color: var(--text-color);\r\n    text-align: center;\r\n\r\n    @media (min-width: 1001px) {\r\n      font-size: 1rem;\r\n      padding-right: 3rem;\r\n    }\r\n  }\r\n\r\n  @media (min-width: 600px) {\r\n    flex-direction: row;\r\n    align-items: flex-start;\r\n    justify-content: center;\r\n\r\n    h2 {\r\n      width: 90px;\r\n    }\r\n\r\n    p {\r\n      margin-top: 0;\r\n      margin-left: 1rem;\r\n      width: calc(100% - 90px - 1rem);\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  selectDisplayed,\r\n  selectTicket,\r\n  selectFailures,\r\n  toggleDisplay,\r\n} from \"../../../flux/slices/ticketSlice\";\r\nimport { selectElementsByKeys } from \"../../../flux/slices/contextSlice\";\r\nimport { Ticket, Severity, Reproducibility } from \"../../../constants/ticket\";\r\nimport { Notification } from \"../../../constants/notification\";\r\nimport TicketTag from \"../ticketTag\";\r\nimport StatusIndicator from \"../statusIndicator\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport UserLink from \"../userLink\";\r\nimport StackedUserLinks from \"../stackedUserLinks\";\r\nimport EditModal from \"../editModal\";\r\nimport ImageGrid from \"./imageGrid\";\r\nimport Communications from \"./communications\";\r\nimport { getDateFromISO } from \"../../../constants/date\";\r\nimport {\r\n  statusIndicatorLength,\r\n  TicketWrapper,\r\n  TicketHeader,\r\n  TicketSection,\r\n  FieldGrid,\r\n  SectionContent,\r\n  Description,\r\n} from \"./styles\";\r\n\r\nexport default () => {\r\n  const dispatch = useDispatch();\r\n  const open: boolean = useSelector(selectDisplayed);\r\n  const close = (): void => {\r\n    dispatch(toggleDisplay());\r\n  };\r\n  const ticket: Ticket = useSelector(selectTicket);\r\n  const failures: number = useSelector(selectFailures);\r\n  const mobileDisplay: boolean = window.innerWidth < 600;\r\n  const activitySelector: (ids: string[]) => Notification[] = useSelector(\r\n    selectElementsByKeys(\"activity\")\r\n  );\r\n  const activity: Notification[] = ticket.activity\r\n    ? activitySelector(ticket.activity.map((id) => id.toString()))\r\n    : [];\r\n\r\n  return (\r\n    <Modal\r\n      disableScrollLock={false}\r\n      style={{ zIndex: 13 }}\r\n      open={open}\r\n      onClose={close}\r\n      aria-labelledby=\"Issue Display\"\r\n      aria-describedby=\"An issue and its details.\"\r\n    >\r\n      <TicketWrapper width=\"95vw\">\r\n        <TicketHeader>\r\n          <SectionContent>\r\n            <StatusIndicator\r\n              status={ticket.status}\r\n              styles={{\r\n                length: statusIndicatorLength,\r\n                leftMargin: \"0\",\r\n                rightMargin: \"1rem\",\r\n              }}\r\n            />\r\n\r\n            <h1>\r\n              <TicketTag label={ticket.typeLabel} />\r\n              {`#${ticket.id}: ${ticket.title}`}\r\n            </h1>\r\n          </SectionContent>\r\n        </TicketHeader>\r\n        <FieldGrid>\r\n          <TicketField\r\n            name=\"Creation Date\"\r\n            content={`${getDateFromISO(ticket.creationDate).toLocaleString()}`}\r\n          />\r\n          <TicketField\r\n            name=\"Last Update\"\r\n            content={`${getDateFromISO(ticket.updateDate).toLocaleString()}`}\r\n          />\r\n          <TicketField\r\n            name=\"Severity\"\r\n            content={\r\n              <span className={Severity[ticket.severity]}>\r\n                {Severity[ticket.severity]}\r\n              </span>\r\n            }\r\n          />\r\n          <TicketField\r\n            name=\"Reproducibility\"\r\n            content={Reproducibility[ticket.reproducibility]}\r\n          />\r\n          <TicketField\r\n            name=\"Author\"\r\n            content={\r\n              <UserLink\r\n                userTag={ticket.author}\r\n                styleConfig={{\r\n                  className: \"author\",\r\n                  showImg: true,\r\n                  imgLength: mobileDisplay ? \"25px\" : \"30px\",\r\n                  internalSpacing: \"0.5rem\",\r\n                  showTag: true,\r\n                  tagSize: \"1.5rem\",\r\n                }}\r\n                onRedirect={close}\r\n              />\r\n            }\r\n          />\r\n          <TicketField\r\n            name=\"Assignees\"\r\n            content={\r\n              <StackedUserLinks\r\n                imgLength={mobileDisplay ? \"25px\" : \"30px\"}\r\n                maxLinks={mobileDisplay ? 4 : 5}\r\n                users={ticket.assignees}\r\n                onClick={close}\r\n                fallback={<h3>none</h3>}\r\n              />\r\n            }\r\n          />\r\n        </FieldGrid>\r\n        <Description>\r\n          {\r\n            //<h2>Description:</h2> commented out as it does not look great.\r\n          }\r\n          <p>{ticket.description}</p>\r\n        </Description>\r\n        {ticket.imageLinks.length === 0 ||\r\n        failures === ticket.imageLinks.length ? (\r\n          <React.Fragment />\r\n        ) : (\r\n          <TicketSection>\r\n            <ImageGrid imageLinks={ticket.imageLinks} />\r\n          </TicketSection>\r\n        )}\r\n        <Communications activities={activity} close={close} />\r\n        <EditModal\r\n          imgLength={mobileDisplay ? \"25px\" : \"30px\"}\r\n          modalImgLength={\"40px\"}\r\n          maxLinks={mobileDisplay ? 4 : 5}\r\n          title={ticket.title}\r\n          description={ticket.description}\r\n          imageLinks={ticket.imageLinks}\r\n        />\r\n      </TicketWrapper>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst TicketField = ({\r\n  name,\r\n  content,\r\n}: {\r\n  name: string;\r\n  content: string | React.ReactNode;\r\n}) => (\r\n  <SectionContent className=\"gridItem\">\r\n    <h2>{name}: </h2>\r\n    <h3>{content}</h3>\r\n  </SectionContent>\r\n);\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectAuthenticated } from \"../../flux/slices/authSlice\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport Routes from \"../../constants/routes\";\r\n\r\n// A protected route is one which can only be accessed by user who are authenticated\r\n// or unauthenticated; if a user who is unauthenticated tries to access a route that\r\n// requires auth, they are redirected to the /loginRequired page and conversely,\r\n// if an authenticated user tries to access a page that requires requireAuth === false\r\n// then they are redirected to /\r\n\r\n// Note that requireAuth does not decide whether or not the rule is enforced; it only\r\n// determines what the rule is. All protected routes enforce the rule regardless of\r\n// the value of requireAuth\r\nexport default ({\r\n  requireAuth,\r\n  component,\r\n  path,\r\n  exact,\r\n}: {\r\n  requireAuth: boolean;\r\n  component: React.ReactNode;\r\n  path: any;\r\n  exact?: boolean;\r\n}) => {\r\n  const authenticated: boolean = useSelector(selectAuthenticated);\r\n  return (\r\n    <Route\r\n      path={path}\r\n      render={(props) =>\r\n        authenticated === requireAuth ? (\r\n          component\r\n        ) : (\r\n          <Redirect\r\n            to={{ pathname: requireAuth ? Routes.LOGIN_REQUIRED : Routes.HOME }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\n// A generic container, meant to  be used in sections\r\n// that have multiple widgets (like the homepage)\r\n\r\nexport const WidgetWrapper = styled.section`\r\n  backdrop-filter: blur(8px);\r\n  background-color: rgba(255, 255, 255, 0.1);\r\n  color: var(--text-color);\r\n  padding-bottom: 0.5rem;\r\n  height: auto;\r\n  width: 100%;\r\n  max-width: 100vw;\r\n  border-radius: 8px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-shadow: 0 5px 5px 0 rgba(0, 0, 0, 0.25);\r\n`;\r\n\r\nexport const WidgetHeader = styled.div`\r\n  height: auto;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  padding: 16px 1rem 14px;\r\n  border-bottom: 1px solid rgba(0, 0, 0, 0.12);\r\n  box-shadow: 0 1px 0 0 rgba(255, 255, 255, 0.12);\r\n  border-top-right-radius: 8px;\r\n  border-top-left-radius: 8px;\r\n\r\n  i {\r\n    margin-right: 0.7rem;\r\n    font-size: 1.25rem;\r\n  }\r\n\r\n  h1 {\r\n    text-transform: uppercase;\r\n    font-weight: bold;\r\n    font-size: 1.25rem;\r\n  }\r\n\r\n  @media (max-width: 1100px) {\r\n    padding: 16px 0.5rem 14px;\r\n\r\n    .inline-icon {\r\n      font-size: 1.2rem;\r\n    }\r\n\r\n    h1 {\r\n      font-size: 0.9rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const WidgetSection = styled.div`\r\n  border-bottom: 1px solid rgba(0, 0, 0, 0.12);\r\n  box-shadow: 0 1px 0 0 rgba(255, 255, 255, 0.12);\r\n  padding: 0.25rem 1rem;\r\n  margin: 0.1rem 0;\r\n  width: 100%;\r\n`;\r\n\r\nexport const Fallback = styled(WidgetSection)`\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  h1 {\r\n    line-height: 1.3;\r\n    margin-left: 0 !important;\r\n    padding: 10% 1rem 15%;\r\n    font-style: italic;\r\n  }\r\n`;\r\n","import { WidgetHeader } from \"../../container/widget\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const Header = styled(WidgetHeader)`\r\n  ${(props: { addmediaquery: boolean }) =>\r\n    props.addmediaquery\r\n      ? `\r\n        @media (max-width: 350px) {\r\n          padding: 1.2rem 0 0;\r\n          flex-direction: column;\r\n\r\n         .MuiTablePagination-root {\r\n            margin-left: 0;\r\n         }\r\n        }\r\n      `\r\n      : ``}\r\n  .inline-icon {\r\n    margin-left: 0;\r\n  }\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const PaginationContainer = styled.div`\r\n  margin-left: auto;\r\n  width: auto;\r\n  height: auto;\r\n  border: none !important;\r\n  overflow-x: hidden !important;\r\n\r\n  * {\r\n    min-height: 0 !important;\r\n    max-height: 32px !important;\r\n  }\r\n\r\n  .MuiTablePagination-spacer + p,\r\n  .MuiTablePagination-selectRoot {\r\n    display: none;\r\n  }\r\n\r\n  .MuiTablePagination-actions {\r\n    margin-left: 5px;\r\n  }\r\n\r\n  .MuiToolbar-gutters {\r\n    padding-left: 6px;\r\n  }\r\n\r\n  button {\r\n    width: 35px;\r\n    height: 35px;\r\n    padding: 0;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { WidgetWrapper, WidgetSection, Fallback } from \"../../container/widget\";\r\nimport { theme } from \"../../../constants/materialui\";\r\nimport ThemeProvider from \"@material-ui/styles/ThemeProvider\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport { Header, Title, PaginationContainer } from \"./styles\";\r\n\r\n// This is a super generic container component!\r\n\r\n// the wrapperElement must take an element of the set array as a prop on the key\r\n// elementPropName. Example: if a Dog component takes a Home object of the form\r\n// {\r\n//    street: string;\r\n//    address: number;\r\n// }\r\n// as a prop on the key 'home' then the iterable widget for a set of Dogs would be\r\n// called like so: <IterableWidget ... elementPropName=\"home\"/>\r\n\r\n// If any value is given to \"wrap in section,\" then each node which corresponds to an object\r\n// of the set array will be wrapped in a WidgetSection; otherwise, each node will just be\r\n// a wrapperElement.\r\n\r\n// Node classname can only be applied if wrapInSection is not undefined. If nodeClassNames are\r\n// needed but wrapInSection is not, then passing default props would be a better way of handling\r\n// it.\r\nexport default (props: {\r\n  className: string;\r\n  iconName: string;\r\n  title: string;\r\n  elementsPerPage: number;\r\n  set: object[];\r\n  wrapperElement: (args: any) => React.ReactNode;\r\n  defaultProps: object;\r\n  elementPropName: string;\r\n  wrapInSection?: any;\r\n  nodeClassName?: string;\r\n  emptySetFallback: React.ReactNode | string;\r\n}) => {\r\n  const [page, setPage] = React.useState(0);\r\n  const className =\r\n    props.nodeClassName === undefined ? \"\" : props.nodeClassName;\r\n\r\n  const nodes =\r\n    props.set.length > 0 ? (\r\n      props.set\r\n        .filter(\r\n          (element, index) =>\r\n            index >= page * props.elementsPerPage &&\r\n            index <= (page + 1) * props.elementsPerPage - 1\r\n        )\r\n        .map((element, index) => {\r\n          // if a value is passed for 'wrapInSection,' then the\r\n          // wrapperElement will be wrapped with a WidgetSection.\r\n          const wrap: boolean = props.wrapInSection !== undefined;\r\n          let elementProp: any = {};\r\n          elementProp[props.elementPropName] = element;\r\n          const node: React.ReactNode = props.wrapperElement(\r\n            Object.assign(\r\n              wrap ? {} : { key: index },\r\n              props.defaultProps,\r\n              elementProp\r\n            )\r\n          );\r\n          return wrap ? (\r\n            <WidgetSection className={className} key={index} children={node} />\r\n          ) : (\r\n            node\r\n          );\r\n        })\r\n    ) : typeof props.emptySetFallback === \"string\" ? (\r\n      <Fallback children={<h1 children={props.emptySetFallback} />} />\r\n    ) : (\r\n      props.emptySetFallback\r\n    );\r\n\r\n  return (\r\n    <WidgetWrapper className={props.className}>\r\n      <Header addmediaquery={props.set.length > props.elementsPerPage}>\r\n        <Title>\r\n          <Icon className=\"inline-icon\" children={props.iconName} />\r\n          <h1 children={props.title} />\r\n        </Title>\r\n        {props.set.length > props.elementsPerPage ? (\r\n          <ThemeProvider\r\n            theme={theme}\r\n            children={\r\n              <TablePagination\r\n                component={PaginationContainer}\r\n                count={props.set.length}\r\n                page={page}\r\n                onChangePage={(\r\n                  event: React.MouseEvent<HTMLButtonElement> | null,\r\n                  newPage: number\r\n                ) => setPage(newPage)}\r\n                rowsPerPage={props.elementsPerPage}\r\n              />\r\n            }\r\n          />\r\n        ) : (\r\n          <React.Fragment />\r\n        )}\r\n      </Header>\r\n      {nodes}\r\n    </WidgetWrapper>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Notification, Variant } from \"../../../constants/notification\";\r\nimport NotificationCell from \"../notification\";\r\nimport IterableWidget from \"../iterableWidget\";\r\n\r\n// Used in the home route and user route\r\nexport default ({\r\n  notificationSet,\r\n  className,\r\n  nodeClassName,\r\n}: {\r\n  notificationSet: Notification[];\r\n  className: string;\r\n  nodeClassName?: string;\r\n}) => {\r\n  return (\r\n    <IterableWidget\r\n      className={className}\r\n      iconName=\"today\"\r\n      title=\"Activity\"\r\n      elementsPerPage={5}\r\n      set={notificationSet}\r\n      wrapperElement={NotificationCell}\r\n      defaultProps={{\r\n        variant: Variant.GLOBAL,\r\n        onClick: () => {},\r\n        className: \"\",\r\n      }}\r\n      elementPropName=\"notification\"\r\n      wrapInSection={true}\r\n      nodeClassName={nodeClassName}\r\n      emptySetFallback=\"No activity\"\r\n    />\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const InputWrapper = styled.div`\r\n  label {\r\n    margin-right: 0.5rem;\r\n    font-size: 1rem;\r\n  }\r\n\r\n  div {\r\n    width: ${(props: { width: string }) => props.width};\r\n\r\n    input {\r\n      text-align: center;\r\n    }\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { theme } from \"../../../constants/materialui\";\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport { InputWrapper } from \"./styles\";\r\n\r\ninterface Props {\r\n  className: string;\r\n  showLabel: boolean;\r\n  labelText: string;\r\n  inputWidth: string;\r\n  placeholder: string;\r\n  setDefaultValue: boolean;\r\n  defaultValue: number | string;\r\n  multiline: boolean;\r\n  type: string;\r\n  onSubmit: (value: unknown) => void;\r\n}\r\n\r\nexport default (props: Props) => {\r\n  const [newVal, setNewVal] = useState(\r\n    props.setDefaultValue\r\n      ? props.defaultValue\r\n      : props.type === \"string\"\r\n      ? \"\"\r\n      : 0\r\n  );\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <InputWrapper width={props.inputWidth} className={props.className}>\r\n        {props.showLabel ? (\r\n          <label>{props.labelText}</label>\r\n        ) : (\r\n          <React.Fragment />\r\n        )}\r\n        <Input\r\n          multiline={props.multiline}\r\n          style={{ width: \"inputWidth\" }}\r\n          type={props.type}\r\n          placeholder={props.placeholder}\r\n          value={newVal}\r\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n            setNewVal(event.target.value);\r\n            try {\r\n              if (\r\n                event.target.value.length !== 0 &&\r\n                event.target.value !== null &&\r\n                (props.type === \"number\"\r\n                  ? Number(event.target.value) !== 0\r\n                  : true)\r\n              )\r\n                props.onSubmit(event.target.value);\r\n            } catch {}\r\n          }}\r\n          onKeyDown={(event: React.KeyboardEvent): void => {\r\n            if (event.keyCode === 13) {\r\n              event.preventDefault();\r\n              event.stopPropagation();\r\n              props.onSubmit(newVal);\r\n            }\r\n          }}\r\n        />\r\n      </InputWrapper>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\nimport { WidgetSection } from \"../../../../components/container/widget\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\n\r\nexport const TablePaginationContainer = styled(WidgetSection)`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 0.5rem 2rem;\r\n\r\n  @media (min-width: 1100px) {\r\n    padding: 0.5rem 1rem !important;\r\n\r\n    .paginationTextField {\r\n      div:before {\r\n        width: 75%;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (max-width: 800px) {\r\n    margin-top: 0.5rem;\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nexport const CustomPagination = styled(Pagination)`\r\n  margin: 0 auto;\r\n  width: fit-content;\r\n\r\n  .MuiPaginationItem-outlined {\r\n    :hover {\r\n      background-color: var(--highlight) !important;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const MobileWrapper = styled.div`\r\n  margin-top: 0.8rem;\r\n  width: 100%;\r\n  padding: 0 0.5rem 0.5rem;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n\r\n  * {\r\n    font-size: 0.8rem !important;\r\n  }\r\n`;\r\n\r\nexport const MobileFloater = styled.div`\r\n  margin-left: auto;\r\n`;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { initialState } from \"../../../../flux/slices/homeSlice\";\r\nimport {\r\n  setPageIndex,\r\n  setNodesPerPage,\r\n  selectPageIndex,\r\n  selectTotalPages,\r\n} from \"../../../../flux/slices/homeSlice\";\r\nimport { theme } from \"../../../../constants/materialui\";\r\nimport TextField from \"../../../../components/input/textfield\";\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport {\r\n  TablePaginationContainer,\r\n  CustomPagination,\r\n  MobileWrapper,\r\n  MobileFloater,\r\n} from \"./styles\";\r\n\r\ninterface Props {\r\n  nodesPerPage: number;\r\n}\r\n\r\nexport default (props: Props) => {\r\n  const dispatch = useDispatch();\r\n  const totalPages = useSelector(selectTotalPages);\r\n  const page = useSelector(selectPageIndex);\r\n  const perPage = (\r\n    <TextField\r\n      className=\"paginationTextField\"\r\n      inputWidth={window.innerWidth < 600 ? \"30px\" : \"50px\"}\r\n      showLabel={true}\r\n      labelText=\"Issues per page:\"\r\n      placeholder=\"num\"\r\n      setDefaultValue={true}\r\n      defaultValue={initialState.nodesPerPage}\r\n      type=\"number\"\r\n      multiline={false}\r\n      onSubmit={(newValue: any) => dispatch(setNodesPerPage(Number(newValue)))}\r\n    />\r\n  );\r\n  const paginator = (\r\n    <CustomPagination\r\n      size={window.innerWidth < 600 ? \"small\" : \"medium\"}\r\n      siblingCount={1}\r\n      count={totalPages}\r\n      page={page}\r\n      variant=\"outlined\"\r\n      shape=\"rounded\"\r\n      onChange={(event: React.ChangeEvent<unknown>, value: number) =>\r\n        dispatch(setPageIndex(value))\r\n      }\r\n    />\r\n  );\r\n\r\n  const goTo = (\r\n    <TextField\r\n      className=\"paginationTextField\"\r\n      inputWidth={window.innerWidth < 600 ? \"30px\" : \"50px\"}\r\n      showLabel={true}\r\n      labelText=\"Go to page:\"\r\n      placeholder=\"num\"\r\n      setDefaultValue={true}\r\n      defaultValue={page}\r\n      multiline={false}\r\n      type=\"number\"\r\n      onSubmit={(newValue: any) => dispatch(setPageIndex(Number(newValue)))}\r\n    />\r\n  );\r\n\r\n  const desktopLayout = (\r\n    <React.Fragment>\r\n      {perPage}\r\n      {paginator}\r\n      {goTo}\r\n    </React.Fragment>\r\n  );\r\n\r\n  const mobileLayout = (\r\n    <React.Fragment>\r\n      {paginator}\r\n      <MobileWrapper>\r\n        {perPage}\r\n        <MobileFloater>{goTo}</MobileFloater>\r\n      </MobileWrapper>\r\n    </React.Fragment>\r\n  );\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <TablePaginationContainer>\r\n        {window.innerWidth < 800 ? mobileLayout : desktopLayout}\r\n      </TablePaginationContainer>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\nimport { Rank } from \"../../../../constants/user\";\r\nimport { WidgetHeader } from \"../../../../components/container/widget\";\r\n\r\nexport const TabContainer = styled(WidgetHeader)`\r\n  padding: 0 !important;\r\n  border-bottom: 1px solid transparent;\r\n  box-shadow: none;\r\n  background-color: rgba(0, 0, 0, 0.15);\r\n\r\n  .selected,\r\n  .selected:hover {\r\n    background-color: rgba(0, 0, 0, 0.2);\r\n  }\r\n`;\r\n\r\nexport const TabSet = styled.ul`\r\n  border-top-left-radius: 5px;\r\n  border-top-right-radius: 5px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  height: fit-content;\r\n\r\n  li:first-of-type {\r\n    border-top-left-radius: 5px;\r\n  }\r\n\r\n  @media (max-width: 870px) {\r\n    width: 100%;\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr 1fr;\r\n  }\r\n`;\r\n\r\nexport const TableTab = styled.li`\r\n  height: 48px;\r\n  padding: 1rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n    background-color: rgba(0, 0, 0, 0.1);\r\n  }\r\n\r\n  .inline-icon {\r\n    margin-left: 0;\r\n  }\r\n\r\n  @media (max-width: 1100px) {\r\n    h1,\r\n    .inline-icon {\r\n      font-size: 1rem;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 870px) {\r\n    ${(props: { userRank: number }) =>\r\n      props.userRank > Rank.User ? `border: 1px solid rgba(0, 0, 0, 0.1);` : ``}\r\n    border-top: none;\r\n\r\n    .selected {\r\n      border: none;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 600px) {\r\n    padding: 1rem 0.7rem;\r\n\r\n    h1,\r\n    .inline-icon {\r\n      font-size: 0.8rem;\r\n    }\r\n\r\n    .inline-icon {\r\n      margin-right: 0.3rem;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 300px) {\r\n    h1,\r\n    .inline-icon {\r\n      font-size: 0.6rem;\r\n    }\r\n  }\r\n\r\n  ${(props: { userRank: number }) =>\r\n    props.userRank !== Rank.Developer\r\n      ? `\r\n        :nth-last-child(1),\r\n        :nth-last-child(2),\r\n        :nth-last-child(3) {\r\n          border-bottom: none;\r\n        }`\r\n      : `\r\n        :nth-last-child(1),\r\n        :nth-last-child(2) {\r\n          border-bottom: none;\r\n        }`}\r\n`;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setTabIndex, selectTabIndex } from \"../../../../flux/slices/homeSlice\";\r\nimport { selectAuthSlice } from \"../../../../flux/slices/authSlice\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport { Tab } from \"../../../../constants/table\";\r\nimport { TabContainer, TabSet, TableTab } from \"./styles\";\r\n\r\nexport default ({\r\n  tabSet,\r\n  onChange,\r\n}: {\r\n  tabSet: Tab[];\r\n  onChange: () => void;\r\n}) => {\r\n  const authSlice = useSelector(selectAuthSlice);\r\n  const userRank: number = authSlice.user.authenticated\r\n    ? authSlice.user.info.rank\r\n    : -1;\r\n  const selectedIndex = useSelector(selectTabIndex);\r\n  const dispatch = useDispatch();\r\n  const tabs = tabSet\r\n    .filter((tab) => userRank >= tab.requiredRank)\r\n    .map((tab, index) => (\r\n      <TableTab\r\n        key={tab.title}\r\n        className={index === selectedIndex ? \"selected\" : \"\"}\r\n        onClick={() => {\r\n          dispatch(setTabIndex(index));\r\n          onChange();\r\n        }}\r\n        userRank={userRank}\r\n      >\r\n        <Icon className=\"inline-icon\">{tab.iconName}</Icon>\r\n        <h1>{tab.title}</h1>\r\n      </TableTab>\r\n    ));\r\n  return (\r\n    <TabContainer>\r\n      <TabSet>{tabs}</TabSet>\r\n    </TabContainer>\r\n  );\r\n};\r\n","import { WidgetSection } from \"../../container/widget\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const statLen = \"25px\";\r\nexport const statRightMarg = \"0.5rem\";\r\nexport const statLeftMarg = \"0.5rem\";\r\n\r\nexport const TicketWrapper = styled(WidgetSection)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 0.25rem 0.5rem;\r\n`;\r\n\r\nexport const TicketHeader = styled.div`\r\n  padding-top: 0.3rem;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  margin-bottom: 0.4rem;\r\n\r\n  h1 {\r\n    display: flex;\r\n    width: calc(92% - ${statLen});\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    font-size: 1rem;\r\n\r\n    :hover {\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const TicketTitle = styled.h1`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const TicketBody = styled.div`\r\n  width: 100%;\r\n  display: grid;\r\n  margin-left: 8%;\r\n  grid-template-columns: 32% 60%;\r\n  align-items: center;\r\n  padding-bottom: 0.2rem;\r\n\r\n  @media (max-width: 335px) {\r\n    grid-template-columns: 40% 52%;\r\n  }\r\n`;\r\n\r\nexport const TicketBodyCell = styled.div`\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding-left: 4px;\r\n  padding-right: 4px;\r\n  height: 30px;\r\n\r\n  h3 {\r\n    display: inline-flex;\r\n    font-size: 0.8rem;\r\n\r\n    span {\r\n      margin-left: 0.5rem;\r\n    }\r\n\r\n    .timestamp {\r\n      margin-left: 0.5rem;\r\n\r\n      h6 {\r\n        font-size: 0.8rem;\r\n      }\r\n    }\r\n  }\r\n\r\n  --tcell-border: 1px solid rgba(255, 255, 255, 0.15);\r\n\r\n  :nth-child(odd) {\r\n    border-right: var(--tcell-border);\r\n  }\r\n\r\n  :nth-child(even) {\r\n    padding-left: 10px;\r\n  }\r\n\r\n  :nth-last-child(1),\r\n  :nth-last-child(2) {\r\n    border-top: var(--tcell-border);\r\n    height: 33px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport API from \"../../../api\";\r\nimport StatusIndicator from \"../statusIndicator\";\r\nimport UserLink from \"../userLink\";\r\nimport TicketTag from \"../ticketTag\";\r\nimport { CollapsedTicket, Severity } from \"../../../constants/ticket\";\r\nimport Timestamp from \"../timestamp\";\r\nimport {\r\n  TicketWrapper,\r\n  TicketHeader,\r\n  TicketTitle,\r\n  TicketBody,\r\n  TicketBodyCell,\r\n  statLen,\r\n  statLeftMarg,\r\n  statRightMarg,\r\n} from \"./styles\";\r\n\r\n// This component is meant to display only the essential details\r\n// of a ticket (specifically, information that can be useful\r\n// for delegation); see Ticket.tsx for a detailed view.\r\n\r\nexport default ({ ticket }: { ticket: CollapsedTicket }) => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <TicketWrapper>\r\n      <TicketHeader>\r\n        <StatusIndicator\r\n          status={ticket.status}\r\n          styles={{\r\n            length: statLen,\r\n            rightMargin: statRightMarg,\r\n            leftMargin: statLeftMarg,\r\n          }}\r\n        />\r\n        <TicketTitle\r\n          onClick={() => dispatch(API.loadTicketById(ticket.id.toString()))}\r\n        >\r\n          <TicketTag label={ticket.typeLabel} />\r\n          {ticket.title}\r\n        </TicketTitle>\r\n      </TicketHeader>\r\n      <TicketBody>\r\n        <TicketBodyCell>\r\n          <h3 className=\"severity\">\r\n            Severity:\r\n            <span className={Severity[ticket.severity]}>\r\n              {Severity[ticket.severity]}\r\n            </span>\r\n          </h3>\r\n        </TicketBodyCell>\r\n        <TicketBodyCell>\r\n          <h3>\r\n            Latest Update:\r\n            <Timestamp date={ticket.updateDate} className=\"timestamp\" />\r\n          </h3>\r\n        </TicketBodyCell>\r\n        <TicketBodyCell>\r\n          <h3>{\"Comments: \" + ticket.comments}</h3>\r\n        </TicketBodyCell>\r\n        <TicketBodyCell>\r\n          <UserLink\r\n            styleConfig={{\r\n              className: \"author\",\r\n              showImg: true,\r\n              imgLength: \"20px\",\r\n              internalSpacing: \"0.5rem\",\r\n              showTag: true,\r\n              tagSize: \"1.25rem\",\r\n              small: true,\r\n            }}\r\n            userTag={ticket.author}\r\n          />\r\n        </TicketBodyCell>\r\n      </TicketBody>\r\n    </TicketWrapper>\r\n  );\r\n};\r\n","import Icon from \"@material-ui/core/Icon\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const SearchWrapper = styled.div`\r\n  background-color: rgba(0, 0, 0, 0.05);\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: flex-end;\r\n  justify-content: center;\r\n  padding: 0.1rem 0 0 1.2rem;\r\n  border-radius: 30px;\r\n  margin: auto 1rem 0 0;\r\n\r\n  .searchButton {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 32px !important;\r\n    // width: 32px !important;\r\n    padding: 0.3rem 0.5rem 0.3rem 0.2rem !important;\r\n    border-radius: 0 !important;\r\n    border-top-right-radius: 30px !important;\r\n    border-bottom-right-radius: 30px !important;\r\n\r\n    :hover {\r\n      border-radius: 0 !important;\r\n      border-top-right-radius: 30px !important;\r\n      border-bottom-right-radius: 30px !important;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const SearchIcon = styled(Icon)`\r\n  font-size: 1.8rem;\r\n`;\r\n","import React from \"react\";\r\nimport { theme } from \"../../../constants/materialui\";\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport Button from \"../button\";\r\nimport { SearchWrapper, SearchIcon } from \"./styles\";\r\n\r\ninterface Props {\r\n  label: string;\r\n  onChange: (newValue: string) => void;\r\n}\r\n\r\nexport default (props: Props) => {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <SearchWrapper>\r\n        <Input\r\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\r\n            props.onChange(event.target.value)\r\n          }\r\n          // onKeyDown={(event: React.KeyboardEvent): void => {\r\n          //   if (event.keyCode === 13) {\r\n          //     event.preventDefault();\r\n          //     event.stopPropagation();\r\n          //     props.onSubmit();\r\n          //   }\r\n          // }}\r\n          placeholder={props.label}\r\n        />\r\n        <Button\r\n          className=\"searchButton hoverfx\"\r\n          onClick={() => {}}\r\n          //onClick={props.onSubmit}\r\n        >\r\n          <SearchIcon>search</SearchIcon>\r\n        </Button>\r\n      </SearchWrapper>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  HomeState,\r\n  selectHomeSlice,\r\n  setTotalPages,\r\n  setPageIndex,\r\n  setNodesPerPage,\r\n  setSort,\r\n} from \"../../../flux/slices/homeSlice\";\r\nimport { selectAllElements } from \"../../../flux/slices/contextSlice\";\r\nimport { selectUser } from \"../../../flux/slices/authSlice\";\r\nimport {\r\n  WidgetWrapper,\r\n  WidgetHeader,\r\n} from \"../../../components/container/widget\";\r\nimport TablePagination from \"./pagination\";\r\nimport TableTabs from \"./tabs\";\r\nimport TableTicket from \"../../../components/global/collapsedTicket\";\r\nimport Search from \"../../../components/input/search\";\r\nimport Select from \"../../../components/input/select\";\r\nimport {\r\n  sortSelectOptions,\r\n  generateTabSet,\r\n  applySort,\r\n} from \"../../../constants/table\";\r\nimport { CollapsedTicket, stringify } from \"../../../constants/ticket\";\r\nimport { Fallback } from \"../../../components/container/widget\";\r\nimport styled from \"styled-components\";\r\n\r\nexport default (props: { className: string }) => {\r\n  const dispatch = useDispatch();\r\n  const [query, setQuery] = React.useState(\"\");\r\n  const homeSlice: HomeState = useSelector(selectHomeSlice);\r\n  const pageIndex = homeSlice.pageIndex;\r\n  const nodesPerPage = homeSlice.nodesPerPage;\r\n  const users = useSelector(selectAllElements(\"users\"));\r\n  const tabSet = generateTabSet(\r\n    useSelector(selectUser),\r\n    (tag: string) => users.filter((u) => u.tag === tag)[0].rank\r\n  );\r\n\r\n  const applyQuery = (set: CollapsedTicket[]): CollapsedTicket[] =>\r\n    query === \"\"\r\n      ? set\r\n      : set.filter((ticket) =>\r\n          stringify(ticket).toLowerCase().includes(query.toLowerCase())\r\n        );\r\n\r\n  const ticketSet: CollapsedTicket[] = applyQuery(\r\n    applySort(\r\n      homeSlice.sort,\r\n      tabSet[homeSlice.tabIndex].filter(\r\n        useSelector(selectAllElements(\"collapsedTickets\"))\r\n      )\r\n    )\r\n  );\r\n  const totalPages = Math.ceil(ticketSet.length / nodesPerPage);\r\n  if (totalPages !== homeSlice.totalPages) dispatch(setTotalPages(totalPages));\r\n\r\n  return (\r\n    <WidgetWrapper className={props.className}>\r\n      <TableTabs\r\n        tabSet={tabSet}\r\n        onChange={() => {\r\n          dispatch(setPageIndex(0));\r\n          dispatch(setNodesPerPage(5));\r\n          dispatch(setTotalPages(Math.ceil(ticketSet.length / 5)));\r\n        }}\r\n      />\r\n      <TableControls>\r\n        <Search\r\n          label=\"Search\"\r\n          onChange={(newValue: string) => {\r\n            setQuery(newValue);\r\n          }}\r\n        />\r\n        <Select\r\n          fixedWidth={true}\r\n          width={150}\r\n          mobileWidth={115}\r\n          onChange={(newValue: string) => dispatch(setSort(newValue))}\r\n          options={sortSelectOptions}\r\n        />\r\n      </TableControls>\r\n      {ticketSet.length > 0 ? (\r\n        ticketSet\r\n          .filter(\r\n            (ticket, index) =>\r\n              index >= nodesPerPage * (pageIndex - 1) &&\r\n              index < nodesPerPage * pageIndex\r\n          )\r\n          .map((ticket, index) => <TableTicket key={index} ticket={ticket} />)\r\n      ) : (\r\n        <Fallback>\r\n          <h1>No tickets found</h1>\r\n        </Fallback>\r\n      )}\r\n      <TablePagination nodesPerPage={nodesPerPage} />\r\n    </WidgetWrapper>\r\n  );\r\n};\r\n\r\nconst TableControls = styled(WidgetHeader)`\r\n  padding-top: 8px;\r\n\r\n  .selectFormWrapper {\r\n    margin: 0 1rem 0 auto;\r\n  }\r\n`;\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { NewTicket } from \"../../constants/ticket\";\r\nimport { RootState } from \"../store\";\r\n\r\ninterface CreationState {\r\n  displayModal: boolean;\r\n  newTicket: NewTicket;\r\n}\r\n\r\nconst initialState: CreationState = {\r\n  displayModal: false,\r\n  newTicket: {\r\n    title: \"\",\r\n    description: \"\",\r\n    severity: 0,\r\n    reproducibility: 0,\r\n    typeLabel: 0,\r\n    imageLinks: [],\r\n  },\r\n};\r\n\r\nexport const creationSlice = createSlice({\r\n  name: \"creation\",\r\n  initialState,\r\n  reducers: {\r\n    toggleDisplay: (state) => {\r\n      state.displayModal = !state.displayModal;\r\n    },\r\n    updateNewTicket: {\r\n      reducer(state, action: PayloadAction<object>) {\r\n        state.newTicket = Object.assign(state.newTicket, action.payload);\r\n      },\r\n      prepare(payload: object) {\r\n        return { payload };\r\n      },\r\n    },\r\n    wipeLocalChanges: (state) => {\r\n      state = Object.assign(state, initialState);\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  toggleDisplay,\r\n  updateNewTicket,\r\n  wipeLocalChanges,\r\n} = creationSlice.actions;\r\n\r\nexport const selectDisplayed = (state: RootState) =>\r\n  state.creation.displayModal;\r\n\r\nexport const selectNewTicket = (state: RootState) => state.creation.newTicket;\r\n\r\nexport default creationSlice.reducer;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  updateNewTicket,\r\n  selectDisplayed,\r\n  selectNewTicket,\r\n  wipeLocalChanges,\r\n} from \"../../../flux/slices/creationSlice\";\r\nimport FormModal from \"../../../components/global/formModal\";\r\nimport API from \"../../../api\";\r\n\r\nexport default () => {\r\n  const dispatch = useDispatch();\r\n  const open: boolean = useSelector(selectDisplayed);\r\n  const ticket = useSelector(selectNewTicket);\r\n  // while close actually toggles the display instead of setting it to false,\r\n  // it can only be called when display = true so it is effectively the same\r\n  // as setting display to false.\r\n  const close = () => dispatch(wipeLocalChanges());\r\n\r\n  const submit = (): void => {\r\n    dispatch(API.createTicket(ticket));\r\n    close();\r\n  };\r\n\r\n  return (\r\n    <FormModal\r\n      ariaLabel=\"Creation View\"\r\n      ariaDesc=\"A menu through which issues can be created.\"\r\n      open={open}\r\n      close={close}\r\n      update={(change: object): void => {\r\n        dispatch(updateNewTicket(change));\r\n      }}\r\n      submit={submit}\r\n      submitButtonText=\"Submit\"\r\n      displaySelects={true}\r\n      displayDevSelects={true}\r\n      disableStatus={true}\r\n      displayAuthor={true}\r\n      defaultTitle={ticket.title}\r\n      defaultDesc={ticket.description}\r\n      defaultLinks={ticket.imageLinks}\r\n      injectedNode={<React.Fragment />}\r\n    />\r\n  );\r\n};\r\n","import { WidgetWrapper } from \"../../../components/container/widget\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const LinkWrapper = styled(ButtonBase)`\r\n  width: 100%;\r\n`;\r\n\r\nexport const LinkWidget = styled(WidgetWrapper)`\r\n  display: flex;\r\n  padding: 1rem;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  :hover {\r\n    background-color: var(--highlight);\r\n    cursor: pointer;\r\n  }\r\n\r\n  h1 {\r\n    margin-right: auto;\r\n  }\r\n\r\n  @media (max-width: 1100px) {\r\n    .icon {\r\n      font-size: 1.2rem;\r\n    }\r\n\r\n    h1 {\r\n      font-size: 0.9rem;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport Routes from \"../../../constants/routes\";\r\nimport { toggleDisplay } from \"../../../flux/slices/creationSlice\";\r\nimport { selectUser } from \"../../../flux/slices/authSlice\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport history from \"../../history\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport CreationModal from \"../creationModal\";\r\nimport { LinkWrapper, LinkWidget } from \"./styles\";\r\n\r\nexport default () => {\r\n  const dispatch = useDispatch();\r\n  const authenticated = useSelector(selectUser).authenticated;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <LinkWrapper\r\n        onClick={() =>\r\n          authenticated\r\n            ? dispatch(toggleDisplay())\r\n            : history.push(Routes.LOGIN_REQUIRED)\r\n        }\r\n      >\r\n        <LinkWidget>\r\n          <h1>Create a new Issue</h1>\r\n          <Icon className=\"icon\">create</Icon>\r\n        </LinkWidget>\r\n      </LinkWrapper>\r\n      <CreationModal />\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const HomeWrapper = styled.section`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: flex-start;\r\n  justify-content: center;\r\n  width: 100%;\r\n  height: auto;\r\n\r\n  .tableContainer {\r\n    margin-right: 3vw;\r\n    min-width: 1000px;\r\n    width: 45vw;\r\n  }\r\n\r\n  @media (max-width: 1670px) {\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n\r\n    .tableContainer {\r\n      width: 100%;\r\n      margin-right: 0;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 1100px) {\r\n    .tableContainer {\r\n      min-width: 0;\r\n      width: 95vw;\r\n      margin: 0 auto;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Aside = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  justify-content: center;\r\n  width: 500px;\r\n\r\n  .recentActivity {\r\n    margin-bottom: 2rem;\r\n  }\r\n\r\n  @media (max-width: 1770px) {\r\n    width: 400px;\r\n  }\r\n\r\n  @media (max-width: 1670px) {\r\n    margin-top: 2rem;\r\n    width: 100%;\r\n    flex-direction: row;\r\n\r\n    .recentActivity {\r\n      width: 50%;\r\n      margin: 0 2rem 0 0;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 1100px) {\r\n    width: 95vw;\r\n  }\r\n\r\n  @media (max-width: 840px) {\r\n    flex-direction: column;\r\n\r\n    .recentActivity {\r\n      width: 100%;\r\n      margin: 0 0 2rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const MiscContainer = styled.div`\r\n  width: 100%;\r\n  grid-gap: 2rem;\r\n\r\n  @media (max-width: 1670px) {\r\n    width: calc(50% - 2rem);\r\n  }\r\n\r\n  @media (max-width: 840px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectRecentActivity } from \"../../flux/slices/homeSlice\";\r\nimport { selectElementsByKeys } from \"../../flux/slices/contextSlice\";\r\nimport { Notification, sortNotifications } from \"../../constants/notification\";\r\nimport RecentActivity from \"../../components/global/recentActivity\";\r\nimport Table from \"./ticketTable\";\r\nimport CreateLink from \"./createLink\";\r\nimport { HomeWrapper, Aside, MiscContainer } from \"./styles\";\r\n\r\nexport default () => {\r\n  const ids: string[] = useSelector(selectRecentActivity).map((i: number) =>\r\n    i.toString()\r\n  );\r\n  const notificationSet: Notification[] = sortNotifications(\r\n    useSelector(selectElementsByKeys(\"activity\"))(ids),\r\n    true\r\n  );\r\n  return (\r\n    <HomeWrapper>\r\n      <Table className=\"tableContainer\" />\r\n      <Aside>\r\n        <RecentActivity\r\n          className=\"recentActivity\"\r\n          notificationSet={notificationSet}\r\n        />\r\n        <MiscContainer>\r\n          <CreateLink />\r\n        </MiscContainer>\r\n      </Aside>\r\n    </HomeWrapper>\r\n  );\r\n};\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { RootState, AppThunk } from \"../store\";\r\nimport { CollapsedTicket } from \"../../constants/ticket\";\r\nimport { getDateFromISO } from \"../../constants/date\";\r\nimport { ChartPoint } from \"chart.js\";\r\n\r\nexport interface DashboardState {\r\n  loaded: boolean;\r\n  infoData: string[];\r\n  statusData: number[];\r\n  severityData: number[];\r\n  lineLabels: string[];\r\n  lineData: ChartPoint[];\r\n}\r\n\r\nconst initialState: DashboardState = {\r\n  loaded: false,\r\n  infoData: [],\r\n  statusData: [],\r\n  severityData: [],\r\n  lineLabels: [],\r\n  lineData: [],\r\n};\r\n\r\nexport const homeSlice = createSlice({\r\n  name: \"home\",\r\n  initialState,\r\n  reducers: {\r\n    storeData: (state, action: PayloadAction<DashboardState>) => {\r\n      state = Object.assign(state, action.payload);\r\n    },\r\n  },\r\n});\r\n\r\n// parse data from ContextSlice and store it in the DashboardState\r\nexport const loadData = (): AppThunk => (dispatch, getState) => {\r\n  const state: RootState = getState();\r\n  // get Tickets from ContextSlice and sort by date (oldest to newst)\r\n  const tickets: CollapsedTicket[] = state.context.stores.collapsedTickets.allKeys\r\n    .map((key) => state.context.stores.collapsedTickets.byKey[key])\r\n    .sort(\r\n      (t1, t2) =>\r\n        getDateFromISO(t1.creationDate).getTime() -\r\n        getDateFromISO(t2.creationDate).getTime()\r\n    );\r\n  const resolved: number = tickets.filter((t) => t.status === 2).length;\r\n  const wip: number = tickets.filter((t) => t.status === 1).length;\r\n  const unassigned: number = tickets.filter((t) => t.status === 0).length;\r\n\r\n  var labels: string[] = [];\r\n  var dataSet: {\r\n    [label: string]: number;\r\n  } = {};\r\n\r\n  tickets.forEach((t) => {\r\n    const date: string = getDateFromISO(t.creationDate).toDateString();\r\n    if (labels.indexOf(date) === -1) {\r\n      labels.push(date);\r\n      dataSet[date] = 1;\r\n    } else {\r\n      dataSet[date] = dataSet[date] + 1;\r\n    }\r\n  });\r\n\r\n  dispatch(\r\n    homeSlice.actions.storeData({\r\n      loaded: true,\r\n      infoData: [\r\n        tickets.length.toString(),\r\n        resolved.toString(),\r\n        wip.toString(),\r\n        unassigned.toString(),\r\n      ],\r\n      statusData: [resolved, wip, unassigned],\r\n      severityData: [\r\n        tickets.filter((t) => t.severity === 2).length,\r\n        tickets.filter((t) => t.severity === 1).length,\r\n        tickets.filter((t) => t.severity === 0).length,\r\n      ],\r\n      lineLabels: Object.keys(dataSet).map((key: string) =>\r\n        new Date(key).toLocaleString()\r\n      ),\r\n      // .map((date) =>  date.substring(3, date.length - 5)),\r\n      lineData: Object.keys(dataSet).map((key: string) => {\r\n        return {\r\n          t: new Date(key),\r\n          y: dataSet[key],\r\n        };\r\n      }),\r\n    })\r\n  );\r\n};\r\n\r\nexport const selectDashboardSlice = (state: RootState): DashboardState =>\r\n  state.dashboard;\r\n\r\nexport default homeSlice.reducer;\r\n","import React from \"react\";\r\nimport { WidgetWrapper } from \"../../../components/container/widget\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport styled from \"styled-components\";\r\n\r\nexport default (props: { title: string; data: string; iconName: string }) => {\r\n  return (\r\n    <Container>\r\n      <InfoIcon children={props.iconName} />\r\n      <Info>\r\n        <h1>{props.title}</h1>\r\n        <h2>{props.data}</h2>\r\n      </Info>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst Container = styled(WidgetWrapper)`\r\n  width: 100%;\r\n  height: 114px;\r\n  padding: 1rem 2rem 1rem 1.5rem;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n\r\n  :first-child {\r\n    margin-left: 0;\r\n  }\r\n\r\n  :last-child {\r\n    margin-right: 0;\r\n  }\r\n`;\r\n\r\nconst Info = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  h1 {\r\n    display: inline-block;\r\n    font-size: 1.25rem;\r\n    font-weight: bold;\r\n    opacity: 0.9;\r\n\r\n    @media (max-width: 1583px) and (min-width: 1320px) {\r\n      font-size: 1rem;\r\n    }\r\n\r\n    @media (max-width: 705px) and (min-width: 600px) {\r\n      font-size: 1rem;\r\n    }\r\n\r\n    @media (max-width: 350px) {\r\n      font-size: 1rem;\r\n    }\r\n  }\r\n\r\n  h2 {\r\n    width: 100%;\r\n    margin: 0.5rem 0 0 1.5rem;\r\n    text-align: left;\r\n    font-size: 1.5rem;\r\n\r\n    @media (max-width: 1583px) and (min-width: 1320px) {\r\n      font-size: 1.25rem;\r\n    }\r\n\r\n    @media (max-width: 705px) and (min-width: 600px) {\r\n      font-size: 1.25rem;\r\n    }\r\n\r\n    @media (max-width: 350px) {\r\n      font-size: 1.25rem;\r\n    }\r\n  }\r\n`;\r\n\r\nconst InfoIcon = styled(Icon)`\r\n  margin-right: 1.5rem;\r\n  font-size: 4rem !important;\r\n  width: 80px;\r\n  height: 80px;\r\n  opacity: 70%;\r\n\r\n  @media (max-width: 1440px) and (min-width: 1320px) {\r\n    font-size: 3rem !important;\r\n    margin-right: 0.6rem;\r\n  }\r\n\r\n  @media (max-width: 705px) and (min-width: 600px) {\r\n    font-size: 3rem !important;\r\n    margin-right: 0.6rem;\r\n  }\r\n\r\n  @media (max-width: 350px) {\r\n    font-size: 3rem !important;\r\n    margin-right: 0.6rem;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { WidgetWrapper } from \"../../../components/container/widget\";\r\nimport { Pie, defaults } from \"react-chartjs-2\";\r\nimport styled from \"styled-components\";\r\n\r\ndefaults.global.defaultFontColor = \"rgba(255, 255, 255, 0.9)\";\r\n\r\nexport default (props: {\r\n  labels: string[];\r\n  data: number[];\r\n  backgroundColors: string[];\r\n  hoverBackgroundColors: string[];\r\n}) => {\r\n  defaults.global.defaultFontSize = window.innerWidth < 500 ? 15 : 20;\r\n  return (\r\n    <Container\r\n      children={\r\n        <Pie\r\n          data={{\r\n            labels: props.labels,\r\n            datasets: [\r\n              {\r\n                data: props.data,\r\n                backgroundColor: props.backgroundColors,\r\n                hoverBackgroundColor: props.hoverBackgroundColors,\r\n              },\r\n            ],\r\n          }}\r\n          options={{\r\n            responsive: true,\r\n            maintainAspectRatio: false,\r\n            legend: {\r\n              position: window.innerWidth < 700 ? \"bottom\" : \"right\",\r\n              align: window.innerWidth < 700 ? \"center\" : \"start\",\r\n              labels: {\r\n                fontSize: window.innerWidth < 500 ? 20 : 24,\r\n                padding: window.innerWidth < 700 ? 40 : 20,\r\n              },\r\n            },\r\n          }}\r\n        />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nconst Container = styled(WidgetWrapper)`\r\n  width: 100%;\r\n  max-width: 100%;\r\n  position: relative;\r\n  padding: 1.5rem 1rem 2.5rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  min-height: 475px;\r\n`;\r\n","import React from \"react\";\r\nimport { WidgetWrapper } from \"../../../components/container/widget\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { ChartPoint } from \"chart.js\";\r\nimport styled from \"styled-components\";\r\n\r\nexport default (props: {\r\n  title: string;\r\n  labels: string[];\r\n  data: ChartPoint[];\r\n}) => (\r\n  <Container\r\n    children={\r\n      <Line\r\n        data={{\r\n          labels: props.labels,\r\n          datasets: [\r\n            {\r\n              label: props.title,\r\n              fill: true,\r\n              lineTension: 0.05,\r\n              backgroundColor: \"rgba(32, 158, 145, 0.45)\",\r\n              borderColor: \"rgba(32, 158, 145, 1)\",\r\n              borderCapStyle: \"butt\",\r\n              borderDash: [],\r\n              borderDashOffset: 0.0,\r\n              borderJoinStyle: \"round\",\r\n              pointBorderColor: \"rgba(32, 158, 145, 0.7)\",\r\n              pointBackgroundColor: \"rgba(32, 158, 145, 1)\",\r\n              pointBorderWidth: 1,\r\n              pointHoverRadius: 10,\r\n              pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\r\n              pointHoverBorderColor: \"rgba(220,220,220,1)\",\r\n              pointHoverBorderWidth: 2,\r\n              pointRadius: 4,\r\n              pointHitRadius: 10,\r\n              data: props.data,\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          maintainAspectRatio:\r\n            window.innerWidth < 1600 && window.innerWidth > 500,\r\n          legend: {\r\n            labels: {\r\n              fontSize: window.innerWidth < 500 ? 20 : 24,\r\n            },\r\n          },\r\n          scales: {\r\n            xAxes: [\r\n              {\r\n                type: \"time\",\r\n              },\r\n            ],\r\n            yAxes: [\r\n              {\r\n                ticks: {\r\n                  beginAtZero: true,\r\n                },\r\n              },\r\n            ],\r\n          },\r\n        }}\r\n      />\r\n    }\r\n  />\r\n);\r\n\r\nconst Container = styled(WidgetWrapper)`\r\n  width: 100%;\r\n  max-width: 100%;\r\n  position: relative;\r\n  padding: 1rem;\r\n\r\n  @media (min-width: 1601px) {\r\n    min-height: 70vh;\r\n  }\r\n\r\n  @media (max-width: 500px) {\r\n    min-height: 75vh;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n`;\r\n\r\nexport const InfoContainer = styled.div`\r\n  width: 100%;\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr 1fr;\r\n  grid-gap: 2rem;\r\n\r\n  @media (max-width: 1320px) {\r\n    grid-template-columns: 1fr 1fr;\r\n  }\r\n\r\n  @media (max-width: 600px) {\r\n    padding-top: 1rem;\r\n    width: 90%;\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nexport const PieChartContainer = styled.div`\r\n  width: 100%;\r\n  max-width: 100%;\r\n  display: grid;\r\n  padding: 2rem 0;\r\n  grid-template-columns: repeat(2, calc(50% - 1rem));\r\n  grid-gap: 2rem;\r\n\r\n  @media (max-width: 1050px) {\r\n    grid-template-columns: 100%;\r\n  }\r\n\r\n  @media (max-width: 600px) {\r\n    width: 90%;\r\n  }\r\n`;\r\n\r\nexport const LineChartContainer = styled.div`\r\n  width: 100%;\r\n  @media (max-width: 600px) {\r\n    width: 90%;\r\n  }\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nexport const LoadingWrapper = styled.div`\r\n  width: 100%;\r\n  height: calc(100vh - var(--nav-height) - 2rem - 40px);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch, connect } from \"react-redux\";\r\nimport {\r\n  loadData,\r\n  DashboardState,\r\n  selectDashboardSlice,\r\n} from \"../../flux/slices/dashboardSlice\";\r\nimport InfoWidget from \"./infoWidget\";\r\nimport PieChart from \"./pieChart\";\r\nimport LineChart from \"./lineChart\";\r\nimport Loading from \"../../components/global/loadingRing/LoadingRing\";\r\nimport {\r\n  Container,\r\n  InfoContainer,\r\n  PieChartContainer,\r\n  LineChartContainer,\r\n  LoadingWrapper,\r\n} from \"./styles\";\r\n\r\nconst Page = () => {\r\n  const dispatch = useDispatch();\r\n  const dashboardSlice = useSelector(selectDashboardSlice);\r\n  if (!dashboardSlice.loaded) dispatch(loadData());\r\n\r\n  return dashboardSlice.loaded ? (\r\n    <Container>\r\n      <InfoContainer>\r\n        <InfoWidget\r\n          title=\"Total Issues\"\r\n          data={dashboardSlice.infoData[0]}\r\n          iconName=\"confirmation_number\"\r\n        />\r\n        <InfoWidget\r\n          title=\"Resolved Issues\"\r\n          data={dashboardSlice.infoData[1]}\r\n          iconName=\"check_circle\"\r\n        />\r\n        <InfoWidget\r\n          title=\"Work-in-progress\"\r\n          data={dashboardSlice.infoData[2]}\r\n          iconName=\"cached\"\r\n        />\r\n        <InfoWidget\r\n          title=\"Unassigned Issues\"\r\n          data={dashboardSlice.infoData[3]}\r\n          iconName=\"assignment_late\"\r\n        />\r\n      </InfoContainer>\r\n      <PieChartContainer>\r\n        <PieChart\r\n          labels={[\"Resolved\", \"Assigned\", \"Unassigned\"]}\r\n          data={dashboardSlice.statusData}\r\n          backgroundColors={[\"#90b900\", \"#209e91\", \"#e85656\"]}\r\n          hoverBackgroundColors={[\r\n            \"rgb(200, 255, 0)\",\r\n            \"rgb(45, 172, 209)\",\r\n            \"rgb(232, 86, 86)\",\r\n          ]}\r\n        />\r\n        <PieChart\r\n          labels={[\"Major\", \"Minor\", \"Trivial\"]}\r\n          data={dashboardSlice.severityData}\r\n          backgroundColors={[\"#005562\", \"#0e8174\", \"#6eba8c\"]}\r\n          hoverBackgroundColors={[\"#209e91\", \"#209e91\", \"#209e91\"]}\r\n        />\r\n      </PieChartContainer>\r\n      <LineChartContainer\r\n        children={\r\n          <LineChart\r\n            title=\"Issues over Time\"\r\n            labels={dashboardSlice.lineLabels}\r\n            data={dashboardSlice.lineData}\r\n          />\r\n        }\r\n      />\r\n    </Container>\r\n  ) : (\r\n    <LoadingWrapper children={<Loading />} />\r\n  );\r\n};\r\n\r\n// Wrapper which overrides 'shouldComponentUpdate' to prevent an infinite re-render loop.\r\nexport default connect(selectDashboardSlice)(\r\n  class extends React.Component<DashboardState, {}> {\r\n    shouldComponentUpdate = () => !this.props.loaded;\r\n\r\n    render = () => <Page />;\r\n  }\r\n);\r\n","import styled from \"styled-components\";\r\nimport { WidgetWrapper, WidgetHeader, WidgetSection } from \"../widget\";\r\n\r\n// A generic container, meant to be used only on pages where\r\n// it is the sole content (like login/register/404/authError)\r\n// If multiple pieces of content (with separate containers)\r\n// are required, then the normal Widget should be used.\r\n\r\nexport const DarkWidgetWrapper = styled.section`\r\n  height: calc(100vh - var(--nav-height) - 2rem - 8px);\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const DarkWidget = styled(WidgetWrapper)`\r\n  background: rgba(0, 0, 0, 0.5);\r\n  border-radius: 5px;\r\n  padding: 32px;\r\n  margin-bottom: 20vh;\r\n\r\n  @media (max-width: 800px) {\r\n    margin-bottom: 10vh;\r\n  }\r\n\r\n  @media (max-width: 600px) {\r\n    padding: 32px 10px;\r\n  }\r\n`;\r\n\r\nexport const DarkWidgetHeader = styled(WidgetHeader)`\r\n  border-bottom: none;\r\n  box-shadow: none;\r\n  justify-content: center;\r\n  font-size: 1.5rem;\r\n  font-weight: 300;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nexport const DarkWidgetSection = styled(WidgetSection)`\r\n  border-bottom: none;\r\n  box-shadow: none;\r\n`;\r\n","import { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\n// Simple wrapper for react-router-dom Link\r\n// Never use anchor tags (unless redirecting\r\n// to an external page\r\n\r\nexport default styled(Link)`\r\n  color: var(--highlight);\r\n  text-decoration: none;\r\n`;\r\n","import React from \"react\";\r\nimport {\r\n  DarkWidgetWrapper,\r\n  DarkWidget,\r\n  DarkWidgetHeader,\r\n  DarkWidgetSection,\r\n} from \"../../components/container/darkWidget\";\r\nimport HyperLink from \"../../components/global/hyperLink\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface Props {\r\n  width: string;\r\n  header: string;\r\n  bodyText: string;\r\n  linkText: string;\r\n  linkHref: string;\r\n}\r\n\r\nexport default (props: Props) => {\r\n  return (\r\n    <DarkWidgetWrapper>\r\n      <ErrorPage width={props.width}>\r\n        <DarkWidgetHeader>{props.header}</DarkWidgetHeader>\r\n        <DarkWidgetSection>\r\n          <h1 style={{ fontSize: \"inherit\", display: \"inline\" }}>\r\n            {props.bodyText}\r\n          </h1>\r\n          <HyperLink to={props.linkHref}>{props.linkText}</HyperLink>\r\n        </DarkWidgetSection>\r\n      </ErrorPage>\r\n    </DarkWidgetWrapper>\r\n  );\r\n};\r\n\r\nconst ErrorPage = styled(DarkWidget)`\r\n  width: ${(props: { width: string }) => props.width};\r\n\r\n  h1 {\r\n    line-height: 160%;\r\n  }\r\n`;\r\n","import {\r\n  DarkWidget,\r\n  DarkWidgetHeader,\r\n  DarkWidgetSection,\r\n} from \"../../components/container/darkWidget\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const FormWidget = styled(DarkWidget)`\r\n  width: 350px;\r\n\r\n  .MuiFormControl-root {\r\n    margin: 8px;\r\n  }\r\n\r\n  @media (max-width: 380px) {\r\n    width: 90vw;\r\n  }\r\n`;\r\n\r\nexport const FormHeader = styled(DarkWidgetHeader)`\r\n  font-size: 1.5rem;\r\n`;\r\n\r\nexport const FormWrapper = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  .error {\r\n    color: rgb(244, 67, 54) !important;\r\n  }\r\n`;\r\n\r\nexport const FormSection = styled(DarkWidgetSection)`\r\n  margin-top: 1rem;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 0 8px;\r\n\r\n  .formButton {\r\n    background-color: var(--highlight);\r\n    margin-right: ${(props: { setMargin: boolean }) =>\r\n      props.setMargin ? \"auto\" : \"0\"};\r\n    font-size: 1.15rem !important;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { DarkWidgetWrapper } from \"../../components/container/darkWidget\";\r\nimport clsx from \"clsx\";\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport { theme, useStyles } from \"../../constants/materialui\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport Button from \"../../components/input/button\";\r\nimport { FormWrapper, FormWidget, FormHeader, FormSection } from \"./styles\";\r\n\r\ntype FormField = {\r\n  label: string;\r\n  labelWidth: number;\r\n  type: string;\r\n  required: boolean;\r\n};\r\n\r\ninterface Props {\r\n  formHeader: string;\r\n  formFields: FormField[];\r\n  fieldErrors: boolean[];\r\n  buttonText: string;\r\n  displayButtonSibling: boolean;\r\n  buttonSibling: React.ReactNode;\r\n  onSubmit: (fields: string[]) => () => void;\r\n  suggest?: boolean;\r\n}\r\n\r\ninterface State {\r\n  fields: string[];\r\n  showPassword: boolean;\r\n}\r\n\r\nexport default (props: Props) => {\r\n  const classes = useStyles();\r\n\r\n  const [values, setValues] = React.useState<State>({\r\n    fields: props.fieldErrors.map(() => \"\"),\r\n    showPassword: false,\r\n  });\r\n\r\n  const handleClickShowPassword = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword });\r\n  };\r\n\r\n  const handleMouseDownPassword = (\r\n    event: React.MouseEvent<HTMLButtonElement>\r\n  ) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const handleFieldChange = (index: number) => (\r\n    event: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    let copy: string[] = values.fields;\r\n    copy[index] = event.target.value;\r\n    setValues({ ...values, fields: copy });\r\n  };\r\n\r\n  const fieldNodes = props.formFields.map((formField, index) => (\r\n    <FormControl\r\n      className={clsx(classes.margin, classes.textField)}\r\n      variant=\"outlined\"\r\n      key={formField.label}\r\n    >\r\n      <InputLabel className={props.fieldErrors[index] ? \"error\" : \"\"}>\r\n        {formField.label}\r\n      </InputLabel>\r\n      {formField.type !== \"password\" ? (\r\n        <OutlinedInput\r\n          required={formField.required}\r\n          error={props.fieldErrors[index]}\r\n          type={formField.type}\r\n          value={values.fields[index]}\r\n          labelWidth={formField.labelWidth}\r\n          onChange={handleFieldChange(index)}\r\n        />\r\n      ) : (\r\n        <OutlinedInput\r\n          required={formField.required}\r\n          type={values.showPassword ? \"text\" : \"password\"}\r\n          error={props.fieldErrors[index]}\r\n          onChange={handleFieldChange(index)}\r\n          onKeyDown={(event: React.KeyboardEvent): void => {\r\n            if (event.keyCode === 13) {\r\n              event.preventDefault();\r\n              event.stopPropagation();\r\n              props.onSubmit(values.fields)();\r\n            }\r\n          }}\r\n          endAdornment={\r\n            <InputAdornment position=\"end\">\r\n              <IconButton\r\n                aria-label=\"toggle password visibility\"\r\n                onClick={handleClickShowPassword}\r\n                onMouseDown={handleMouseDownPassword}\r\n                edge=\"end\"\r\n              >\r\n                {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n              </IconButton>\r\n            </InputAdornment>\r\n          }\r\n          labelWidth={70}\r\n          autoComplete={props.suggest ? \"on\" : \"off\"}\r\n        />\r\n      )}\r\n    </FormControl>\r\n  ));\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <DarkWidgetWrapper>\r\n        <FormWidget>\r\n          <FormHeader>{props.formHeader}</FormHeader>\r\n          <FormWrapper>\r\n            {fieldNodes}\r\n            <FormSection setMargin={props.displayButtonSibling}>\r\n              <Button\r\n                className=\"formButton hoverfx\"\r\n                onClick={props.onSubmit(values.fields)}\r\n              >\r\n                {props.buttonText}\r\n              </Button>\r\n              {props.displayButtonSibling ? (\r\n                props.buttonSibling\r\n              ) : (\r\n                <React.Fragment />\r\n              )}\r\n            </FormSection>\r\n          </FormWrapper>\r\n        </FormWidget>\r\n      </DarkWidgetWrapper>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectDemoMode } from \"../../flux/slices/demoSlice\";\r\nimport FormPage from \"../formPage\";\r\nimport HyperLink from \"../../components/global/hyperLink\";\r\nimport { toast } from \"react-toastify\";\r\nimport Routes from \"../../constants/routes\";\r\nimport Endpoints from \"../../constants/api\";\r\nimport API from \"../../api\";\r\nimport styled from \"styled-components\";\r\n\r\nexport default () => {\r\n  const dispatch = useDispatch();\r\n  const demoMode: boolean = useSelector(selectDemoMode);\r\n  const [error, setError] = React.useState(false);\r\n\r\n  const verifyValues = (fields: string[]) => () => {\r\n    if (demoMode) {\r\n      toast.error(\r\n        \"Sorry, this feature is unavailable. Reload the page to exit the demo.\"\r\n      );\r\n      return;\r\n    }\r\n    // verify inputs\r\n    fetch(Endpoints.LOGIN, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        tag: fields[0],\r\n        password: fields[1],\r\n      }),\r\n    })\r\n      .then(() => {\r\n        dispatch(API.loadSession(() => setError(true)));\r\n      })\r\n      .catch(() => {\r\n        toast.error(\"Error, please try again.\");\r\n        setError(true);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <FormPage\r\n      formHeader=\"Login\"\r\n      formFields={[\r\n        {\r\n          label: \"Username\",\r\n          labelWidth: 75,\r\n          type: \"text\",\r\n          required: true,\r\n        },\r\n        {\r\n          label: \"Password\",\r\n          labelWidth: 70,\r\n          type: \"password\",\r\n          required: true,\r\n        },\r\n      ]}\r\n      fieldErrors={[error, error]}\r\n      buttonText=\"Login\"\r\n      displayButtonSibling={true}\r\n      buttonSibling={\r\n        <LinkWrapper>\r\n          <HyperLink to={Routes.FORGOT_PASS}>Forgot Password?</HyperLink>\r\n        </LinkWrapper>\r\n      }\r\n      onSubmit={verifyValues}\r\n      suggest={true}\r\n    />\r\n  );\r\n};\r\n\r\nconst LinkWrapper = styled.div`\r\n  width: 40%;\r\n  font-size: 1rem;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n`;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectDemoMode } from \"../../flux/slices/demoSlice\";\r\nimport { addUsers } from \"../../flux/slices/contextSlice\";\r\nimport { getUserFromDTO } from \"../../constants/user\";\r\nimport FormPage from \"../formPage\";\r\nimport Endpoints from \"../../constants/api\";\r\nimport API from \"../../api\";\r\nimport { toast } from \"react-toastify\";\r\n\r\ninterface State {\r\n  emailError: boolean;\r\n  usernameError: boolean;\r\n  passwordError: boolean;\r\n}\r\n\r\nexport default () => {\r\n  const dispatch = useDispatch();\r\n  const demoMode: boolean = useSelector(selectDemoMode);\r\n  const [values, setValues] = React.useState<State>({\r\n    emailError: false,\r\n    usernameError: false,\r\n    passwordError: false,\r\n  });\r\n\r\n  const evaluateError = (err: any): void => {\r\n    try {\r\n      const keys = Object.keys(err.errors);\r\n      // Generate toasts\r\n      keys.forEach((key) =>\r\n        err.errors[key].map((msg: string) => toast.error(msg))\r\n      );\r\n\r\n      // Check if the error messages are of a specific type (for instance, are there\r\n      // any errors related to passwords?)\r\n      const getBlame = (match: string): boolean => {\r\n        for (var key of keys) if (key.includes(match)) return true;\r\n        return false;\r\n      };\r\n\r\n      setValues({\r\n        emailError: getBlame(\"email\"),\r\n        usernameError: getBlame(\"name\") ? true : getBlame(\"tag\"),\r\n        passwordError: getBlame(\"password\"),\r\n      });\r\n    } catch {}\r\n  };\r\n\r\n  const verifyValues = (fields: string[]) => () => {\r\n    if (demoMode) {\r\n      toast.error(\r\n        \"Sorry, this feature is unavailable. Reload the page to exit the demo.\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    fetch(Endpoints.REGISTER, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        email: fields[0],\r\n        tag: fields[1],\r\n        password: fields[2],\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res: any) => {\r\n        if (res.Tag === undefined && res.status !== undefined) {\r\n          evaluateError(res);\r\n        } else {\r\n          dispatch(addUsers([getUserFromDTO(res)]));\r\n          dispatch(\r\n            API.loadSession(() => {\r\n              toast.error(\"Something went wrong; please try again.\");\r\n            })\r\n          );\r\n        }\r\n      })\r\n      .catch((err) => evaluateError(err));\r\n  };\r\n\r\n  return (\r\n    <FormPage\r\n      formHeader=\"Register\"\r\n      formFields={[\r\n        {\r\n          label: \"Email\",\r\n          labelWidth: 40,\r\n          type: \"email\",\r\n          required: true,\r\n        },\r\n        {\r\n          label: \"Username\",\r\n          labelWidth: 75,\r\n          type: \"text\",\r\n          required: true,\r\n        },\r\n        {\r\n          label: \"Password\",\r\n          labelWidth: 70,\r\n          type: \"password\",\r\n          required: true,\r\n        },\r\n      ]}\r\n      fieldErrors={[\r\n        values.emailError,\r\n        values.usernameError,\r\n        values.passwordError,\r\n      ]}\r\n      buttonText=\"Register\"\r\n      displayButtonSibling={false}\r\n      buttonSibling={<React.Fragment />}\r\n      onSubmit={verifyValues}\r\n    />\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setDemo } from \"../../flux/slices/authSlice\";\r\nimport { seedData } from \"../../flux/slices/contextSlice\";\r\nimport { initDemoSlice } from \"../../flux/slices/demoSlice\";\r\nimport { generateDataSet, DataSet } from \"../../seed\";\r\nimport {\r\n  DarkWidgetWrapper,\r\n  DarkWidget,\r\n} from \"../../components/container/darkWidget\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport styled from \"styled-components\";\r\nimport { setRecentActivity } from \"../../flux/slices/homeSlice\";\r\n\r\nexport default () => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <DarkWidgetWrapper>\r\n      <Container>\r\n        <Button\r\n          onClick={() => {\r\n            const dataSet: DataSet = generateDataSet();\r\n            dispatch(setDemo(dataSet));\r\n            dispatch(setRecentActivity(dataSet.activity.map((a) => a.id)));\r\n            dispatch(seedData(dataSet));\r\n            dispatch(initDemoSlice(dataSet));\r\n          }}\r\n        >\r\n          <Icon className=\"icon\">perm_contact_calendar</Icon>\r\n          <h1>Demo Login</h1>\r\n        </Button>\r\n      </Container>\r\n    </DarkWidgetWrapper>\r\n  );\r\n};\r\n\r\nconst Container = styled(DarkWidget)`\r\n  width: auto;\r\n  padding: 0 !important;\r\n`;\r\n\r\nconst Button = styled(ButtonBase)`\r\n  border-radius: 5px !important;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 3rem !important;\r\n\r\n  .icon {\r\n    color: var(--text-color);\r\n    font-size: 7rem;\r\n  }\r\n\r\n  h1 {\r\n    font-family: \"Roboto\";\r\n    font-size: 1.5rem;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport {\r\n  DarkWidgetWrapper,\r\n  DarkWidget,\r\n  DarkWidgetHeader,\r\n  DarkWidgetSection,\r\n} from \"../../components/container/darkWidget\";\r\nimport { toast } from \"react-toastify\";\r\nimport TextFieldButton from \"../../components/input/textfieldButton\";\r\nimport styled from \"styled-components\";\r\n\r\nexport default () => {\r\n  return (\r\n    <DarkWidgetWrapper>\r\n      <Container>\r\n        <DarkWidgetHeader>Forgot Password</DarkWidgetHeader>\r\n        <Content>\r\n          <TextFieldButton\r\n            label=\"Email\"\r\n            labelWidth={40}\r\n            defaultValue=\"\"\r\n            clearInputOnSubmit={true}\r\n            editable={true}\r\n            buttonIconName=\"send\"\r\n            onSubmit={(value: string | undefined) => {\r\n              if (value) {\r\n                // make a post request to the backend\r\n                toast.success(\r\n                  \"You will recieve a url to reset your password soon. This url will expire after 30 minutes. If you do not recieve an e-mail within 5 minutes, please check your junk folder before trying again.\",\r\n                  { autoClose: false }\r\n                );\r\n              }\r\n            }}\r\n            className=\"\"\r\n          />\r\n        </Content>\r\n      </Container>\r\n    </DarkWidgetWrapper>\r\n  );\r\n};\r\n\r\nconst Container = styled(DarkWidget)`\r\n  width: 600px;\r\n\r\n  @media (max-width: 700px) {\r\n    width: 90vw;\r\n  }\r\n`;\r\n\r\nconst Content = styled(DarkWidgetSection)`\r\n  @media (max-width: 700px) {\r\n    margin-top: 0.5rem;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport Routes from \"../../constants/routes\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { selectAuthenticated, logout } from \"../../flux/slices/authSlice\";\r\nimport { theme, useStyles } from \"../../constants/materialui\";\r\nimport { DarkWidgetWrapper } from \"../../components/container/darkWidget\";\r\nimport clsx from \"clsx\";\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport Button from \"../../components/input/button\";\r\nimport { toast } from \"react-toastify\";\r\nimport history from \"../history\";\r\nimport {\r\n  FormWrapper,\r\n  FormWidget,\r\n  FormHeader,\r\n  FormSection,\r\n} from \"../formPage/styles\";\r\n\r\nconst checkTokenValidity = (token: string): boolean => {\r\n  let valid: boolean = true;\r\n  // send token to backend for validation (fetch req)\r\n  return valid;\r\n};\r\n\r\nexport default ({ match }: { match: any }) => {\r\n  const dispatch = useDispatch();\r\n  const authenticated: boolean = useSelector(selectAuthenticated);\r\n  const classes = useStyles();\r\n  const [showPassword, setVisibility] = React.useState([false, false]);\r\n  const [fields, setFields] = React.useState([\"\", \"\"]);\r\n  const [error, setError] = React.useState(false);\r\n\r\n  if (!checkTokenValidity(match.params.token))\r\n    history.push(Routes.INVALID_TOKEN);\r\n  if (authenticated) dispatch(logout());\r\n\r\n  const handleFieldChange = (index: number) => (\r\n    event: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    let copy: string[] = fields;\r\n    copy[index] = event.target.value;\r\n    setFields(copy);\r\n  };\r\n\r\n  const submit = () => {\r\n    if (fields[0] !== fields[1]) {\r\n      setError(true);\r\n      toast.error(\"Passwords do not match.\");\r\n      return;\r\n    }\r\n    // make a post request resetting password\r\n  };\r\n\r\n  const fieldNodes = [\"New Password\", \"Confirm Password\"].map(\r\n    (formField, index) => (\r\n      <FormControl\r\n        className={clsx(classes.margin, classes.textField)}\r\n        variant=\"outlined\"\r\n        key={formField}\r\n      >\r\n        <InputLabel className={error ? \"error\" : \"\"}>{formField}</InputLabel>\r\n        <OutlinedInput\r\n          required={true}\r\n          type={showPassword[index] ? \"text\" : \"password\"}\r\n          error={error}\r\n          onChange={handleFieldChange(index)}\r\n          endAdornment={\r\n            <InputAdornment position=\"end\">\r\n              <IconButton\r\n                className=\"\"\r\n                aria-label=\"toggle password visibility\"\r\n                onClick={() => {\r\n                  let copy: boolean[] = Object.assign([], showPassword);\r\n                  copy[index] = !showPassword[index];\r\n                  setVisibility(copy);\r\n                }}\r\n                onMouseDown={(event: React.MouseEvent<HTMLButtonElement>) =>\r\n                  event.preventDefault()\r\n                }\r\n                edge=\"end\"\r\n              >\r\n                {showPassword[index] ? <Visibility /> : <VisibilityOff />}\r\n              </IconButton>\r\n            </InputAdornment>\r\n          }\r\n          labelWidth={index === 0 ? 108 : 133}\r\n        />\r\n      </FormControl>\r\n    )\r\n  );\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <DarkWidgetWrapper>\r\n        <FormWidget>\r\n          <FormHeader>Reset Password</FormHeader>\r\n          <FormWrapper>\r\n            {fieldNodes}\r\n            <FormSection setMargin={false}>\r\n              <Button className=\"formButton hoverfx\" onClick={submit}>\r\n                Submit\r\n              </Button>\r\n            </FormSection>\r\n          </FormWrapper>\r\n        </FormWidget>\r\n      </DarkWidgetWrapper>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectUserInfo } from \"../../../flux/slices/userSlice\";\r\nimport { WidgetWrapper } from \"../../../components/container/widget\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport { RankObject, getRankObj } from \"../../../constants/user\";\r\nimport styled from \"styled-components\";\r\n\r\nexport default () => {\r\n  const user = useSelector(selectUserInfo);\r\n  const rank: RankObject = getRankObj(user.rank);\r\n\r\n  return (\r\n    <Container>\r\n      <ProfileCard>\r\n        <Avatar\r\n          src={user.profileImg}\r\n          style={{\r\n            width: \"140px\",\r\n            height: \"140px\",\r\n            margin: \"auto\",\r\n          }}\r\n        />\r\n        <CardBody>\r\n          <h1>{user.tag}</h1>\r\n          <Chip\r\n            style={{\r\n              color: \"white\",\r\n              backgroundColor: `var(--theme-${rank.badgeColor})`,\r\n            }}\r\n            variant=\"outlined\"\r\n            size=\"medium\"\r\n            label={rank.name}\r\n          />\r\n        </CardBody>\r\n      </ProfileCard>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst Container = styled(WidgetWrapper)`\r\n  max-width: 95vw;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 1rem 1.5rem;\r\n`;\r\n\r\nconst ProfileCard = styled.div`\r\n  display: column;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst CardBody = styled.div`\r\n  padding-right: 1rem;\r\n  margin-left: 1rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n\r\n  h1 {\r\n    margin: 1rem 0 0.5rem;\r\n    font-size: 1.3rem;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectUserInfo } from \"../../../flux/slices/userSlice\";\r\nimport { selectUserRank } from \"../../../flux/slices/authSlice\";\r\nimport { keyToIndex, mapEnumToSelectOption } from \"../../../constants/global\";\r\nimport { Rank } from \"../../../constants/user\";\r\nimport {\r\n  WidgetWrapper,\r\n  WidgetHeader,\r\n} from \"../../../components/container/widget\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport Select from \"../../../components/input/select\";\r\nimport EditControls from \"../../../components/input/editControls\";\r\nimport { toast } from \"react-toastify\";\r\nimport styled from \"styled-components\";\r\nimport API from \"../../../api\";\r\n\r\nexport default () => {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(selectUserInfo);\r\n  const clientRank = useSelector(selectUserRank);\r\n  const [rank, setRank] = React.useState(user.rank);\r\n\r\n  const updateRank = () => {\r\n    if (clientRank >= rank && clientRank > user.rank)\r\n      dispatch(API.updateUserRank(rank));\r\n    else\r\n      toast.error(\r\n        \"You do not have sufficient permissions to perform this operation.\"\r\n      );\r\n  };\r\n\r\n  return (\r\n    <Container className=\"rank\">\r\n      <WidgetHeader>\r\n        <Icon>security</Icon>\r\n        <h1>Update Rank</h1>\r\n      </WidgetHeader>\r\n      <SelectWrapper\r\n        children={\r\n          <Select\r\n            fixedWidth={false}\r\n            width={150}\r\n            mobileWidth={115}\r\n            onChange={(newValue: string) => setRank(keyToIndex(newValue, Rank))}\r\n            options={mapEnumToSelectOption(\"Rank\", Rank)}\r\n            value={rank}\r\n          />\r\n        }\r\n      />\r\n      <EditControls\r\n        showCancel={false}\r\n        cancelCallback={() => {}}\r\n        submitCallback={updateRank}\r\n        submitText={\"Submit\"}\r\n        className=\"editControls\"\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst Container = styled(WidgetWrapper)`\r\n  max-width: 95vw;\r\n  width: 100%;\r\n  height: 100%;\r\n  justify-content: flex-start;\r\n\r\n  .editControls {\r\n    margin-top: 0.5rem;\r\n  }\r\n`;\r\n\r\nconst SelectWrapper = styled.div`\r\n  width: 100%;\r\n  padding: 1rem;\r\n  margin-top: 0.5rem;\r\n`;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  selectStaged,\r\n  setStaged,\r\n  selectUserInfo,\r\n} from \"../../../flux/slices/userSlice\";\r\nimport { selectUser } from \"../../../flux/slices/authSlice\";\r\nimport {\r\n  WidgetWrapper,\r\n  WidgetHeader,\r\n  WidgetSection,\r\n} from \"../../../components/container/widget\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport TextfieldButton from \"../../../components/input/textfieldButton\";\r\nimport { toast } from \"react-toastify\";\r\nimport styled from \"styled-components\";\r\nimport { UserInfo, Rank } from \"../../../constants/user\";\r\nimport API from \"../../../api\";\r\n\r\nexport default () => {\r\n  // local client\r\n  const client: UserInfo = useSelector(selectUser).info;\r\n  // user whose profile we are viewing\r\n  const user: UserInfo = useSelector(selectUserInfo);\r\n  const dispatch = useDispatch();\r\n  const stagedUrl = useSelector(selectStaged);\r\n\r\n  return (\r\n    <Container className=\"update\">\r\n      <WidgetHeader>\r\n        <Icon className=\"inline-icon\">publish</Icon>\r\n        <h1>Upload Avatar Image</h1>\r\n      </WidgetHeader>\r\n      <Update>\r\n        <Avatar\r\n          src={stagedUrl}\r\n          style={{\r\n            width: \"60px\",\r\n            height: \"60px\",\r\n          }}\r\n        />\r\n        <TextfieldButton\r\n          label=\"Paste an avatar url here\"\r\n          labelWidth={172}\r\n          defaultValue=\"\"\r\n          clearInputOnSubmit={true}\r\n          editable={true}\r\n          buttonIconName=\"update\"\r\n          onSubmit={() => {\r\n            // if client == user (i.e. the client is viewing their own profile) or\r\n            // if client is an administrator, this operation is allowed\r\n            if (client.tag === user.tag || client.rank === Rank.Admin)\r\n              dispatch(API.updateUserAvatar());\r\n            else\r\n              toast.error(\r\n                \"You do not have sufficient permissions to perform this operation.\"\r\n              );\r\n          }}\r\n          className=\"textfieldButton\"\r\n          onChange={(newValue: string) => dispatch(setStaged(newValue))}\r\n          inputValue={stagedUrl}\r\n        />\r\n      </Update>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst Container = styled(WidgetWrapper)`\r\n  width: 95%;\r\n`;\r\n\r\nconst Update = styled(WidgetSection)`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  .textfieldButton {\r\n    margin-top: 1rem;\r\n    margin-left: 1rem;\r\n    width: calc(100% - 60px - 1rem);\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  margin: 0 auto;\r\n  max-width: 95vw;\r\n  display: grid;\r\n  justify-content: center;\r\n  align-items: center;\r\n  grid-gap: 2rem;\r\n  grid-template-columns: 1fr 1fr 1fr;\r\n\r\n  h1 {\r\n    margin-left: 0.5rem;\r\n  }\r\n\r\n  .recentActivity,\r\n  .ticketSet {\r\n    width: 550px;\r\n    align-self: flex-start;\r\n    height: 100%;\r\n    justify-content: flex-start;\r\n  }\r\n\r\n  .activityNode {\r\n    height: 88.62px;\r\n  }\r\n\r\n  @media (max-width: 1800px) and (min-width: 950px) {\r\n    grid-template-columns: 1fr 1fr;\r\n\r\n    .recentActivity,\r\n    .ticketSet {\r\n      width: auto;\r\n      align-self: flex-start;\r\n      height: 100%;\r\n      justify-content: flex-start;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 950px) {\r\n    grid-template-columns: 1fr;\r\n\r\n    .recentActivity,\r\n    .ticketSet {\r\n      margin: 0 auto;\r\n      width: 95%;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const WidgetColumn = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  width: auto;\r\n  align-self: flex-start;\r\n\r\n  .update {\r\n    width: 100%;\r\n  }\r\n\r\n  .rank {\r\n    margin-left: auto;\r\n  }\r\n\r\n  @media (max-width: 950px) {\r\n    .update {\r\n      width: 95%;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const WidgetRow = styled.div`\r\n  max-width: 95vw;\r\n  width: 100%;\r\n  display: grid;\r\n  grid-template-columns: auto auto;\r\n  padding-bottom: 2rem;\r\n  grid-gap: 2rem;\r\n  flex-direction: row;\r\n  align-items: center;\r\n\r\n  @media (max-width: 950px) {\r\n    width: 95%;\r\n  }\r\n\r\n  @media (max-width: 600px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  selectLoadState,\r\n  selectActivity,\r\n  selectTickets,\r\n} from \"../../flux/slices/userSlice\";\r\nimport API from \"../../api\";\r\nimport ProfileCard from \"./profileCard\";\r\nimport Rank from \"./rank\";\r\nimport Update from \"./update\";\r\nimport IterableWidget from \"../../components/global/iterableWidget\";\r\nimport CollapsedTicketComp from \"../../components/global/collapsedTicket\";\r\nimport RecentActivity from \"../../components/global/recentActivity\";\r\nimport { Notification } from \"../../constants/notification\";\r\nimport { CollapsedTicket } from \"../../constants/ticket\";\r\nimport styled from \"styled-components\";\r\nimport LoadingRing from \"../../components/global/loadingRing/LoadingRing\";\r\nimport { Container, WidgetColumn, WidgetRow } from \"./styles\";\r\n\r\nconst LoadWrapper = styled.div`\r\n  position: fixed;\r\n  left: calc(0.5 * (100vw - 152.2px));\r\n  top: 35vh;\r\n\r\n  @media (max-width: 600px) {\r\n    position: static;\r\n    padding-top: 25vh;\r\n    height: calc(100vh - var(--nav-height) - var(--mobile-nav-height) - 1.5rem);\r\n  }\r\n`;\r\n\r\nexport default ({ match }: { match: any }) => {\r\n  const dispatch = useDispatch();\r\n  React.useEffect(() => {\r\n    dispatch(API.loadUserByTag(match.params.tag));\r\n  }, [dispatch, match.params.tag]);\r\n  const loading: boolean = useSelector(selectLoadState);\r\n  // remove notifications related to avatar and rank updates\r\n  const recentActivity: Notification[] = useSelector(selectActivity).filter(\r\n    (notification) => notification.message < 11\r\n  );\r\n  const tickets: CollapsedTicket[] = useSelector(selectTickets);\r\n\r\n  return loading ? (\r\n    <LoadWrapper>\r\n      <LoadingRing />\r\n    </LoadWrapper>\r\n  ) : (\r\n    <Container>\r\n      <WidgetColumn>\r\n        <WidgetRow>\r\n          <ProfileCard />\r\n          <Rank />\r\n        </WidgetRow>\r\n        <Update />\r\n      </WidgetColumn>\r\n      <IterableWidget\r\n        className=\"ticketSet\"\r\n        iconName=\"confirmation_number\"\r\n        title=\"Issues\"\r\n        elementsPerPage={window.innerWidth < 800 ? 5 : 4}\r\n        set={tickets}\r\n        wrapperElement={CollapsedTicketComp}\r\n        defaultProps={{}}\r\n        elementPropName=\"ticket\"\r\n        emptySetFallback=\"This user has not yet submitted any issues\"\r\n      />\r\n      <RecentActivity\r\n        notificationSet={recentActivity}\r\n        className=\"recentActivity\"\r\n        nodeClassName=\"activityNode\"\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport ProtectedRoute from \"./protectedRoute\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nimport Routes from \"../constants/routes\";\r\n\r\n// Routes\r\nimport Home from \"./home\";\r\nimport Dashboard from \"./dashboard\";\r\nimport ErrorPage from \"./errorPage\";\r\nimport Login from \"./login\";\r\nimport Register from \"./register\";\r\nimport DemoLogin from \"./demoLogin\";\r\nimport ForgotPassword from \"./forgotPassword\";\r\nimport ResetPassword from \"./resetPassword\";\r\nimport User from \"./user\";\r\n\r\nexport default () => {\r\n  return (\r\n    <Switch>\r\n      <Route path={Routes.HOME} exact={true} component={Home} />\r\n      <ProtectedRoute\r\n        requireAuth={true}\r\n        path={Routes.DASHBOARD}\r\n        component={<Dashboard />}\r\n      />\r\n      <ProtectedRoute\r\n        requireAuth={false}\r\n        path={Routes.DEMO}\r\n        component={<DemoLogin />}\r\n        exact={true}\r\n      />\r\n      <ProtectedRoute\r\n        requireAuth={false}\r\n        path={Routes.REGISTER}\r\n        component={<Register />}\r\n      />\r\n      <ProtectedRoute\r\n        requireAuth={false}\r\n        path={Routes.LOGIN}\r\n        component={<Login />}\r\n      />\r\n      <ProtectedRoute\r\n        requireAuth={false}\r\n        path={Routes.FORGOT_PASS}\r\n        component={<ForgotPassword />}\r\n      />\r\n      <Route path={`${Routes.RESET_PASS}/:token`} component={ResetPassword} />\r\n      <Route path={`${Routes.USER}/:tag`} component={User} />\r\n      {/* Error Pages */}\r\n      <Route\r\n        path={Routes.LOGIN_REQUIRED}\r\n        render={() => (\r\n          <ErrorPage\r\n            width=\"660px\"\r\n            header=\"Auth Error\"\r\n            bodyText=\"Sorry, you must be logged in to access that resource. \"\r\n            linkText=\"Go to Login Page.\"\r\n            linkHref={Routes.LOGIN}\r\n          />\r\n        )}\r\n      />\r\n      <Route\r\n        path={Routes.INVALID_TOKEN}\r\n        render={() => (\r\n          <ErrorPage\r\n            width=\"660px\"\r\n            header=\"Invalid Token\"\r\n            bodyText=\"Sorry, your token has expired. \"\r\n            linkText=\"Go to Forgot Password Page.\"\r\n            linkHref={Routes.FORGOT_PASS}\r\n          />\r\n        )}\r\n      />\r\n      {\r\n        // The route below is special in that if\r\n        // no other route is matched, the user\r\n        // is automatically redirected there.\r\n      }\r\n      <Route\r\n        render={() => (\r\n          <ErrorPage\r\n            width=\"660px\"\r\n            header=\"404 Error\"\r\n            bodyText=\"Sorry, that page doesn't exist. \"\r\n            linkText=\"Go to Home Page.\"\r\n            linkHref={Routes.HOME}\r\n          />\r\n        )}\r\n      />\r\n    </Switch>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { hot } from \"react-hot-loader/root\";\r\n\r\nimport { initialState, selectAuthSlice } from \"../flux/slices/authSlice\";\r\nimport API from \"../api\";\r\n\r\nimport FancyLoading, {\r\n  LoadWrapper,\r\n} from \"../components/global/loadingRing/FancyLoading\";\r\nimport ContentWrapper from \"../components/container/contentWrapper\";\r\nimport ToastContainer from \"../components/global/toastContainer\";\r\n\r\nimport Navigation from \"../components/global/navigation\";\r\nimport { selectSideNavWidth } from \"../flux/slices/navigationSlice\";\r\n\r\nimport TicketModal from \"../components/global/ticket\";\r\n\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport Routes from \"../routes/Routes\";\r\n\r\nimport \"./App.css\";\r\n\r\nconst Context = React.createContext(initialState);\r\n\r\nexport default hot(() => {\r\n  const dispatch = useDispatch();\r\n\r\n  // initial load logic\r\n  React.useEffect(() => {\r\n    dispatch(API.initialLoad());\r\n  }, [dispatch]);\r\n\r\n  const authSlice = useSelector(selectAuthSlice);\r\n  const sideNavWidth = useSelector(selectSideNavWidth);\r\n  return (\r\n    <Context.Provider value={authSlice}>\r\n      {authSlice.loaded ? (\r\n        <HashRouter>\r\n          {/*\r\n            Navigation is a persistent component, present in all pages, so it is kept\r\n            outside the ContentWrapper. Note that Navigation must be within the Router\r\n            component because it uses a location hook\r\n          */}\r\n          <Navigation user={authSlice.user} />\r\n          <ContentWrapper {...{ sideNavWidth }}>\r\n            <Routes />\r\n          </ContentWrapper>\r\n          <TicketModal />\r\n          <ToastContainer />\r\n        </HashRouter>\r\n      ) : (\r\n        <LoadWrapper>\r\n          <FancyLoading />\r\n        </LoadWrapper>\r\n      )}\r\n    </Context.Provider>\r\n  );\r\n});\r\n","import { configureStore, ThunkAction, Action } from \"@reduxjs/toolkit\";\r\nimport authReducer from \"./slices/authSlice\";\r\nimport contextReducer from \"./slices/contextSlice\";\r\nimport navigationReducer from \"./slices/navigationSlice\";\r\nimport homeReducer from \"./slices/homeSlice\";\r\nimport ticketReducer from \"./slices/ticketSlice\";\r\nimport creationReducer from \"./slices/creationSlice\";\r\nimport userReducer from \"./slices/userSlice\";\r\nimport dashboardReducer from \"./slices/dashboardSlice\";\r\nimport demoReducer from \"./slices/demoSlice\";\r\n\r\n// All reducers must be declared here!\r\nexport const store = configureStore({\r\n  reducer: {\r\n    authentication: authReducer,\r\n    context: contextReducer,\r\n    navigation: navigationReducer,\r\n    home: homeReducer,\r\n    ticket: ticketReducer,\r\n    creation: creationReducer,\r\n    user: userReducer,\r\n    dashboard: dashboardReducer,\r\n    demo: demoReducer,\r\n  },\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n>;\r\n","import React from \"react\";\r\nimport App from \"./App\";\r\nimport { store } from \"../flux/store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\n// A higher order class component; its sole purpose is to\r\n// force a re-render whenever the viewport is resized.\r\n// The logic was not placed in App.tsx because this is\r\n// not directly related to the routing or authentication\r\n// of the component.\r\n\r\nexport default class extends React.Component<{}, {}> {\r\n  listener = () => this.forceUpdate();\r\n\r\n  componentDidMount = () => window.addEventListener(\"resize\", this.listener);\r\n\r\n  componentWillUnmount = () =>\r\n    window.removeEventListener(\"resize\", this.listener);\r\n\r\n  render = () => (\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./app\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}